/*     */ package minecraft.com.jcraft.jorbis;
/*     */ 
/*     */ import com.jcraft.jogg.Buffer;
/*     */ 
/*     */ class Mapping0 extends FuncMapping
/*     */ {
/*  32 */   static int seq = 0;
/*     */   float[][] pcmbundle;
/*     */   int[] zerobundle;
/*     */   int[] nonzero;
/*     */   Object[] floormemo;
/*     */ 
/*     */   Mapping0()
/*     */   {
/* 186 */     this.pcmbundle = ((float[][])null);
/* 187 */     this.zerobundle = null;
/* 188 */     this.nonzero = null;
/* 189 */     this.floormemo = null;
/*     */   }
/*     */ 
/*     */   void free_info(Object paramObject)
/*     */   {
/*     */   }
/*     */ 
/*     */   void free_look(Object paramObject)
/*     */   {
/*     */   }
/*     */ 
/*     */   Object look(DspState paramDspState, InfoMode paramInfoMode, Object paramObject)
/*     */   {
/*  42 */     Info localInfo = paramDspState.vi;
/*  43 */     Mapping0.LookMapping0 localLookMapping0 = new Mapping0.LookMapping0(this);
/*  44 */     Mapping0.InfoMapping0 localInfoMapping0 = localLookMapping0.map = (Mapping0.InfoMapping0)paramObject;
/*  45 */     localLookMapping0.mode = paramInfoMode;
/*     */ 
/*  47 */     localLookMapping0.time_look = new Object[localInfoMapping0.submaps];
/*  48 */     localLookMapping0.floor_look = new Object[localInfoMapping0.submaps];
/*  49 */     localLookMapping0.residue_look = new Object[localInfoMapping0.submaps];
/*     */ 
/*  51 */     localLookMapping0.time_func = new FuncTime[localInfoMapping0.submaps];
/*  52 */     localLookMapping0.floor_func = new FuncFloor[localInfoMapping0.submaps];
/*  53 */     localLookMapping0.residue_func = new FuncResidue[localInfoMapping0.submaps];
/*     */ 
/*  55 */     for (int i = 0; i < localInfoMapping0.submaps; i++) {
/*  56 */       int j = localInfoMapping0.timesubmap[i];
/*  57 */       int k = localInfoMapping0.floorsubmap[i];
/*  58 */       int m = localInfoMapping0.residuesubmap[i];
/*     */ 
/*  60 */       localLookMapping0.time_func[i] = FuncTime.time_P[localInfo.time_type[j]];
/*  61 */       localLookMapping0.time_look[i] = localLookMapping0.time_func[i].look(paramDspState, paramInfoMode, localInfo.time_param[j]);
/*  62 */       localLookMapping0.floor_func[i] = FuncFloor.floor_P[localInfo.floor_type[k]];
/*  63 */       localLookMapping0.floor_look[i] = localLookMapping0.floor_func[i].look(paramDspState, paramInfoMode, localInfo.floor_param[k]);
/*     */ 
/*  65 */       localLookMapping0.residue_func[i] = FuncResidue.residue_P[localInfo.residue_type[m]];
/*  66 */       localLookMapping0.residue_look[i] = localLookMapping0.residue_func[i].look(paramDspState, paramInfoMode, localInfo.residue_param[m]);
/*     */     }
/*     */ 
/*  71 */     if ((localInfo.psys != 0) && (paramDspState.analysisp != 0));
/*  75 */     localLookMapping0.ch = localInfo.channels;
/*     */ 
/*  77 */     return localLookMapping0;
/*     */   }
/*     */ 
/*     */   void pack(Info paramInfo, Object paramObject, Buffer paramBuffer) {
/*  81 */     Mapping0.InfoMapping0 localInfoMapping0 = (Mapping0.InfoMapping0)paramObject;
/*     */ 
/*  90 */     if (localInfoMapping0.submaps > 1) {
/*  91 */       paramBuffer.write(1, 1);
/*  92 */       paramBuffer.write(localInfoMapping0.submaps - 1, 4);
/*     */     }
/*     */     else {
/*  95 */       paramBuffer.write(0, 1);
/*     */     }
/*     */ 
/*  98 */     if (localInfoMapping0.coupling_steps > 0) {
/*  99 */       paramBuffer.write(1, 1);
/* 100 */       paramBuffer.write(localInfoMapping0.coupling_steps - 1, 8);
/* 101 */       for (i = 0; i < localInfoMapping0.coupling_steps; i++) {
/* 102 */         paramBuffer.write(localInfoMapping0.coupling_mag[i], Util.ilog2(paramInfo.channels));
/* 103 */         paramBuffer.write(localInfoMapping0.coupling_ang[i], Util.ilog2(paramInfo.channels));
/*     */       }
/*     */     }
/*     */     else {
/* 107 */       paramBuffer.write(0, 1);
/*     */     }
/*     */ 
/* 110 */     paramBuffer.write(0, 2);
/*     */ 
/* 113 */     if (localInfoMapping0.submaps > 1) {
/* 114 */       for (i = 0; i < paramInfo.channels; i++)
/* 115 */         paramBuffer.write(localInfoMapping0.chmuxlist[i], 4);
/*     */     }
/* 117 */     for (int i = 0; i < localInfoMapping0.submaps; i++) {
/* 118 */       paramBuffer.write(localInfoMapping0.timesubmap[i], 8);
/* 119 */       paramBuffer.write(localInfoMapping0.floorsubmap[i], 8);
/* 120 */       paramBuffer.write(localInfoMapping0.residuesubmap[i], 8);
/*     */     }
/*     */   }
/*     */ 
/*     */   Object unpack(Info paramInfo, Buffer paramBuffer)
/*     */   {
/* 126 */     Mapping0.InfoMapping0 localInfoMapping0 = new Mapping0.InfoMapping0(this);
/*     */ 
/* 128 */     if (paramBuffer.read(1) != 0) {
/* 129 */       localInfoMapping0.submaps = (paramBuffer.read(4) + 1);
/*     */     }
/*     */     else {
/* 132 */       localInfoMapping0.submaps = 1;
/*     */     }
/*     */ 
/* 135 */     if (paramBuffer.read(1) != 0) {
/* 136 */       localInfoMapping0.coupling_steps = (paramBuffer.read(8) + 1);
/*     */ 
/* 138 */       for (i = 0; i < localInfoMapping0.coupling_steps; i++) {
/* 139 */         int j = localInfoMapping0.coupling_mag[i] = paramBuffer.read(Util.ilog2(paramInfo.channels));
/* 140 */         int k = localInfoMapping0.coupling_ang[i] = paramBuffer.read(Util.ilog2(paramInfo.channels));
/*     */ 
/* 142 */         if ((j >= 0) && (k >= 0) && (j != k) && (j < paramInfo.channels) && (k < paramInfo.channels)) {
/*     */           continue;
/*     */         }
/* 145 */         localInfoMapping0.free();
/* 146 */         return null;
/*     */       }
/*     */ 
/*     */     }
/*     */ 
/* 151 */     if (paramBuffer.read(2) > 0) {
/* 152 */       localInfoMapping0.free();
/* 153 */       return null;
/*     */     }
/*     */ 
/* 156 */     if (localInfoMapping0.submaps > 1) {
/* 157 */       for (i = 0; i < paramInfo.channels; i++) {
/* 158 */         localInfoMapping0.chmuxlist[i] = paramBuffer.read(4);
/* 159 */         if (localInfoMapping0.chmuxlist[i] >= localInfoMapping0.submaps) {
/* 160 */           localInfoMapping0.free();
/* 161 */           return null;
/*     */         }
/*     */       }
/*     */     }
/*     */ 
/* 166 */     for (int i = 0; i < localInfoMapping0.submaps; i++) {
/* 167 */       localInfoMapping0.timesubmap[i] = paramBuffer.read(8);
/* 168 */       if (localInfoMapping0.timesubmap[i] >= paramInfo.times) {
/* 169 */         localInfoMapping0.free();
/* 170 */         return null;
/*     */       }
/* 172 */       localInfoMapping0.floorsubmap[i] = paramBuffer.read(8);
/* 173 */       if (localInfoMapping0.floorsubmap[i] >= paramInfo.floors) {
/* 174 */         localInfoMapping0.free();
/* 175 */         return null;
/*     */       }
/* 177 */       localInfoMapping0.residuesubmap[i] = paramBuffer.read(8);
/* 178 */       if (localInfoMapping0.residuesubmap[i] >= paramInfo.residues) {
/* 179 */         localInfoMapping0.free();
/* 180 */         return null;
/*     */       }
/*     */     }
/* 183 */     return localInfoMapping0;
/*     */   }
/*     */ 
/*     */   synchronized int inverse(Block paramBlock, Object paramObject)
/*     */   {
/* 192 */     DspState localDspState = paramBlock.vd;
/* 193 */     Info localInfo = localDspState.vi;
/* 194 */     Mapping0.LookMapping0 localLookMapping0 = (Mapping0.LookMapping0)paramObject;
/* 195 */     Mapping0.InfoMapping0 localInfoMapping0 = localLookMapping0.map;
/* 196 */     InfoMode localInfoMode = localLookMapping0.mode;
/* 197 */     int i = paramBlock.pcmend = localInfo.blocksizes[paramBlock.W];
/*     */ 
/* 199 */     float[] arrayOfFloat1 = localDspState.window[paramBlock.W][paramBlock.lW][paramBlock.nW][localInfoMode.windowtype];
/* 200 */     if ((this.pcmbundle == null) || (this.pcmbundle.length < localInfo.channels)) {
/* 201 */       this.pcmbundle = new float[localInfo.channels][];
/* 202 */       this.nonzero = new int[localInfo.channels];
/* 203 */       this.zerobundle = new int[localInfo.channels];
/* 204 */       this.floormemo = new Object[localInfo.channels];
/*     */     }
/*     */     int m;
/*     */     int i1;
/* 213 */     for (int j = 0; j < localInfo.channels; j++) {
/* 214 */       float[] arrayOfFloat2 = paramBlock.pcm[j];
/* 215 */       m = localInfoMapping0.chmuxlist[j];
/*     */ 
/* 217 */       this.floormemo[j] = localLookMapping0.floor_func[m].inverse1(paramBlock, localLookMapping0.floor_look[m], this.floormemo[j]);
/*     */ 
/* 219 */       if (this.floormemo[j] != null) {
/* 220 */         this.nonzero[j] = 1;
/*     */       }
/*     */       else {
/* 223 */         this.nonzero[j] = 0;
/*     */       }
/* 225 */       for (i1 = 0; i1 < i / 2; i1++) {
/* 226 */         arrayOfFloat2[i1] = 0.0F;
/*     */       }
/*     */ 
/*     */     }
/*     */ 
/* 231 */     for (j = 0; j < localInfoMapping0.coupling_steps; j++) {
/* 232 */       if ((this.nonzero[localInfoMapping0.coupling_mag[j]] != 0) || (this.nonzero[localInfoMapping0.coupling_ang[j]] != 0)) {
/* 233 */         this.nonzero[localInfoMapping0.coupling_mag[j]] = 1;
/* 234 */         this.nonzero[localInfoMapping0.coupling_ang[j]] = 1;
/*     */       }
/*     */ 
/*     */     }
/*     */ 
/* 240 */     for (j = 0; j < localInfoMapping0.submaps; j++) {
/* 241 */       int k = 0;
/* 242 */       for (m = 0; m < localInfo.channels; m++) {
/* 243 */         if (localInfoMapping0.chmuxlist[m] == j) {
/* 244 */           if (this.nonzero[m] != 0) {
/* 245 */             this.zerobundle[k] = 1;
/*     */           }
/*     */           else {
/* 248 */             this.zerobundle[k] = 0;
/*     */           }
/* 250 */           this.pcmbundle[(k++)] = paramBlock.pcm[m];
/*     */         }
/*     */       }
/*     */ 
/* 254 */       localLookMapping0.residue_func[j].inverse(paramBlock, localLookMapping0.residue_look[j], this.pcmbundle, this.zerobundle, k);
/*     */     }
/*     */     float[] arrayOfFloat3;
/* 258 */     for (j = localInfoMapping0.coupling_steps - 1; j >= 0; j--) {
/* 259 */       arrayOfFloat3 = paramBlock.pcm[localInfoMapping0.coupling_mag[j]];
/* 260 */       float[] arrayOfFloat4 = paramBlock.pcm[localInfoMapping0.coupling_ang[j]];
/*     */ 
/* 262 */       for (i1 = 0; i1 < i / 2; i1++) {
/* 263 */         float f1 = arrayOfFloat3[i1];
/* 264 */         float f2 = arrayOfFloat4[i1];
/*     */ 
/* 266 */         if (f1 > 0.0F) {
/* 267 */           if (f2 > 0.0F) {
/* 268 */             arrayOfFloat3[i1] = f1;
/* 269 */             arrayOfFloat4[i1] = (f1 - f2);
/*     */           }
/*     */           else {
/* 272 */             arrayOfFloat4[i1] = f1;
/* 273 */             arrayOfFloat3[i1] = (f1 + f2);
/*     */           }
/*     */ 
/*     */         }
/* 277 */         else if (f2 > 0.0F) {
/* 278 */           arrayOfFloat3[i1] = f1;
/* 279 */           arrayOfFloat4[i1] = (f1 + f2);
/*     */         }
/*     */         else {
/* 282 */           arrayOfFloat4[i1] = f1;
/* 283 */           arrayOfFloat3[i1] = (f1 - f2);
/*     */         }
/*     */       }
/*     */     }
/*     */     int n;
/* 291 */     for (j = 0; j < localInfo.channels; j++) {
/* 292 */       arrayOfFloat3 = paramBlock.pcm[j];
/* 293 */       n = localInfoMapping0.chmuxlist[j];
/* 294 */       localLookMapping0.floor_func[n].inverse2(paramBlock, localLookMapping0.floor_look[n], this.floormemo[j], arrayOfFloat3);
/*     */     }
/*     */ 
/* 301 */     for (j = 0; j < localInfo.channels; j++) {
/* 302 */       arrayOfFloat3 = paramBlock.pcm[j];
/*     */ 
/* 304 */       ((Mdct)localDspState.transform[paramBlock.W][0]).backward(arrayOfFloat3, arrayOfFloat3);
/*     */     }
/*     */ 
/* 311 */     for (j = 0; j < localInfo.channels; j++) {
/* 312 */       arrayOfFloat3 = paramBlock.pcm[j];
/* 313 */       if (this.nonzero[j] != 0) {
/* 314 */         for (n = 0; n < i; n++) {
/* 315 */           arrayOfFloat3[n] *= arrayOfFloat1[n];
/*     */         }
/*     */       }
/*     */       else {
/* 319 */         for (n = 0; n < i; n++) {
/* 320 */           arrayOfFloat3[n] = 0.0F;
/*     */         }
/*     */ 
/*     */       }
/*     */ 
/*     */     }
/*     */ 
/* 328 */     return 0;
/*     */   }
/*     */ }

/* Location:           /Users/Nikita/Downloads/mcp28/jars/bin/minecraft.jar
 * Qualified Name:     com.jcraft.jorbis.Mapping0
 * JD-Core Version:    0.6.0
 */