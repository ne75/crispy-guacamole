/*     */ package net.minecraft;
/*     */ 
/*     */ import java.awt.BorderLayout;
/*     */ import java.awt.Button;
/*     */ import java.awt.Checkbox;
/*     */ import java.awt.Color;
/*     */ import java.awt.Cursor;
/*     */ import java.awt.Desktop;
/*     */ import java.awt.Font;
/*     */ import java.awt.FontMetrics;
/*     */ import java.awt.Graphics;
/*     */ import java.awt.GridBagLayout;
/*     */ import java.awt.GridLayout;
/*     */ import java.awt.HeadlessException;
/*     */ import java.awt.Image;
/*     */ import java.awt.Insets;
/*     */ import java.awt.Label;
/*     */ import java.awt.Panel;
/*     */ import java.awt.Rectangle;
/*     */ import java.awt.TextField;
/*     */ import java.awt.event.ActionEvent;
/*     */ import java.awt.event.ActionListener;
/*     */ import java.awt.event.MouseAdapter;
/*     */ import java.awt.event.MouseEvent;
/*     */ import java.awt.image.BufferedImage;
/*     */ import java.awt.image.VolatileImage;
/*     */ import java.io.DataInputStream;
/*     */ import java.io.DataOutputStream;
/*     */ import java.io.File;
/*     */ import java.io.FileInputStream;
/*     */ import java.io.FileOutputStream;
/*     */ import java.io.IOException;
/*     */ import java.net.URL;
/*     */ import java.util.Random;
/*     */ import javax.crypto.Cipher;
/*     */ import javax.crypto.CipherInputStream;
/*     */ import javax.crypto.CipherOutputStream;
/*     */ import javax.crypto.SecretKey;
/*     */ import javax.crypto.SecretKeyFactory;
/*     */ import javax.crypto.spec.PBEKeySpec;
/*     */ import javax.crypto.spec.PBEParameterSpec;
/*     */ import javax.imageio.ImageIO;
/*     */ 
/*     */ public class LoginForm extends Panel
/*     */ {
/*     */   private static final long serialVersionUID = 1L;
/*     */   private Image bgImage;
/*  18 */   private TextField userName = new TextField(20);
/*  19 */   private TextField password = new TextField(20);
/*  20 */   private Checkbox rememberBox = new Checkbox("Remember password");
/*  21 */   private Button launchButton = new Button("Login");
/*  22 */   private Button retryButton = new Button("Try again");
/*  23 */   private Button offlineButton = new Button("Play offline");
/*  24 */   private Label errorLabel = new Label("", 1);
/*     */   private LauncherFrame launcherFrame;
/*  26 */   private boolean outdated = false;
/*     */   private VolatileImage img;
/*     */ 
/*     */   public LoginForm(LauncherFrame launcherFrame)
/*     */   {
/*  29 */     this.launcherFrame = launcherFrame;
/*     */ 
/*  31 */     GridBagLayout gbl = new GridBagLayout();
/*  32 */     setLayout(gbl);
/*     */ 
/*  34 */     add(buildLoginPanel());
/*     */     try
/*     */     {
/*  37 */       this.bgImage = ImageIO.read(LoginForm.class.getResource("dirt.png")).getScaledInstance(32, 32, 16);
/*     */     } catch (IOException e) {
/*  39 */       e.printStackTrace();
/*     */     }
/*     */ 
/*  42 */     readUsername();
/*     */ 
/*  44 */     this.retryButton.addActionListener(new ActionListener() {
/*     */       public void actionPerformed(ActionEvent ae) {
/*  46 */         LoginForm.this.errorLabel.setText("");
/*  47 */         LoginForm.this.removeAll();
/*  48 */         LoginForm.this.add(LoginForm.this.buildLoginPanel());
/*  49 */         LoginForm.this.validate();
/*     */       }
/*     */     });
/*  53 */     this.offlineButton.addActionListener(new ActionListener(launcherFrame) {
private Object val$launcherFrame;

/*     */       public void actionPerformed(ActionEvent ae) {
/*  55 */         ((LauncherFrame) this.val$launcherFrame).playCached(LoginForm.this.userName.getText());
/*     */       }
/*     */     });
/*  59 */     this.launchButton.addActionListener(new ActionListener(launcherFrame) {
private Object val$launcherFrame;

/*     */       public void actionPerformed(ActionEvent ae) {
/*  61 */         ((LauncherFrame) this.val$launcherFrame).login(LoginForm.this.userName.getText(), LoginForm.this.password.getText());
/*     */       } } );
/*     */   }
/*     */ 
/*     */   private void readUsername() {
/*     */     try {
/*  68 */       File lastLogin = new File(Util.getWorkingDirectory(), "lastlogin");
/*     */ 
/*  70 */       Cipher cipher = getCipher(2, "passwordfile");
/*     */ 
/*     */       DataInputStream dis1;
/*  71 */       if (cipher != null)
/*  72 */         dis1 = new DataInputStream(new CipherInputStream(new FileInputStream(lastLogin), cipher));
/*     */       else {
/*  74 */         dis1 = new DataInputStream(new FileInputStream(lastLogin));
/*     */       }
/*  76 */       this.userName.setText(dis1.readUTF());
/*  77 */       this.password.setText(dis1.readUTF());
/*  78 */       this.rememberBox.setState(this.password.getText().length() > 0);
/*  79 */       dis1.close();
/*     */     } catch (Exception e) {
/*  81 */       e.printStackTrace();
/*     */     }
/*     */   }
/*     */ 
/*     */   private void writeUsername() {
/*     */     try {
/*  87 */       File lastLogin = new File(Util.getWorkingDirectory(), "lastlogin");
/*     */ 
/*  89 */       Cipher cipher = getCipher(1, "passwordfile");
/*     */       DataOutputStream dos;
/*     */      
/*  90 */       if (cipher != null)
/*  91 */         dos = new DataOutputStream(new CipherOutputStream(new FileOutputStream(lastLogin), cipher));
/*     */       else {
/*  93 */         dos = new DataOutputStream(new FileOutputStream(lastLogin));
/*     */       }
/*  95 */       dos.writeUTF(this.userName.getText());
/*  96 */       dos.writeUTF(this.rememberBox.getState() ? this.password.getText() : "");
/*  97 */       dos.close();
/*     */     } catch (Exception e) {
/*  99 */       e.printStackTrace();
/*     */     }
/*     */   }
/*     */ 
/*     */   private Cipher getCipher(int mode, String password) throws Exception {
/* 104 */     Random random = new Random(43287234L);
/* 105 */     byte[] salt = new byte[8];
/* 106 */     random.nextBytes(salt);
/* 107 */     PBEParameterSpec pbeParamSpec = new PBEParameterSpec(salt, 5);
/*     */ 
/* 109 */     SecretKey pbeKey = SecretKeyFactory.getInstance("PBEWithMD5AndDES").generateSecret(new PBEKeySpec(password.toCharArray()));
/* 110 */     Cipher cipher = Cipher.getInstance("PBEWithMD5AndDES");
/* 111 */     cipher.init(mode, pbeKey, pbeParamSpec);
/* 112 */     return cipher;
/*     */   }
/*     */ 
/*     */   public void update(Graphics g) {
/* 116 */     paint(g);
/*     */   }
/*     */ 
/*     */   public void paint(Graphics g2)
/*     */   {
/* 122 */     int w = getWidth() / 2;
/* 123 */     int h = getHeight() / 2;
/* 124 */     if ((this.img == null) || (this.img.getWidth() != w) || (this.img.getHeight() != h)) {
/* 125 */       this.img = createVolatileImage(w, h);
/*     */     }
/*     */ 
/* 128 */     Graphics g = this.img.getGraphics();
/* 129 */     for (int x = 0; x <= w / 32; x++) {
/* 130 */       for (int y = 0; y <= h / 32; y++)
/* 131 */         g.drawImage(this.bgImage, x * 32, y * 32, null);
/*     */     }
/* 133 */     g.setColor(Color.LIGHT_GRAY);
/*     */ 
/* 137 */     String msg = "Minecraft Launcher";
/* 138 */     g.setFont(new Font(null, 1, 20));
/* 139 */     FontMetrics fm = g.getFontMetrics();
/* 140 */     g.drawString(msg, w / 2 - fm.stringWidth(msg) / 2, h / 2 - fm.getHeight() * 2);
/*     */ 
/* 142 */     g.dispose();
/* 143 */     g2.drawImage(this.img, 0, 0, w * 2, h * 2, null);
/*     */   }
/*     */ 
/*     */   private Panel buildLoginPanel() {
/* 147 */     Panel panel = new Panel()
/*     */     {
/*     */       private static final long serialVersionUID = 1L;
/* 150 */       private Insets insets = new Insets(12, 24, 16, 32);
/*     */ 
/*     */       public Insets getInsets() {
/* 153 */         return this.insets;
/*     */       }
/*     */ 
/*     */       public void update(Graphics g) {
/* 157 */         paint(g);
/*     */       }
/*     */ 
/*     */       public void paint(Graphics g) {
/* 161 */         super.paint(g);
/* 162 */         int hOffs = 0;
/*     */ 
/* 164 */         g.setColor(Color.BLACK);
/* 165 */         g.drawRect(0, 0 + hOffs, getWidth() - 1, getHeight() - 1 - hOffs);
/* 166 */         g.drawRect(1, 1 + hOffs, getWidth() - 3, getHeight() - 3 - hOffs);
/* 167 */         g.setColor(Color.WHITE);
/*     */ 
/* 169 */         g.drawRect(2, 2 + hOffs, getWidth() - 5, getHeight() - 5 - hOffs);
/*     */       }
/*     */     };
/* 173 */     panel.setBackground(Color.GRAY);
/* 174 */     BorderLayout layout = new BorderLayout();
/* 175 */     layout.setHgap(0);
/* 176 */     layout.setVgap(8);
/* 177 */     panel.setLayout(layout);
/*     */ 
/* 180 */     GridLayout gl1 = new GridLayout(0, 1);
/* 181 */     GridLayout gl2 = new GridLayout(0, 1);
/* 182 */     gl1.setVgap(2);
/* 183 */     gl2.setVgap(2);
/* 184 */     Panel titles = new Panel(gl1);
/* 185 */     Panel values = new Panel(gl2);
/*     */ 
/* 187 */     titles.add(new Label("Username:", 2));
/* 188 */     titles.add(new Label("Password:", 2));
/* 189 */     titles.add(new Label("", 2));
/*     */ 
/* 191 */     this.password.setEchoChar('*');
/* 192 */     values.add(this.userName);
/* 193 */     values.add(this.password);
/* 194 */     values.add(this.rememberBox);
/*     */ 
/* 196 */     panel.add(titles, "West");
/* 197 */     panel.add(values, "Center");
/*     */ 
/* 199 */     Panel loginPanel = new Panel(new BorderLayout());
/*     */ 
/* 201 */     Panel registerPanel = new Panel(new BorderLayout());
/*     */     try {
/* 203 */       if (this.outdated) {
/* 204 */         Label accountLink = new Label("You need to update the launcher!") {
/*     */           private static final long serialVersionUID = 0L;
/*     */ 
/* 208 */           public void paint(Graphics g) { super.paint(g);
/*     */ 
/* 210 */             int x = 0;
/* 211 */             int y = 0;
/*     */ 
/* 215 */             FontMetrics fm = g.getFontMetrics();
/* 216 */             int width = fm.stringWidth(getText());
/* 217 */             int height = fm.getHeight();
/*     */ 
/* 219 */             if (getAlignment() == 0) x = 0;
/* 220 */             else if (getAlignment() == 1) x = getBounds().width / 2 - width / 2;
/* 221 */             else if (getAlignment() == 2) x = getBounds().width - width;
/* 222 */             y = getBounds().height / 2 + height / 2 - 1;
/*     */ 
/* 224 */             g.drawLine(x + 2, y, x + width - 2, y); }
/*     */ 
/*     */           public void update(Graphics g)
/*     */           {
/* 228 */             paint(g);
/*     */           }
/*     */         };
/* 232 */         accountLink.setCursor(Cursor.getPredefinedCursor(12));
/* 233 */         accountLink.addMouseListener(new MouseAdapter() {
/*     */           public void mousePressed(MouseEvent arg0) {
/*     */             try {
/* 236 */               Desktop.getDesktop().browse(new URL("http://www.minecraft.net/download.jsp").toURI());
/*     */             } catch (Exception e) {
/* 238 */               e.printStackTrace();
/*     */             }
/*     */           }
/*     */         });
/* 242 */         accountLink.setForeground(Color.BLUE);
/* 243 */         registerPanel.add(accountLink, "West");
/* 244 */         registerPanel.add(new Panel(), "Center");
/*     */       } else {
/* 246 */         Label accountLink = new Label("Need account?") {
/*     */           private static final long serialVersionUID = 0L;
/*     */ 
/* 250 */           public void paint(Graphics g) { super.paint(g);
/*     */ 
/* 252 */             int x = 0;
/* 253 */             int y = 0;
/*     */ 
/* 257 */             FontMetrics fm = g.getFontMetrics();
/* 258 */             int width = fm.stringWidth(getText());
/* 259 */             int height = fm.getHeight();
/*     */ 
/* 261 */             if (getAlignment() == 0) x = 0;
/* 262 */             else if (getAlignment() == 1) x = getBounds().width / 2 - width / 2;
/* 263 */             else if (getAlignment() == 2) x = getBounds().width - width;
/* 264 */             y = getBounds().height / 2 + height / 2 - 1;
/*     */ 
/* 266 */             g.drawLine(x + 2, y, x + width - 2, y); }
/*     */ 
/*     */           public void update(Graphics g)
/*     */           {
/* 270 */             paint(g);
/*     */           }
/*     */         };
/* 274 */         accountLink.setCursor(Cursor.getPredefinedCursor(12));
/* 275 */         accountLink.addMouseListener(new MouseAdapter() {
/*     */           public void mousePressed(MouseEvent arg0) {
/*     */             try {
/* 278 */               Desktop.getDesktop().browse(new URL("http://www.minecraft.net/register.jsp").toURI());
/*     */             } catch (Exception e) {
/* 280 */               e.printStackTrace();
/*     */             }
/*     */           }
/*     */         });
/* 284 */         accountLink.setForeground(Color.BLUE);
/* 285 */         registerPanel.add(accountLink, "West");
/* 286 */         registerPanel.add(new Panel(), "Center");
/*     */       }
/*     */     }
/*     */     catch (Error localError) {
/*     */     }
/* 291 */     loginPanel.add(registerPanel, "Center");
/* 292 */     loginPanel.add(this.launchButton, "East");
/* 293 */     panel.add(loginPanel, "South");
/*     */ 
/* 295 */     this.errorLabel.setFont(new Font(null, 2, 16));
/* 296 */     this.errorLabel.setForeground(new Color(8388608));
/* 297 */     panel.add(this.errorLabel, "North");
/*     */ 
/* 300 */     return panel;
/*     */   }
/*     */ 
/*     */   private Panel buildOfflinePanel() {
/* 304 */     Panel panel = new Panel()
/*     */     {
/*     */       private static final long serialVersionUID = 1L;
/* 307 */       private Insets insets = new Insets(12, 24, 16, 32);
/*     */ 
/*     */       public Insets getInsets() {
/* 310 */         return this.insets;
/*     */       }
/*     */ 
/*     */       public void update(Graphics g) {
/* 314 */         paint(g);
/*     */       }
/*     */ 
/*     */       public void paint(Graphics g) {
/* 318 */         super.paint(g);
/* 319 */         int hOffs = 0;
/* 320 */         g.setColor(Color.BLACK);
/* 321 */         g.drawRect(0, 0 + hOffs, getWidth() - 1, getHeight() - 1 - hOffs);
/* 322 */         g.drawRect(1, 1 + hOffs, getWidth() - 3, getHeight() - 3 - hOffs);
/* 323 */         g.setColor(Color.WHITE);
/*     */ 
/* 325 */         g.drawRect(2, 2 + hOffs, getWidth() - 5, getHeight() - 5 - hOffs);
/*     */       }
/*     */     };
/* 329 */     panel.setBackground(Color.GRAY);
/* 330 */     BorderLayout layout = new BorderLayout();
/* 331 */     panel.setLayout(layout);
/*     */ 
/* 333 */     Panel loginPanel = new Panel(new BorderLayout());
/* 334 */     loginPanel.add(new Panel(), "Center");
/* 335 */     panel.add(new Panel(), "Center");
/* 336 */     loginPanel.add(this.retryButton, "East");
/* 337 */     loginPanel.add(this.offlineButton, "West");
/*     */ 
/* 339 */     boolean canPlayOffline = this.launcherFrame.canPlayOffline(this.userName.getText());
/* 340 */     this.offlineButton.setEnabled(canPlayOffline);
/* 341 */     if (!canPlayOffline) {
/* 342 */       panel.add(new Label("Play online once to enable offline"), "Center");
/*     */     }
/* 344 */     panel.add(loginPanel, "South");
/*     */ 
/* 346 */     this.errorLabel.setFont(new Font(null, 2, 16));
/* 347 */     this.errorLabel.setForeground(new Color(8388608));
/* 348 */     panel.add(this.errorLabel, "North");
/*     */ 
/* 351 */     return panel;
/*     */   }
/*     */ 
/*     */   public void setError(String errorMessage) {
/* 355 */     removeAll();
/* 356 */     add(buildLoginPanel());
/* 357 */     this.errorLabel.setText(errorMessage);
/* 358 */     validate();
/*     */   }
/*     */ 
/*     */   public void loginOk() {
/* 362 */     writeUsername();
/*     */   }
/*     */ 
/*     */   public void setNoNetwork() {
/* 366 */     removeAll();
/* 367 */     add(buildOfflinePanel());
/* 368 */     validate();
/*     */   }
/*     */ 
/*     */   public void checkAutologin() {
/* 372 */     if (this.password.getText().length() > 0)
/* 373 */       this.launcherFrame.login(this.userName.getText(), this.password.getText());
/*     */   }
/*     */ 
/*     */   public void setOutdated()
/*     */   {
/* 378 */     this.outdated = true;
/*     */   }
/*     */ }

/* Location:           /Users/Nikita/Documents/Programming/Java/minecraft/Contents/Resources/Java/MinecraftLauncher.jar
 * Qualified Name:     net.minecraft.LoginForm
 * JD-Core Version:    0.6.0
 */