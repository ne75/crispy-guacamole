/*     */ import java.util.Random;
/*     */ 
/*     */ public class fx extends kz
/*     */ {
/*  28 */   static final byte[] a = { 2, 0, 0, 1, 2, 1 };
/*     */ 
/*  31 */   Random b = new Random();
/*     */   dn c;
/*  37 */   int[] d = { 0, 0, 0 };
/*     */ 
/*  39 */   int e = 0;
/*     */   int f;
/*  42 */   double g = 0.618D;
/*  43 */   double h = 1.0D;
/*  44 */   double i = 0.381D;
/*  45 */   double j = 1.0D;
/*  46 */   double k = 1.0D;
/*  47 */   int l = 1;
/*  48 */   int m = 12;
/*  49 */   int n = 4;
/*     */   int[][] o;
/*     */ 
/*     */   void a()
/*     */   {
/*  59 */     this.f = (int)(this.e * this.g);
/*  60 */     if (this.f >= this.e) this.f = (this.e - 1);
/*  61 */     int i1 = (int)(1.382D + Math.pow(this.k * this.e / 13.0D, 2.0D));
/*  62 */     if (i1 < 1) i1 = 1;
/*     */ 
/*  64 */     int[][] arrayOfInt = new int[i1 * this.e][4];
/*  65 */     int i2 = this.d[1] + this.e - this.n;
/*  66 */     int i3 = 1;
/*  67 */     int i4 = this.d[1] + this.f;
/*  68 */     int i5 = i2 - this.d[1];
/*     */ 
/*  70 */     arrayOfInt[0][0] = this.d[0];
/*  71 */     arrayOfInt[0][1] = i2;
/*  72 */     arrayOfInt[0][2] = this.d[2];
/*  73 */     arrayOfInt[0][3] = i4;
/*  74 */     i2--;
/*     */ 
/*  76 */     while (i5 >= 0) {
/*  77 */       int i6 = 0;
/*     */ 
/*  79 */       float f1 = a(i5);
/*  80 */       if (f1 < 0.0F) {
/*  81 */         i2--;
/*  82 */         i5--;
/*  83 */         continue;
/*     */       }
/*     */ 
/*  87 */       double d1 = 0.5D;
/*  88 */       while (i6 < i1) {
/*  89 */         double d2 = this.j * (f1 * (this.b.nextFloat() + 0.328D));
/*  90 */         double d3 = this.b.nextFloat() * 2.0D * 3.14159D;
/*  91 */         int i7 = (int)(d2 * Math.sin(d3) + this.d[0] + d1);
/*  92 */         int i8 = (int)(d2 * Math.cos(d3) + this.d[2] + d1);
/*  93 */         int[] arrayOfInt1 = { i7, i2, i8 };
/*  94 */         int[] arrayOfInt2 = { i7, i2 + this.n, i8 };
/*     */ 
/*  96 */         if (a(arrayOfInt1, arrayOfInt2) == -1)
/*     */         {
/*  99 */           int[] arrayOfInt3 = { this.d[0], this.d[1], this.d[2] };
/* 100 */           double d4 = Math.sqrt(Math.pow(Math.abs(this.d[0] - arrayOfInt1[0]), 2.0D) + Math.pow(Math.abs(this.d[2] - arrayOfInt1[2]), 2.0D));
/* 101 */           double d5 = d4 * this.i;
/* 102 */           if (arrayOfInt1[1] - d5 > i4) {
/* 103 */             arrayOfInt3[1] = i4;
/*     */           }
/*     */           else {
/* 106 */             arrayOfInt3[1] = (int)(arrayOfInt1[1] - d5);
/*     */           }
/*     */ 
/* 109 */           if (a(arrayOfInt3, arrayOfInt1) == -1)
/*     */           {
/* 112 */             arrayOfInt[i3][0] = i7;
/* 113 */             arrayOfInt[i3][1] = i2;
/* 114 */             arrayOfInt[i3][2] = i8;
/* 115 */             arrayOfInt[i3][3] = arrayOfInt3[1];
/* 116 */             i3++;
/*     */           }
/*     */         }
/* 119 */         i6++;
/*     */       }
/* 121 */       i2--;
/* 122 */       i5--;
/*     */     }
/* 124 */     this.o = new int[i3][4];
/* 125 */     System.arraycopy(arrayOfInt, 0, this.o, 0, i3);
/*     */   }
/*     */ 
/*     */   void a(int paramInt1, int paramInt2, int paramInt3, float paramFloat, byte paramByte, int paramInt4)
/*     */   {
/* 140 */     int i1 = (int)(paramFloat + 0.618D);
/* 141 */     int i2 = a[paramByte];
/* 142 */     int i3 = a[(paramByte + 3)];
/* 143 */     int[] arrayOfInt1 = { paramInt1, paramInt2, paramInt3 };
/* 144 */     int[] arrayOfInt2 = { 0, 0, 0 };
/* 145 */     int i4 = -i1;
/* 146 */     int i5 = -i1;
/*     */ 
/* 148 */     arrayOfInt2[paramByte] = arrayOfInt1[paramByte];
/* 149 */     while (i4 <= i1) {
/* 150 */       arrayOfInt1[i2] += i4;
/* 151 */       i5 = -i1;
/* 152 */       while (i5 <= i1) {
/* 153 */         double d1 = Math.sqrt(Math.pow(Math.abs(i4) + 0.5D, 2.0D) + Math.pow(Math.abs(i5) + 0.5D, 2.0D));
/* 154 */         if (d1 > paramFloat) {
/* 155 */           i5++;
/* 156 */           continue;
/*     */         }
/* 158 */         arrayOfInt1[i3] += i5;
/* 159 */         int i6 = this.c.a(arrayOfInt2[0], arrayOfInt2[1], arrayOfInt2[2]);
/* 160 */         if ((i6 != 0) && (i6 != 18))
/*     */         {
/* 163 */           i5++;
/* 164 */           continue;
/*     */         }
/* 166 */         this.c.b(arrayOfInt2[0], arrayOfInt2[1], arrayOfInt2[2], paramInt4);
/* 167 */         i5++;
/*     */       }
/* 169 */       i4++;
/*     */     }
/*     */   }
/*     */ 
/*     */   float a(int paramInt)
/*     */   {
/* 182 */     if (paramInt < this.e * 0.3D) return -1.618F;
/* 183 */     float f1 = this.e / 2.0F;
/* 184 */     float f2 = this.e / 2.0F - paramInt;
/*     */     float f3;
/* 186 */     if (f2 == 0.0F) f3 = f1;
/* 187 */     else if (Math.abs(f2) >= f1) f3 = 0.0F; else {
/* 188 */       f3 = (float)Math.sqrt(Math.pow(Math.abs(f1), 2.0D) - Math.pow(Math.abs(f2), 2.0D));
/*     */     }
/* 190 */     f3 *= 0.5F;
/* 191 */     return f3;
/*     */   }
/*     */ 
/*     */   float b(int paramInt)
/*     */   {
/* 200 */     if ((paramInt < 0) || (paramInt >= this.n)) return -1.0F;
/* 201 */     if ((paramInt == 0) || (paramInt == this.n - 1)) return 2.0F;
/* 202 */     return 3.0F;
/*     */   }
/*     */ 
/*     */   void a(int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/* 209 */     int i1 = paramInt2;
/* 210 */     int i2 = paramInt2 + this.n;
/*     */ 
/* 212 */     while (i1 < i2) {
/* 213 */       float f1 = b(i1 - paramInt2);
/* 214 */       a(paramInt1, i1, paramInt3, f1, 1, 18);
/* 215 */       i1++;
/*     */     }
/*     */   }
/*     */ 
/*     */   void a(int[] paramArrayOfInt1, int[] paramArrayOfInt2, int paramInt)
/*     */   {
/* 226 */     int[] arrayOfInt1 = { 0, 0, 0 };
/* 227 */     int i1 = 0;
/* 228 */     int i2 = 0;
/* 229 */     while (i1 < 3) {
/* 230 */       paramArrayOfInt2[i1] -= paramArrayOfInt1[i1];
/* 231 */       if (Math.abs(arrayOfInt1[i1]) > Math.abs(arrayOfInt1[i2])) {
/* 232 */         i2 = i1;
/*     */       }
/* 234 */       i1 = (byte)(i1 + 1);
/*     */     }
/*     */ 
/* 237 */     if (arrayOfInt1[i2] == 0) return;
/*     */ 
/* 239 */     int i3 = a[i2];
/* 240 */     int i4 = a[(i2 + 3)];
/*     */     int i5;
/* 244 */     if (arrayOfInt1[i2] > 0) i5 = 1; else {
/* 245 */       i5 = -1;
/*     */     }
/* 247 */     double d1 = arrayOfInt1[i3] / arrayOfInt1[i2];
/* 248 */     double d2 = arrayOfInt1[i4] / arrayOfInt1[i2];
/*     */ 
/* 250 */     int[] arrayOfInt2 = { 0, 0, 0 };
/*     */ 
/* 252 */     int i6 = 0;
/* 253 */     int i7 = arrayOfInt1[i2] + i5;
/* 254 */     while (i6 != i7) {
/* 255 */       arrayOfInt2[i2] = gd.b(paramArrayOfInt1[i2] + i6 + 0.5D);
/* 256 */       arrayOfInt2[i3] = gd.b(paramArrayOfInt1[i3] + i6 * d1 + 0.5D);
/* 257 */       arrayOfInt2[i4] = gd.b(paramArrayOfInt1[i4] + i6 * d2 + 0.5D);
/* 258 */       this.c.b(arrayOfInt2[0], arrayOfInt2[1], arrayOfInt2[2], paramInt);
/* 259 */       i6 += i5;
/*     */     }
/*     */   }
/*     */ 
/*     */   void b()
/*     */   {
/* 268 */     int i1 = 0;
/* 269 */     int i2 = this.o.length;
/* 270 */     while (i1 < i2) {
/* 271 */       int i3 = this.o[i1][0];
/* 272 */       int i4 = this.o[i1][1];
/* 273 */       int i5 = this.o[i1][2];
/* 274 */       a(i3, i4, i5);
/* 275 */       i1++;
/*     */     }
/*     */   }
/*     */ 
/*     */   boolean c(int paramInt)
/*     */   {
/* 287 */     return paramInt >= this.e * 0.2D;
/*     */   }
/*     */ 
/*     */   void c()
/*     */   {
/* 293 */     int i1 = this.d[0];
/* 294 */     int i2 = this.d[1];
/* 295 */     int i3 = this.d[1] + this.f;
/* 296 */     int i4 = this.d[2];
/* 297 */     int[] arrayOfInt1 = { i1, i2, i4 };
/* 298 */     int[] arrayOfInt2 = { i1, i3, i4 };
/* 299 */     a(arrayOfInt1, arrayOfInt2, 17);
/* 300 */     if (this.l == 2) {
/* 301 */       arrayOfInt1[0] += 1;
/* 302 */       arrayOfInt2[0] += 1;
/* 303 */       a(arrayOfInt1, arrayOfInt2, 17);
/* 304 */       arrayOfInt1[2] += 1;
/* 305 */       arrayOfInt2[2] += 1;
/* 306 */       a(arrayOfInt1, arrayOfInt2, 17);
/* 307 */       arrayOfInt1[0] += -1;
/* 308 */       arrayOfInt2[0] += -1;
/* 309 */       a(arrayOfInt1, arrayOfInt2, 17);
/*     */     }
/*     */   }
/*     */ 
/*     */   void d()
/*     */   {
/* 317 */     int i1 = 0;
/* 318 */     int i2 = this.o.length;
/* 319 */     int[] arrayOfInt1 = { this.d[0], this.d[1], this.d[2] };
/* 320 */     while (i1 < i2) {
/* 321 */       int[] arrayOfInt2 = this.o[i1];
/* 322 */       int[] arrayOfInt3 = { arrayOfInt2[0], arrayOfInt2[1], arrayOfInt2[2] };
/* 323 */       arrayOfInt1[1] = arrayOfInt2[3];
/*     */ 
/* 325 */       int i3 = arrayOfInt1[1] - this.d[1];
/* 326 */       if (c(i3)) {
/* 327 */         a(arrayOfInt1, arrayOfInt3, 17);
/*     */       }
/* 329 */       i1++;
/*     */     }
/*     */   }
/*     */ 
/*     */   int a(int[] paramArrayOfInt1, int[] paramArrayOfInt2)
/*     */   {
/* 341 */     int[] arrayOfInt1 = { 0, 0, 0 };
/* 342 */     int i1 = 0;
/* 343 */     int i2 = 0;
/* 344 */     while (i1 < 3) {
/* 345 */       paramArrayOfInt2[i1] -= paramArrayOfInt1[i1];
/* 346 */       if (Math.abs(arrayOfInt1[i1]) > Math.abs(arrayOfInt1[i2])) {
/* 347 */         i2 = i1;
/*     */       }
/* 349 */       i1 = (byte)(i1 + 1);
/*     */     }
/*     */ 
/* 352 */     if (arrayOfInt1[i2] == 0) return -1;
/*     */ 
/* 354 */     int i3 = a[i2];
/* 355 */     int i4 = a[(i2 + 3)];
/*     */     int i5;
/* 359 */     if (arrayOfInt1[i2] > 0) i5 = 1; else {
/* 360 */       i5 = -1;
/*     */     }
/* 362 */     double d1 = arrayOfInt1[i3] / arrayOfInt1[i2];
/* 363 */     double d2 = arrayOfInt1[i4] / arrayOfInt1[i2];
/*     */ 
/* 365 */     int[] arrayOfInt2 = { 0, 0, 0 };
/*     */ 
/* 367 */     int i6 = 0;
/* 368 */     int i7 = arrayOfInt1[i2] + i5;
/*     */ 
/* 370 */     while (i6 != i7) {
/* 371 */       paramArrayOfInt1[i2] += i6;
/* 372 */       arrayOfInt2[i3] = (int)(paramArrayOfInt1[i3] + i6 * d1);
/* 373 */       arrayOfInt2[i4] = (int)(paramArrayOfInt1[i4] + i6 * d2);
/* 374 */       int i8 = this.c.a(arrayOfInt2[0], arrayOfInt2[1], arrayOfInt2[2]);
/* 375 */       if ((i8 != 0) && (i8 != 18))
/*     */       {
/*     */         break;
/*     */       }
/*     */ 
/* 380 */       i6 += i5;
/*     */     }
/*     */ 
/* 383 */     if (i6 == i7) {
/* 384 */       return -1;
/*     */     }
/*     */ 
/* 388 */     return Math.abs(i6);
/*     */   }
/*     */ 
/*     */   boolean e()
/*     */   {
/* 401 */     int[] arrayOfInt1 = { this.d[0], this.d[1], this.d[2] };
/* 402 */     int[] arrayOfInt2 = { this.d[0], this.d[1] + this.e - 1, this.d[2] };
/*     */ 
/* 404 */     int i1 = this.c.a(this.d[0], this.d[1] - 1, this.d[2]);
/* 405 */     if ((i1 != 2) && (i1 != 3)) {
/* 406 */       return false;
/*     */     }
/* 408 */     int i2 = a(arrayOfInt1, arrayOfInt2);
/*     */ 
/* 410 */     if (i2 == -1) {
/* 411 */       return true;
/*     */     }
/*     */ 
/* 414 */     if (i2 < 6) {
/* 415 */       return false;
/*     */     }
/*     */ 
/* 420 */     this.e = i2;
/*     */ 
/* 422 */     return true;
/*     */   }
/*     */ 
/*     */   public void a(double paramDouble1, double paramDouble2, double paramDouble3)
/*     */   {
/* 434 */     this.m = (int)(paramDouble1 * 12.0D);
/* 435 */     if (paramDouble1 > 0.5D) this.n = 5;
/* 436 */     this.j = paramDouble2;
/* 437 */     this.k = paramDouble3;
/*     */   }
/*     */ 
/*     */   public boolean a(dn paramdn, Random paramRandom, int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/* 450 */     this.c = paramdn;
/* 451 */     long l1 = paramRandom.nextLong();
/* 452 */     this.b.setSeed(l1);
/*     */ 
/* 454 */     this.d[0] = paramInt1;
/* 455 */     this.d[1] = paramInt2;
/* 456 */     this.d[2] = paramInt3;
/*     */ 
/* 458 */     if (this.e == 0) {
/* 459 */       this.e = (5 + this.b.nextInt(this.m));
/*     */     }
/* 461 */     if (!e())
/*     */     {
/* 463 */       return false;
/*     */     }
/*     */ 
/* 468 */     a();
/*     */ 
/* 470 */     b();
/*     */ 
/* 472 */     c();
/*     */ 
/* 474 */     d();
/*     */ 
/* 476 */     return true;
/*     */   }
/*     */ }

/* Location:           /Users/Nikita/Downloads/mcp28/jars/bin/minecraft.jar
 * Qualified Name:     fx
 * JD-Core Version:    0.6.0
 */