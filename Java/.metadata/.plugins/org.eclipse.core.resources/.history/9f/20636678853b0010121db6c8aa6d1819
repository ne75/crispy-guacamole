/*      */ package org.lwjgl.opengl;
/*      */ 
/*      */ import java.nio.IntBuffer;
/*      */ import java.util.HashSet;
/*      */ import java.util.Set;
/*      */ import org.lwjgl.BufferUtils;
/*      */ import org.lwjgl.LWJGLException;
/*      */ import org.lwjgl.LWJGLUtil;
/*      */ 
/*      */ public class ContextCapabilities
/*      */ {
/*      */   static final boolean DEBUG = false;
/*   14 */   final StateTracker tracker = new StateTracker();
/*   15 */   final IntBuffer scratch_int_buffer = BufferUtils.createIntBuffer(16);
/*      */   public final boolean GL_AMD_conservative_depth;
/*      */   public final boolean GL_AMD_draw_buffers_blend;
/*      */   public final boolean GL_AMD_performance_monitor;
/*      */   public final boolean GL_AMD_seamless_cubemap_per_texture;
/*      */   public final boolean GL_AMD_shader_stencil_export;
/*      */   public final boolean GL_AMD_texture_texture4;
/*      */   public final boolean GL_AMD_vertex_shader_tessellator;
/*      */   public final boolean GL_APPLE_aux_depth_stencil;
/*      */   public final boolean GL_APPLE_client_storage;
/*      */   public final boolean GL_APPLE_element_array;
/*      */   public final boolean GL_APPLE_fence;
/*      */   public final boolean GL_APPLE_float_pixels;
/*      */   public final boolean GL_APPLE_flush_buffer_range;
/*      */   public final boolean GL_APPLE_object_purgeable;
/*      */   public final boolean GL_APPLE_packed_pixels;
/*      */   public final boolean GL_APPLE_rgb_422;
/*      */   public final boolean GL_APPLE_row_bytes;
/*      */   public final boolean GL_APPLE_texture_range;
/*      */   public final boolean GL_APPLE_vertex_array_object;
/*      */   public final boolean GL_APPLE_vertex_array_range;
/*      */   public final boolean GL_APPLE_vertex_program_evaluators;
/*      */   public final boolean GL_APPLE_ycbcr_422;
/*      */   public final boolean GL_ARB_blend_func_extended;
/*      */   public final boolean GL_ARB_color_buffer_float;
/*      */   public final boolean GL_ARB_compatibility;
/*      */   public final boolean GL_ARB_copy_buffer;
/*      */   public final boolean GL_ARB_depth_buffer_float;
/*      */   public final boolean GL_ARB_depth_clamp;
/*      */   public final boolean GL_ARB_depth_texture;
/*      */   public final boolean GL_ARB_draw_buffers;
/*      */   public final boolean GL_ARB_draw_buffers_blend;
/*      */   public final boolean GL_ARB_draw_elements_base_vertex;
/*      */   public final boolean GL_ARB_draw_indirect;
/*      */   public final boolean GL_ARB_draw_instanced;
/*      */   public final boolean GL_ARB_explicit_attrib_location;
/*      */   public final boolean GL_ARB_fragment_coord_conventions;
/*      */   public final boolean GL_ARB_fragment_program;
/*      */   public final boolean GL_ARB_fragment_program_shadow;
/*      */   public final boolean GL_ARB_fragment_shader;
/*      */   public final boolean GL_ARB_framebuffer_object;
/*      */   public final boolean GL_ARB_framebuffer_sRGB;
/*      */   public final boolean GL_ARB_geometry_shader4;
/*      */   public final boolean GL_ARB_gpu_shader5;
/*      */   public final boolean GL_ARB_gpu_shader_fp64;
/*      */   public final boolean GL_ARB_half_float_pixel;
/*      */   public final boolean GL_ARB_half_float_vertex;
/*      */   public final boolean GL_ARB_imaging;
/*      */   public final boolean GL_ARB_instanced_arrays;
/*      */   public final boolean GL_ARB_map_buffer_range;
/*      */   public final boolean GL_ARB_matrix_palette;
/*      */   public final boolean GL_ARB_multisample;
/*      */   public final boolean GL_ARB_multitexture;
/*      */   public final boolean GL_ARB_occlusion_query;
/*      */   public final boolean GL_ARB_occlusion_query2;
/*      */   public final boolean GL_ARB_pixel_buffer_object;
/*      */   public final boolean GL_ARB_point_parameters;
/*      */   public final boolean GL_ARB_point_sprite;
/*      */   public final boolean GL_ARB_provoking_vertex;
/*      */   public final boolean GL_ARB_sample_shading;
/*      */   public final boolean GL_ARB_sampler_objects;
/*      */   public final boolean GL_ARB_seamless_cube_map;
/*      */   public final boolean GL_ARB_shader_bit_encoding;
/*      */   public final boolean GL_ARB_shader_objects;
/*      */   public final boolean GL_ARB_shader_subroutine;
/*      */   public final boolean GL_ARB_shader_texture_lod;
/*      */   public final boolean GL_ARB_shading_language_100;
/*      */   public final boolean GL_ARB_shading_language_include;
/*      */   public final boolean GL_ARB_shadow;
/*      */   public final boolean GL_ARB_shadow_ambient;
/*      */   public final boolean GL_ARB_sync;
/*      */   public final boolean GL_ARB_tessellation_shader;
/*      */   public final boolean GL_ARB_texture_border_clamp;
/*      */   public final boolean GL_ARB_texture_buffer_object;
/*      */   public final boolean GL_ARB_texture_buffer_object_rgb32;
/*      */   public final boolean GL_ARB_texture_compression;
/*      */   public final boolean GL_ARB_texture_compression_bptc;
/*      */   public final boolean GL_ARB_texture_compression_rgtc;
/*      */   public final boolean GL_ARB_texture_cube_map;
/*      */   public final boolean GL_ARB_texture_cube_map_array;
/*      */   public final boolean GL_ARB_texture_env_add;
/*      */   public final boolean GL_ARB_texture_env_combine;
/*      */   public final boolean GL_ARB_texture_env_crossbar;
/*      */   public final boolean GL_ARB_texture_env_dot3;
/*      */   public final boolean GL_ARB_texture_float;
/*      */   public final boolean GL_ARB_texture_gather;
/*      */   public final boolean GL_ARB_texture_mirrored_repeat;
/*      */   public final boolean GL_ARB_texture_multisample;
/*      */   public final boolean GL_ARB_texture_non_power_of_two;
/*      */   public final boolean GL_ARB_texture_query_lod;
/*      */   public final boolean GL_ARB_texture_rectangle;
/*      */   public final boolean GL_ARB_texture_rg;
/*      */   public final boolean GL_ARB_texture_rgb10_a2ui;
/*      */   public final boolean GL_ARB_texture_swizzle;
/*      */   public final boolean GL_ARB_timer_query;
/*      */   public final boolean GL_ARB_transform_feedback2;
/*      */   public final boolean GL_ARB_transform_feedback3;
/*      */   public final boolean GL_ARB_transpose_matrix;
/*      */   public final boolean GL_ARB_uniform_buffer_object;
/*      */   public final boolean GL_ARB_vertex_array_bgra;
/*      */   public final boolean GL_ARB_vertex_array_object;
/*      */   public final boolean GL_ARB_vertex_blend;
/*      */   public final boolean GL_ARB_vertex_buffer_object;
/*      */   public final boolean GL_ARB_vertex_program;
/*      */   public final boolean GL_ARB_vertex_shader;
/*      */   public final boolean GL_ARB_vertex_type_2_10_10_10_rev;
/*      */   public final boolean GL_ARB_window_pos;
/*      */   public final boolean GL_ATI_draw_buffers;
/*      */   public final boolean GL_ATI_element_array;
/*      */   public final boolean GL_ATI_envmap_bumpmap;
/*      */   public final boolean GL_ATI_fragment_shader;
/*      */   public final boolean GL_ATI_map_object_buffer;
/*      */   public final boolean GL_ATI_meminfo;
/*      */   public final boolean GL_ATI_pn_triangles;
/*      */   public final boolean GL_ATI_separate_stencil;
/*      */   public final boolean GL_ATI_shader_texture_lod;
/*      */   public final boolean GL_ATI_text_fragment_shader;
/*      */   public final boolean GL_ATI_texture_compression_3dc;
/*      */   public final boolean GL_ATI_texture_env_combine3;
/*      */   public final boolean GL_ATI_texture_float;
/*      */   public final boolean GL_ATI_texture_mirror_once;
/*      */   public final boolean GL_ATI_vertex_array_object;
/*      */   public final boolean GL_ATI_vertex_attrib_array_object;
/*      */   public final boolean GL_ATI_vertex_streams;
/*      */   public final boolean GL_EXT_abgr;
/*      */   public final boolean GL_EXT_bgra;
/*      */   public final boolean GL_EXT_bindable_uniform;
/*      */   public final boolean GL_EXT_blend_color;
/*      */   public final boolean GL_EXT_blend_equation_separate;
/*      */   public final boolean GL_EXT_blend_func_separate;
/*      */   public final boolean GL_EXT_blend_minmax;
/*      */   public final boolean GL_EXT_blend_subtract;
/*      */   public final boolean GL_EXT_Cg_shader;
/*      */   public final boolean GL_EXT_compiled_vertex_array;
/*      */   public final boolean GL_EXT_depth_bounds_test;
/*      */   public final boolean GL_EXT_direct_state_access;
/*      */   public final boolean GL_EXT_draw_buffers2;
/*      */   public final boolean GL_EXT_draw_instanced;
/*      */   public final boolean GL_EXT_draw_range_elements;
/*      */   public final boolean GL_EXT_fog_coord;
/*      */   public final boolean GL_EXT_framebuffer_blit;
/*      */   public final boolean GL_EXT_framebuffer_multisample;
/*      */   public final boolean GL_EXT_framebuffer_object;
/*      */   public final boolean GL_EXT_framebuffer_sRGB;
/*      */   public final boolean GL_EXT_geometry_shader4;
/*      */   public final boolean GL_EXT_gpu_program_parameters;
/*      */   public final boolean GL_EXT_gpu_shader4;
/*      */   public final boolean GL_EXT_multi_draw_arrays;
/*      */   public final boolean GL_EXT_packed_depth_stencil;
/*      */   public final boolean GL_EXT_packed_float;
/*      */   public final boolean GL_EXT_packed_pixels;
/*      */   public final boolean GL_EXT_paletted_texture;
/*      */   public final boolean GL_EXT_pixel_buffer_object;
/*      */   public final boolean GL_EXT_point_parameters;
/*      */   public final boolean GL_EXT_provoking_vertex;
/*      */   public final boolean GL_EXT_rescale_normal;
/*      */   public final boolean GL_EXT_secondary_color;
/*      */   public final boolean GL_EXT_separate_shader_objects;
/*      */   public final boolean GL_EXT_separate_specular_color;
/*      */   public final boolean GL_EXT_shader_image_load_store;
/*      */   public final boolean GL_EXT_shadow_funcs;
/*      */   public final boolean GL_EXT_shared_texture_palette;
/*      */   public final boolean GL_EXT_stencil_clear_tag;
/*      */   public final boolean GL_EXT_stencil_two_side;
/*      */   public final boolean GL_EXT_stencil_wrap;
/*      */   public final boolean GL_EXT_texture_3d;
/*      */   public final boolean GL_EXT_texture_array;
/*      */   public final boolean GL_EXT_texture_buffer_object;
/*      */   public final boolean GL_EXT_texture_compression_latc;
/*      */   public final boolean GL_EXT_texture_compression_rgtc;
/*      */   public final boolean GL_EXT_texture_compression_s3tc;
/*      */   public final boolean GL_EXT_texture_env_combine;
/*      */   public final boolean GL_EXT_texture_env_dot3;
/*      */   public final boolean GL_EXT_texture_filter_anisotropic;
/*      */   public final boolean GL_EXT_texture_integer;
/*      */   public final boolean GL_EXT_texture_lod_bias;
/*      */   public final boolean GL_EXT_texture_mirror_clamp;
/*      */   public final boolean GL_EXT_texture_rectangle;
/*      */   public final boolean GL_EXT_texture_sRGB;
/*      */   public final boolean GL_EXT_texture_shared_exponent;
/*      */   public final boolean GL_EXT_texture_snorm;
/*      */   public final boolean GL_EXT_texture_swizzle;
/*      */   public final boolean GL_EXT_timer_query;
/*      */   public final boolean GL_EXT_transform_feedback;
/*      */   public final boolean GL_EXT_vertex_array_bgra;
/*      */   public final boolean GL_EXT_vertex_attrib_64bit;
/*      */   public final boolean GL_EXT_vertex_shader;
/*      */   public final boolean GL_EXT_vertex_weighting;
/*      */   public final boolean OpenGL11;
/*      */   public final boolean OpenGL12;
/*      */   public final boolean OpenGL13;
/*      */   public final boolean OpenGL14;
/*      */   public final boolean OpenGL15;
/*      */   public final boolean OpenGL20;
/*      */   public final boolean OpenGL21;
/*      */   public final boolean OpenGL30;
/*      */   public final boolean OpenGL31;
/*      */   public final boolean OpenGL32;
/*      */   public final boolean OpenGL33;
/*      */   public final boolean OpenGL40;
/*      */   public final boolean GL_GREMEDY_string_marker;
/*      */   public final boolean GL_HP_occlusion_test;
/*      */   public final boolean GL_IBM_rasterpos_clip;
/*      */   public final boolean GL_NVX_gpu_memory_info;
/*      */   public final boolean GL_NV_blend_square;
/*      */   public final boolean GL_NV_conditional_render;
/*      */   public final boolean GL_NV_copy_depth_to_color;
/*      */   public final boolean GL_NV_copy_image;
/*      */   public final boolean GL_NV_depth_buffer_float;
/*      */   public final boolean GL_NV_depth_clamp;
/*      */   public final boolean GL_NV_evaluators;
/*      */   public final boolean GL_NV_explicit_multisample;
/*      */   public final boolean GL_NV_fence;
/*      */   public final boolean GL_NV_float_buffer;
/*      */   public final boolean GL_NV_fog_distance;
/*      */   public final boolean GL_NV_fragment_program;
/*      */   public final boolean GL_NV_fragment_program2;
/*      */   public final boolean GL_NV_fragment_program4;
/*      */   public final boolean GL_NV_fragment_program_option;
/*      */   public final boolean GL_NV_framebuffer_multisample_coverage;
/*      */   public final boolean GL_NV_geometry_program4;
/*      */   public final boolean GL_NV_geometry_shader4;
/*      */   public final boolean GL_NV_gpu_program4;
/*      */   public final boolean GL_NV_gpu_program5;
/*      */   public final boolean GL_NV_gpu_shader5;
/*      */   public final boolean GL_NV_half_float;
/*      */   public final boolean GL_NV_light_max_exponent;
/*      */   public final boolean GL_NV_multisample_filter_hint;
/*      */   public final boolean GL_NV_occlusion_query;
/*      */   public final boolean GL_NV_packed_depth_stencil;
/*      */   public final boolean GL_NV_parameter_buffer_object;
/*      */   public final boolean GL_NV_parameter_buffer_object2;
/*      */   public final boolean GL_NV_pixel_data_range;
/*      */   public final boolean GL_NV_point_sprite;
/*      */   public final boolean GL_NV_primitive_restart;
/*      */   public final boolean GL_NV_register_combiners;
/*      */   public final boolean GL_NV_register_combiners2;
/*      */   public final boolean GL_NV_shader_buffer_load;
/*      */   public final boolean GL_NV_shader_buffer_store;
/*      */   public final boolean GL_NV_tessellation_program5;
/*      */   public final boolean GL_NV_texgen_reflection;
/*      */   public final boolean GL_NV_texture_barrier;
/*      */   public final boolean GL_NV_texture_compression_vtc;
/*      */   public final boolean GL_NV_texture_env_combine4;
/*      */   public final boolean GL_NV_texture_expand_normal;
/*      */   public final boolean GL_NV_texture_rectangle;
/*      */   public final boolean GL_NV_texture_shader;
/*      */   public final boolean GL_NV_texture_shader2;
/*      */   public final boolean GL_NV_texture_shader3;
/*      */   public final boolean GL_NV_transform_feedback;
/*      */   public final boolean GL_NV_transform_feedback2;
/*      */   public final boolean GL_NV_vertex_array_range;
/*      */   public final boolean GL_NV_vertex_array_range2;
/*      */   public final boolean GL_NV_vertex_attrib_integer_64bit;
/*      */   public final boolean GL_NV_vertex_buffer_unified_memory;
/*      */   public final boolean GL_NV_vertex_program;
/*      */   public final boolean GL_NV_vertex_program1_1;
/*      */   public final boolean GL_NV_vertex_program2;
/*      */   public final boolean GL_NV_vertex_program2_option;
/*      */   public final boolean GL_NV_vertex_program3;
/*      */   public final boolean GL_NV_vertex_program4;
/*      */   public final boolean GL_SGIS_generate_mipmap;
/*      */   public final boolean GL_SGIS_texture_lod;
/*      */   public final boolean GL_SUN_slice_accum;
/*      */   long AMD_draw_buffers_blend_glBlendFuncIndexedAMD_pointer;
/*      */   long AMD_draw_buffers_blend_glBlendFuncSeparateIndexedAMD_pointer;
/*      */   long AMD_draw_buffers_blend_glBlendEquationIndexedAMD_pointer;
/*      */   long AMD_draw_buffers_blend_glBlendEquationSeparateIndexedAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorGroupsAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorCountersAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorGroupStringAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorCounterStringAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorCounterInfoAMD_pointer;
/*      */   long AMD_performance_monitor_glGenPerfMonitorsAMD_pointer;
/*      */   long AMD_performance_monitor_glDeletePerfMonitorsAMD_pointer;
/*      */   long AMD_performance_monitor_glSelectPerfMonitorCountersAMD_pointer;
/*      */   long AMD_performance_monitor_glBeginPerfMonitorAMD_pointer;
/*      */   long AMD_performance_monitor_glEndPerfMonitorAMD_pointer;
/*      */   long AMD_performance_monitor_glGetPerfMonitorCounterDataAMD_pointer;
/*      */   long AMD_vertex_shader_tessellator_glTessellationFactorAMD_pointer;
/*      */   long AMD_vertex_shader_tessellator_glTessellationModeAMD_pointer;
/*      */   long APPLE_element_array_glElementPointerAPPLE_pointer;
/*      */   long APPLE_element_array_glDrawElementArrayAPPLE_pointer;
/*      */   long APPLE_element_array_glDrawRangeElementArrayAPPLE_pointer;
/*      */   long APPLE_element_array_glMultiDrawElementArrayAPPLE_pointer;
/*      */   long APPLE_element_array_glMultiDrawRangeElementArrayAPPLE_pointer;
/*      */   long APPLE_fence_glGenFencesAPPLE_pointer;
/*      */   long APPLE_fence_glDeleteFencesAPPLE_pointer;
/*      */   long APPLE_fence_glSetFenceAPPLE_pointer;
/*      */   long APPLE_fence_glIsFenceAPPLE_pointer;
/*      */   long APPLE_fence_glTestFenceAPPLE_pointer;
/*      */   long APPLE_fence_glFinishFenceAPPLE_pointer;
/*      */   long APPLE_fence_glTestObjectAPPLE_pointer;
/*      */   long APPLE_fence_glFinishObjectAPPLE_pointer;
/*      */   long APPLE_flush_buffer_range_glBufferParameteriAPPLE_pointer;
/*      */   long APPLE_flush_buffer_range_glFlushMappedBufferRangeAPPLE_pointer;
/*      */   long APPLE_object_purgeable_glObjectPurgeableAPPLE_pointer;
/*      */   long APPLE_object_purgeable_glObjectUnpurgeableAPPLE_pointer;
/*      */   long APPLE_object_purgeable_glGetObjectParameterivAPPLE_pointer;
/*      */   long APPLE_texture_range_glTextureRangeAPPLE_pointer;
/*      */   long APPLE_texture_range_glGetTexParameterPointervAPPLE_pointer;
/*      */   long APPLE_vertex_array_object_glBindVertexArrayAPPLE_pointer;
/*      */   long APPLE_vertex_array_object_glDeleteVertexArraysAPPLE_pointer;
/*      */   long APPLE_vertex_array_object_glGenVertexArraysAPPLE_pointer;
/*      */   long APPLE_vertex_array_object_glIsVertexArrayAPPLE_pointer;
/*      */   long APPLE_vertex_array_range_glVertexArrayRangeAPPLE_pointer;
/*      */   long APPLE_vertex_array_range_glFlushVertexArrayRangeAPPLE_pointer;
/*      */   long APPLE_vertex_array_range_glVertexArrayParameteriAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glEnableVertexAttribAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glDisableVertexAttribAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glIsVertexAttribEnabledAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glMapVertexAttrib1dAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glMapVertexAttrib1fAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glMapVertexAttrib2dAPPLE_pointer;
/*      */   long APPLE_vertex_program_evaluators_glMapVertexAttrib2fAPPLE_pointer;
/*      */   long ARB_blend_func_extended_glBindFragDataLocationIndexed_pointer;
/*      */   long ARB_blend_func_extended_glGetFragDataIndex_pointer;
/*      */   long ARB_buffer_object_glBindBufferARB_pointer;
/*      */   long ARB_buffer_object_glDeleteBuffersARB_pointer;
/*      */   long ARB_buffer_object_glGenBuffersARB_pointer;
/*      */   long ARB_buffer_object_glIsBufferARB_pointer;
/*      */   long ARB_buffer_object_glBufferDataARB_pointer;
/*      */   long ARB_buffer_object_glBufferSubDataARB_pointer;
/*      */   long ARB_buffer_object_glGetBufferSubDataARB_pointer;
/*      */   long ARB_buffer_object_glMapBufferARB_pointer;
/*      */   long ARB_buffer_object_glUnmapBufferARB_pointer;
/*      */   long ARB_buffer_object_glGetBufferParameterivARB_pointer;
/*      */   long ARB_buffer_object_glGetBufferPointervARB_pointer;
/*      */   long ARB_color_buffer_float_glClampColorARB_pointer;
/*      */   long ARB_copy_buffer_glCopyBufferSubData_pointer;
/*      */   long ARB_draw_buffers_glDrawBuffersARB_pointer;
/*      */   long ARB_draw_buffers_blend_glBlendEquationiARB_pointer;
/*      */   long ARB_draw_buffers_blend_glBlendEquationSeparateiARB_pointer;
/*      */   long ARB_draw_buffers_blend_glBlendFunciARB_pointer;
/*      */   long ARB_draw_buffers_blend_glBlendFuncSeparateiARB_pointer;
/*      */   long ARB_draw_elements_base_vertex_glDrawElementsBaseVertex_pointer;
/*      */   long ARB_draw_elements_base_vertex_glDrawRangeElementsBaseVertex_pointer;
/*      */   long ARB_draw_elements_base_vertex_glDrawElementsInstancedBaseVertex_pointer;
/*      */   long ARB_draw_indirect_glDrawArraysIndirect_pointer;
/*      */   long ARB_draw_indirect_glDrawElementsIndirect_pointer;
/*      */   long ARB_draw_instanced_glDrawArraysInstancedARB_pointer;
/*      */   long ARB_draw_instanced_glDrawElementsInstancedARB_pointer;
/*      */   long ARB_framebuffer_object_glIsRenderbuffer_pointer;
/*      */   long ARB_framebuffer_object_glBindRenderbuffer_pointer;
/*      */   long ARB_framebuffer_object_glDeleteRenderbuffers_pointer;
/*      */   long ARB_framebuffer_object_glGenRenderbuffers_pointer;
/*      */   long ARB_framebuffer_object_glRenderbufferStorage_pointer;
/*      */   long ARB_framebuffer_object_glRenderbufferStorageMultisample_pointer;
/*      */   long ARB_framebuffer_object_glGetRenderbufferParameteriv_pointer;
/*      */   long ARB_framebuffer_object_glIsFramebuffer_pointer;
/*      */   long ARB_framebuffer_object_glBindFramebuffer_pointer;
/*      */   long ARB_framebuffer_object_glDeleteFramebuffers_pointer;
/*      */   long ARB_framebuffer_object_glGenFramebuffers_pointer;
/*      */   long ARB_framebuffer_object_glCheckFramebufferStatus_pointer;
/*      */   long ARB_framebuffer_object_glFramebufferTexture1D_pointer;
/*      */   long ARB_framebuffer_object_glFramebufferTexture2D_pointer;
/*      */   long ARB_framebuffer_object_glFramebufferTexture3D_pointer;
/*      */   long ARB_framebuffer_object_glFramebufferTextureLayer_pointer;
/*      */   long ARB_framebuffer_object_glFramebufferRenderbuffer_pointer;
/*      */   long ARB_framebuffer_object_glGetFramebufferAttachmentParameteriv_pointer;
/*      */   long ARB_framebuffer_object_glBlitFramebuffer_pointer;
/*      */   long ARB_framebuffer_object_glGenerateMipmap_pointer;
/*      */   long ARB_geometry_shader4_glProgramParameteriARB_pointer;
/*      */   long ARB_geometry_shader4_glFramebufferTextureARB_pointer;
/*      */   long ARB_geometry_shader4_glFramebufferTextureLayerARB_pointer;
/*      */   long ARB_geometry_shader4_glFramebufferTextureFaceARB_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform1d_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform2d_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform3d_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform4d_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform1dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform2dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform3dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniform4dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix2dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix3dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix4dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix2x3dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix2x4dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix3x2dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix3x4dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix4x2dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glUniformMatrix4x3dv_pointer;
/*      */   long ARB_gpu_shader_fp64_glGetUniformdv_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform1dEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform2dEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform3dEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform4dEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform1dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform2dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform3dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniform4dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix2dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix3dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix4dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix2x3dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix2x4dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix3x2dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix3x4dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix4x2dvEXT_pointer;
/*      */   long ARB_gpu_shader_fp64_glProgramUniformMatrix4x3dvEXT_pointer;
/*      */   long ARB_imaging_glColorTable_pointer;
/*      */   long ARB_imaging_glColorSubTable_pointer;
/*      */   long ARB_imaging_glColorTableParameteriv_pointer;
/*      */   long ARB_imaging_glColorTableParameterfv_pointer;
/*      */   long ARB_imaging_glCopyColorSubTable_pointer;
/*      */   long ARB_imaging_glCopyColorTable_pointer;
/*      */   long ARB_imaging_glGetColorTable_pointer;
/*      */   long ARB_imaging_glGetColorTableParameteriv_pointer;
/*      */   long ARB_imaging_glGetColorTableParameterfv_pointer;
/*      */   long ARB_imaging_glBlendEquation_pointer;
/*      */   long ARB_imaging_glBlendColor_pointer;
/*      */   long ARB_imaging_glHistogram_pointer;
/*      */   long ARB_imaging_glResetHistogram_pointer;
/*      */   long ARB_imaging_glGetHistogram_pointer;
/*      */   long ARB_imaging_glGetHistogramParameterfv_pointer;
/*      */   long ARB_imaging_glGetHistogramParameteriv_pointer;
/*      */   long ARB_imaging_glMinmax_pointer;
/*      */   long ARB_imaging_glResetMinmax_pointer;
/*      */   long ARB_imaging_glGetMinmax_pointer;
/*      */   long ARB_imaging_glGetMinmaxParameterfv_pointer;
/*      */   long ARB_imaging_glGetMinmaxParameteriv_pointer;
/*      */   long ARB_imaging_glConvolutionFilter1D_pointer;
/*      */   long ARB_imaging_glConvolutionFilter2D_pointer;
/*      */   long ARB_imaging_glConvolutionParameterf_pointer;
/*      */   long ARB_imaging_glConvolutionParameterfv_pointer;
/*      */   long ARB_imaging_glConvolutionParameteri_pointer;
/*      */   long ARB_imaging_glConvolutionParameteriv_pointer;
/*      */   long ARB_imaging_glCopyConvolutionFilter1D_pointer;
/*      */   long ARB_imaging_glCopyConvolutionFilter2D_pointer;
/*      */   long ARB_imaging_glGetConvolutionFilter_pointer;
/*      */   long ARB_imaging_glGetConvolutionParameterfv_pointer;
/*      */   long ARB_imaging_glGetConvolutionParameteriv_pointer;
/*      */   long ARB_imaging_glSeparableFilter2D_pointer;
/*      */   long ARB_imaging_glGetSeparableFilter_pointer;
/*      */   long ARB_instanced_arrays_glVertexAttribDivisorARB_pointer;
/*      */   long ARB_map_buffer_range_glMapBufferRange_pointer;
/*      */   long ARB_map_buffer_range_glFlushMappedBufferRange_pointer;
/*      */   long ARB_matrix_palette_glCurrentPaletteMatrixARB_pointer;
/*      */   long ARB_matrix_palette_glMatrixIndexPointerARB_pointer;
/*      */   long ARB_matrix_palette_glMatrixIndexubvARB_pointer;
/*      */   long ARB_matrix_palette_glMatrixIndexusvARB_pointer;
/*      */   long ARB_matrix_palette_glMatrixIndexuivARB_pointer;
/*      */   long ARB_multisample_glSampleCoverageARB_pointer;
/*      */   long ARB_multitexture_glClientActiveTextureARB_pointer;
/*      */   long ARB_multitexture_glActiveTextureARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord1fARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord1dARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord1iARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord1sARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord2fARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord2dARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord2iARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord2sARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord3fARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord3dARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord3iARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord3sARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord4fARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord4dARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord4iARB_pointer;
/*      */   long ARB_multitexture_glMultiTexCoord4sARB_pointer;
/*      */   long ARB_occlusion_query_glGenQueriesARB_pointer;
/*      */   long ARB_occlusion_query_glDeleteQueriesARB_pointer;
/*      */   long ARB_occlusion_query_glIsQueryARB_pointer;
/*      */   long ARB_occlusion_query_glBeginQueryARB_pointer;
/*      */   long ARB_occlusion_query_glEndQueryARB_pointer;
/*      */   long ARB_occlusion_query_glGetQueryivARB_pointer;
/*      */   long ARB_occlusion_query_glGetQueryObjectivARB_pointer;
/*      */   long ARB_occlusion_query_glGetQueryObjectuivARB_pointer;
/*      */   long ARB_point_parameters_glPointParameterfARB_pointer;
/*      */   long ARB_point_parameters_glPointParameterfvARB_pointer;
/*      */   long ARB_program_glProgramStringARB_pointer;
/*      */   long ARB_program_glBindProgramARB_pointer;
/*      */   long ARB_program_glDeleteProgramsARB_pointer;
/*      */   long ARB_program_glGenProgramsARB_pointer;
/*      */   long ARB_program_glProgramEnvParameter4fARB_pointer;
/*      */   long ARB_program_glProgramEnvParameter4dARB_pointer;
/*      */   long ARB_program_glProgramEnvParameter4fvARB_pointer;
/*      */   long ARB_program_glProgramEnvParameter4dvARB_pointer;
/*      */   long ARB_program_glProgramLocalParameter4fARB_pointer;
/*      */   long ARB_program_glProgramLocalParameter4dARB_pointer;
/*      */   long ARB_program_glProgramLocalParameter4fvARB_pointer;
/*      */   long ARB_program_glProgramLocalParameter4dvARB_pointer;
/*      */   long ARB_program_glGetProgramEnvParameterfvARB_pointer;
/*      */   long ARB_program_glGetProgramEnvParameterdvARB_pointer;
/*      */   long ARB_program_glGetProgramLocalParameterfvARB_pointer;
/*      */   long ARB_program_glGetProgramLocalParameterdvARB_pointer;
/*      */   long ARB_program_glGetProgramivARB_pointer;
/*      */   long ARB_program_glGetProgramStringARB_pointer;
/*      */   long ARB_program_glIsProgramARB_pointer;
/*      */   long ARB_provoking_vertex_glProvokingVertex_pointer;
/*      */   long ARB_sample_shading_glMinSampleShadingARB_pointer;
/*      */   long ARB_sampler_objects_glGenSamplers_pointer;
/*      */   long ARB_sampler_objects_glDeleteSamplers_pointer;
/*      */   long ARB_sampler_objects_glIsSampler_pointer;
/*      */   long ARB_sampler_objects_glBindSampler_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameteri_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameterf_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameteriv_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameterfv_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameterIiv_pointer;
/*      */   long ARB_sampler_objects_glSamplerParameterIuiv_pointer;
/*      */   long ARB_sampler_objects_glGetSamplerParameteriv_pointer;
/*      */   long ARB_sampler_objects_glGetSamplerParameterfv_pointer;
/*      */   long ARB_sampler_objects_glGetSamplerParameterIiv_pointer;
/*      */   long ARB_sampler_objects_glGetSamplerParameterIuiv_pointer;
/*      */   long ARB_shader_objects_glDeleteObjectARB_pointer;
/*      */   long ARB_shader_objects_glGetHandleARB_pointer;
/*      */   long ARB_shader_objects_glDetachObjectARB_pointer;
/*      */   long ARB_shader_objects_glCreateShaderObjectARB_pointer;
/*      */   long ARB_shader_objects_glShaderSourceARB_pointer;
/*      */   long ARB_shader_objects_glCompileShaderARB_pointer;
/*      */   long ARB_shader_objects_glCreateProgramObjectARB_pointer;
/*      */   long ARB_shader_objects_glAttachObjectARB_pointer;
/*      */   long ARB_shader_objects_glLinkProgramARB_pointer;
/*      */   long ARB_shader_objects_glUseProgramObjectARB_pointer;
/*      */   long ARB_shader_objects_glValidateProgramARB_pointer;
/*      */   long ARB_shader_objects_glUniform1fARB_pointer;
/*      */   long ARB_shader_objects_glUniform2fARB_pointer;
/*      */   long ARB_shader_objects_glUniform3fARB_pointer;
/*      */   long ARB_shader_objects_glUniform4fARB_pointer;
/*      */   long ARB_shader_objects_glUniform1iARB_pointer;
/*      */   long ARB_shader_objects_glUniform2iARB_pointer;
/*      */   long ARB_shader_objects_glUniform3iARB_pointer;
/*      */   long ARB_shader_objects_glUniform4iARB_pointer;
/*      */   long ARB_shader_objects_glUniform1fvARB_pointer;
/*      */   long ARB_shader_objects_glUniform2fvARB_pointer;
/*      */   long ARB_shader_objects_glUniform3fvARB_pointer;
/*      */   long ARB_shader_objects_glUniform4fvARB_pointer;
/*      */   long ARB_shader_objects_glUniform1ivARB_pointer;
/*      */   long ARB_shader_objects_glUniform2ivARB_pointer;
/*      */   long ARB_shader_objects_glUniform3ivARB_pointer;
/*      */   long ARB_shader_objects_glUniform4ivARB_pointer;
/*      */   long ARB_shader_objects_glUniformMatrix2fvARB_pointer;
/*      */   long ARB_shader_objects_glUniformMatrix3fvARB_pointer;
/*      */   long ARB_shader_objects_glUniformMatrix4fvARB_pointer;
/*      */   long ARB_shader_objects_glGetObjectParameterfvARB_pointer;
/*      */   long ARB_shader_objects_glGetObjectParameterivARB_pointer;
/*      */   long ARB_shader_objects_glGetInfoLogARB_pointer;
/*      */   long ARB_shader_objects_glGetAttachedObjectsARB_pointer;
/*      */   long ARB_shader_objects_glGetUniformLocationARB_pointer;
/*      */   long ARB_shader_objects_glGetActiveUniformARB_pointer;
/*      */   long ARB_shader_objects_glGetUniformfvARB_pointer;
/*      */   long ARB_shader_objects_glGetUniformivARB_pointer;
/*      */   long ARB_shader_objects_glGetShaderSourceARB_pointer;
/*      */   long ARB_shader_subroutine_glGetSubroutineUniformLocation_pointer;
/*      */   long ARB_shader_subroutine_glGetSubroutineIndex_pointer;
/*      */   long ARB_shader_subroutine_glGetActiveSubroutineUniformiv_pointer;
/*      */   long ARB_shader_subroutine_glGetActiveSubroutineUniformName_pointer;
/*      */   long ARB_shader_subroutine_glGetActiveSubroutineName_pointer;
/*      */   long ARB_shader_subroutine_glUniformSubroutinesuiv_pointer;
/*      */   long ARB_shader_subroutine_glGetUniformSubroutineuiv_pointer;
/*      */   long ARB_shader_subroutine_glGetProgramStageiv_pointer;
/*      */   long ARB_shading_language_include_glNamedStringARB_pointer;
/*      */   long ARB_shading_language_include_glDeleteNamedStringARB_pointer;
/*      */   long ARB_shading_language_include_glCompileShaderIncludeARB_pointer;
/*      */   long ARB_shading_language_include_glIsNamedStringARB_pointer;
/*      */   long ARB_shading_language_include_glGetNamedStringARB_pointer;
/*      */   long ARB_shading_language_include_glGetNamedStringivARB_pointer;
/*      */   long ARB_sync_glFenceSync_pointer;
/*      */   long ARB_sync_glIsSync_pointer;
/*      */   long ARB_sync_glDeleteSync_pointer;
/*      */   long ARB_sync_glClientWaitSync_pointer;
/*      */   long ARB_sync_glWaitSync_pointer;
/*      */   long ARB_sync_glGetInteger64v_pointer;
/*      */   long ARB_sync_glGetSynciv_pointer;
/*      */   long ARB_tessellation_shader_glPatchParameteri_pointer;
/*      */   long ARB_tessellation_shader_glPatchParameterfv_pointer;
/*      */   long ARB_texture_buffer_object_glTexBufferARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexImage1DARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexImage2DARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexImage3DARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexSubImage1DARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexSubImage2DARB_pointer;
/*      */   long ARB_texture_compression_glCompressedTexSubImage3DARB_pointer;
/*      */   long ARB_texture_compression_glGetCompressedTexImageARB_pointer;
/*      */   long ARB_texture_multisample_glTexImage2DMultisample_pointer;
/*      */   long ARB_texture_multisample_glTexImage3DMultisample_pointer;
/*      */   long ARB_texture_multisample_glGetMultisamplefv_pointer;
/*      */   long ARB_texture_multisample_glSampleMaski_pointer;
/*      */   long ARB_timer_query_glQueryCounter_pointer;
/*      */   long ARB_timer_query_glGetQueryObjecti64v_pointer;
/*      */   long ARB_timer_query_glGetQueryObjectui64v_pointer;
/*      */   long ARB_transform_feedback2_glBindTransformFeedback_pointer;
/*      */   long ARB_transform_feedback2_glDeleteTransformFeedbacks_pointer;
/*      */   long ARB_transform_feedback2_glGenTransformFeedbacks_pointer;
/*      */   long ARB_transform_feedback2_glIsTransformFeedback_pointer;
/*      */   long ARB_transform_feedback2_glPauseTransformFeedback_pointer;
/*      */   long ARB_transform_feedback2_glResumeTransformFeedback_pointer;
/*      */   long ARB_transform_feedback2_glDrawTransformFeedback_pointer;
/*      */   long ARB_transform_feedback3_glDrawTransformFeedbackStream_pointer;
/*      */   long ARB_transform_feedback3_glBeginQueryIndexed_pointer;
/*      */   long ARB_transform_feedback3_glEndQueryIndexed_pointer;
/*      */   long ARB_transform_feedback3_glGetQueryIndexediv_pointer;
/*      */   long ARB_transpose_matrix_glLoadTransposeMatrixfARB_pointer;
/*      */   long ARB_transpose_matrix_glMultTransposeMatrixfARB_pointer;
/*      */   long ARB_uniform_buffer_object_glGetUniformIndices_pointer;
/*      */   long ARB_uniform_buffer_object_glGetActiveUniformsiv_pointer;
/*      */   long ARB_uniform_buffer_object_glGetActiveUniformName_pointer;
/*      */   long ARB_uniform_buffer_object_glGetUniformBlockIndex_pointer;
/*      */   long ARB_uniform_buffer_object_glGetActiveUniformBlockiv_pointer;
/*      */   long ARB_uniform_buffer_object_glGetActiveUniformBlockName_pointer;
/*      */   long ARB_uniform_buffer_object_glBindBufferRange_pointer;
/*      */   long ARB_uniform_buffer_object_glBindBufferBase_pointer;
/*      */   long ARB_uniform_buffer_object_glGetIntegeri_v_pointer;
/*      */   long ARB_uniform_buffer_object_glUniformBlockBinding_pointer;
/*      */   long ARB_vertex_array_object_glBindVertexArray_pointer;
/*      */   long ARB_vertex_array_object_glDeleteVertexArrays_pointer;
/*      */   long ARB_vertex_array_object_glGenVertexArrays_pointer;
/*      */   long ARB_vertex_array_object_glIsVertexArray_pointer;
/*      */   long ARB_vertex_blend_glWeightbvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightsvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightivARB_pointer;
/*      */   long ARB_vertex_blend_glWeightfvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightdvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightubvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightusvARB_pointer;
/*      */   long ARB_vertex_blend_glWeightuivARB_pointer;
/*      */   long ARB_vertex_blend_glWeightPointerARB_pointer;
/*      */   long ARB_vertex_blend_glVertexBlendARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib1sARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib1fARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib1dARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib2sARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib2fARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib2dARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib3sARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib3fARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib3dARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib4sARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib4fARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib4dARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttrib4NubARB_pointer;
/*      */   long ARB_vertex_program_glVertexAttribPointerARB_pointer;
/*      */   long ARB_vertex_program_glEnableVertexAttribArrayARB_pointer;
/*      */   long ARB_vertex_program_glDisableVertexAttribArrayARB_pointer;
/*      */   long ARB_vertex_program_glGetVertexAttribfvARB_pointer;
/*      */   long ARB_vertex_program_glGetVertexAttribdvARB_pointer;
/*      */   long ARB_vertex_program_glGetVertexAttribivARB_pointer;
/*      */   long ARB_vertex_program_glGetVertexAttribPointervARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib1sARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib1fARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib1dARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib2sARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib2fARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib2dARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib3sARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib3fARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib3dARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib4sARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib4fARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib4dARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttrib4NubARB_pointer;
/*      */   long ARB_vertex_shader_glVertexAttribPointerARB_pointer;
/*      */   long ARB_vertex_shader_glEnableVertexAttribArrayARB_pointer;
/*      */   long ARB_vertex_shader_glDisableVertexAttribArrayARB_pointer;
/*      */   long ARB_vertex_shader_glBindAttribLocationARB_pointer;
/*      */   long ARB_vertex_shader_glGetActiveAttribARB_pointer;
/*      */   long ARB_vertex_shader_glGetAttribLocationARB_pointer;
/*      */   long ARB_vertex_shader_glGetVertexAttribfvARB_pointer;
/*      */   long ARB_vertex_shader_glGetVertexAttribdvARB_pointer;
/*      */   long ARB_vertex_shader_glGetVertexAttribivARB_pointer;
/*      */   long ARB_vertex_shader_glGetVertexAttribPointervARB_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP2ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP4ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP2uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexP4uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP1ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP2ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP4ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP1uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP2uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glTexCoordP4uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP1ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP2ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP4ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP1uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP2uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP4uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glNormalP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glNormalP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glColorP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glColorP4ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glColorP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glColorP4uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glSecondaryColorP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glSecondaryColorP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP1ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP2ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP3ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP4ui_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP1uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP2uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP3uiv_pointer;
/*      */   long ARB_vertex_type_2_10_10_10_rev_glVertexAttribP4uiv_pointer;
/*      */   long ARB_window_pos_glWindowPos2fARB_pointer;
/*      */   long ARB_window_pos_glWindowPos2dARB_pointer;
/*      */   long ARB_window_pos_glWindowPos2iARB_pointer;
/*      */   long ARB_window_pos_glWindowPos2sARB_pointer;
/*      */   long ARB_window_pos_glWindowPos3fARB_pointer;
/*      */   long ARB_window_pos_glWindowPos3dARB_pointer;
/*      */   long ARB_window_pos_glWindowPos3iARB_pointer;
/*      */   long ARB_window_pos_glWindowPos3sARB_pointer;
/*      */   long ATI_draw_buffers_glDrawBuffersATI_pointer;
/*      */   long ATI_element_array_glElementPointerATI_pointer;
/*      */   long ATI_element_array_glDrawElementArrayATI_pointer;
/*      */   long ATI_element_array_glDrawRangeElementArrayATI_pointer;
/*      */   long ATI_envmap_bumpmap_glTexBumpParameterfvATI_pointer;
/*      */   long ATI_envmap_bumpmap_glTexBumpParameterivATI_pointer;
/*      */   long ATI_envmap_bumpmap_glGetTexBumpParameterfvATI_pointer;
/*      */   long ATI_envmap_bumpmap_glGetTexBumpParameterivATI_pointer;
/*      */   long ATI_fragment_shader_glGenFragmentShadersATI_pointer;
/*      */   long ATI_fragment_shader_glBindFragmentShaderATI_pointer;
/*      */   long ATI_fragment_shader_glDeleteFragmentShaderATI_pointer;
/*      */   long ATI_fragment_shader_glBeginFragmentShaderATI_pointer;
/*      */   long ATI_fragment_shader_glEndFragmentShaderATI_pointer;
/*      */   long ATI_fragment_shader_glPassTexCoordATI_pointer;
/*      */   long ATI_fragment_shader_glSampleMapATI_pointer;
/*      */   long ATI_fragment_shader_glColorFragmentOp1ATI_pointer;
/*      */   long ATI_fragment_shader_glColorFragmentOp2ATI_pointer;
/*      */   long ATI_fragment_shader_glColorFragmentOp3ATI_pointer;
/*      */   long ATI_fragment_shader_glAlphaFragmentOp1ATI_pointer;
/*      */   long ATI_fragment_shader_glAlphaFragmentOp2ATI_pointer;
/*      */   long ATI_fragment_shader_glAlphaFragmentOp3ATI_pointer;
/*      */   long ATI_fragment_shader_glSetFragmentShaderConstantATI_pointer;
/*      */   long ATI_map_object_buffer_glMapObjectBufferATI_pointer;
/*      */   long ATI_map_object_buffer_glUnmapObjectBufferATI_pointer;
/*      */   long ATI_pn_triangles_glPNTrianglesfATI_pointer;
/*      */   long ATI_pn_triangles_glPNTrianglesiATI_pointer;
/*      */   long ATI_separate_stencil_glStencilOpSeparateATI_pointer;
/*      */   long ATI_separate_stencil_glStencilFuncSeparateATI_pointer;
/*      */   long ATI_vertex_array_object_glNewObjectBufferATI_pointer;
/*      */   long ATI_vertex_array_object_glIsObjectBufferATI_pointer;
/*      */   long ATI_vertex_array_object_glUpdateObjectBufferATI_pointer;
/*      */   long ATI_vertex_array_object_glGetObjectBufferfvATI_pointer;
/*      */   long ATI_vertex_array_object_glGetObjectBufferivATI_pointer;
/*      */   long ATI_vertex_array_object_glFreeObjectBufferATI_pointer;
/*      */   long ATI_vertex_array_object_glArrayObjectATI_pointer;
/*      */   long ATI_vertex_array_object_glGetArrayObjectfvATI_pointer;
/*      */   long ATI_vertex_array_object_glGetArrayObjectivATI_pointer;
/*      */   long ATI_vertex_array_object_glVariantArrayObjectATI_pointer;
/*      */   long ATI_vertex_array_object_glGetVariantArrayObjectfvATI_pointer;
/*      */   long ATI_vertex_array_object_glGetVariantArrayObjectivATI_pointer;
/*      */   long ATI_vertex_attrib_array_object_glVertexAttribArrayObjectATI_pointer;
/*      */   long ATI_vertex_attrib_array_object_glGetVertexAttribArrayObjectfvATI_pointer;
/*      */   long ATI_vertex_attrib_array_object_glGetVertexAttribArrayObjectivATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream2fATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream2dATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream2iATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream2sATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream3fATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream3dATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream3iATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream3sATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream4fATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream4dATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream4iATI_pointer;
/*      */   long ATI_vertex_streams_glVertexStream4sATI_pointer;
/*      */   long ATI_vertex_streams_glNormalStream3bATI_pointer;
/*      */   long ATI_vertex_streams_glNormalStream3fATI_pointer;
/*      */   long ATI_vertex_streams_glNormalStream3dATI_pointer;
/*      */   long ATI_vertex_streams_glNormalStream3iATI_pointer;
/*      */   long ATI_vertex_streams_glNormalStream3sATI_pointer;
/*      */   long ATI_vertex_streams_glClientActiveVertexStreamATI_pointer;
/*      */   long ATI_vertex_streams_glVertexBlendEnvfATI_pointer;
/*      */   long ATI_vertex_streams_glVertexBlendEnviATI_pointer;
/*      */   long EXT_bindable_uniform_glUniformBufferEXT_pointer;
/*      */   long EXT_bindable_uniform_glGetUniformBufferSizeEXT_pointer;
/*      */   long EXT_bindable_uniform_glGetUniformOffsetEXT_pointer;
/*      */   long EXT_blend_color_glBlendColorEXT_pointer;
/*      */   long EXT_blend_equation_separate_glBlendEquationSeparateEXT_pointer;
/*      */   long EXT_blend_func_separate_glBlendFuncSeparateEXT_pointer;
/*      */   long EXT_blend_minmax_glBlendEquationEXT_pointer;
/*      */   long EXT_compiled_vertex_array_glLockArraysEXT_pointer;
/*      */   long EXT_compiled_vertex_array_glUnlockArraysEXT_pointer;
/*      */   long EXT_depth_bounds_test_glDepthBoundsEXT_pointer;
/*      */   long EXT_direct_state_access_glClientAttribDefaultEXT_pointer;
/*      */   long EXT_direct_state_access_glPushClientAttribDefaultEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixLoadfEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixLoaddEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixMultfEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixMultdEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixLoadIdentityEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixRotatefEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixRotatedEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixScalefEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixScaledEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixTranslatefEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixTranslatedEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixOrthoEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixFrustumEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixPushEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixPopEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameteriEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameterfEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyTextureImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyTextureImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyTextureSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyTextureSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureImageEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureLevelParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureLevelParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyTextureSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glBindMultiTextureEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexCoordPointerEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexEnvfEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexEnvfvEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexEnviEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexEnvivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGendEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGendvEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGenfEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGenfvEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGeniEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexGenivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexEnvfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexEnvivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexGendvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexGenfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexGenivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameteriEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameterfEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyMultiTexImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyMultiTexImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyMultiTexSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyMultiTexSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexImageEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexLevelParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexLevelParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCopyMultiTexSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glEnableClientStateIndexedEXT_pointer;
/*      */   long EXT_direct_state_access_glDisableClientStateIndexedEXT_pointer;
/*      */   long EXT_direct_state_access_glEnableClientStateiEXT_pointer;
/*      */   long EXT_direct_state_access_glDisableClientStateiEXT_pointer;
/*      */   long EXT_direct_state_access_glGetFloatIndexedvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetDoubleIndexedvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetPointerIndexedvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetFloati_vEXT_pointer;
/*      */   long EXT_direct_state_access_glGetDoublei_vEXT_pointer;
/*      */   long EXT_direct_state_access_glGetPointeri_vEXT_pointer;
/*      */   long EXT_direct_state_access_glEnableIndexedEXT_pointer;
/*      */   long EXT_direct_state_access_glDisableIndexedEXT_pointer;
/*      */   long EXT_direct_state_access_glIsEnabledIndexedEXT_pointer;
/*      */   long EXT_direct_state_access_glGetIntegerIndexedvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetBooleanIndexedvEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramStringEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameter4dEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameter4dvEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameter4fEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameter4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramLocalParameterdvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramLocalParameterfvEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramStringEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedTextureSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glGetCompressedTextureImageEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexSubImage3DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexSubImage2DEXT_pointer;
/*      */   long EXT_direct_state_access_glCompressedMultiTexSubImage1DEXT_pointer;
/*      */   long EXT_direct_state_access_glGetCompressedMultiTexImageEXT_pointer;
/*      */   long EXT_direct_state_access_glGetCompressedTexImage_pointer;
/*      */   long EXT_direct_state_access_glMatrixLoadTransposefEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixLoadTransposedEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixMultTransposefEXT_pointer;
/*      */   long EXT_direct_state_access_glMatrixMultTransposedEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedBufferDataEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedBufferSubDataEXT_pointer;
/*      */   long EXT_direct_state_access_glMapNamedBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glUnmapNamedBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedBufferParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedBufferPointervEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedBufferSubDataEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1fEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2fEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3fEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4fEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1iEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2iEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3iEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4iEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1ivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2ivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3ivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4ivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix2fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix3fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix2x3fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix3x2fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix2x4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix4x2fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix3x4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniformMatrix4x3fvEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameterIivEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureParameterIuivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureParameterIivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetTextureParameterIuivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameterIivEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexParameterIuivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexParameterIivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetMultiTexParameterIuivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1uiEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2uiEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3uiEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4uiEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform1uivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform2uivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform3uivEXT_pointer;
/*      */   long EXT_direct_state_access_glProgramUniform4uivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameters4fvEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameterI4iEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameterI4ivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParametersI4ivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameterI4uiEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParameterI4uivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedProgramLocalParametersI4uivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramLocalParameterIivEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedProgramLocalParameterIuivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedRenderbufferStorageEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedRenderbufferParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedRenderbufferStorageMultisampleEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedRenderbufferStorageMultisampleCoverageEXT_pointer;
/*      */   long EXT_direct_state_access_glCheckNamedFramebufferStatusEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTexture1DEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTexture2DEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTexture3DEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferRenderbufferEXT_pointer;
/*      */   long EXT_direct_state_access_glGetNamedFramebufferAttachmentParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glGenerateTextureMipmapEXT_pointer;
/*      */   long EXT_direct_state_access_glGenerateMultiTexMipmapEXT_pointer;
/*      */   long EXT_direct_state_access_glFramebufferDrawBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glFramebufferDrawBuffersEXT_pointer;
/*      */   long EXT_direct_state_access_glFramebufferReadBufferEXT_pointer;
/*      */   long EXT_direct_state_access_glGetFramebufferParameterivEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedCopyBufferSubDataEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTextureEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTextureLayerEXT_pointer;
/*      */   long EXT_direct_state_access_glNamedFramebufferTextureFaceEXT_pointer;
/*      */   long EXT_direct_state_access_glTextureRenderbufferEXT_pointer;
/*      */   long EXT_direct_state_access_glMultiTexRenderbufferEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayVertexOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayColorOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayEdgeFlagOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayIndexOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayNormalOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayTexCoordOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayMultiTexCoordOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayFogCoordOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArraySecondaryColorOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayVertexAttribOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glVertexArrayVertexAttribIOffsetEXT_pointer;
/*      */   long EXT_direct_state_access_glEnableVertexArrayEXT_pointer;
/*      */   long EXT_direct_state_access_glDisableVertexArrayEXT_pointer;
/*      */   long EXT_direct_state_access_glEnableVertexArrayAttribEXT_pointer;
/*      */   long EXT_direct_state_access_glDisableVertexArrayAttribEXT_pointer;
/*      */   long EXT_direct_state_access_glGetVertexArrayIntegervEXT_pointer;
/*      */   long EXT_direct_state_access_glGetVertexArrayPointervEXT_pointer;
/*      */   long EXT_direct_state_access_glGetVertexArrayIntegeri_vEXT_pointer;
/*      */   long EXT_direct_state_access_glGetVertexArrayPointeri_vEXT_pointer;
/*      */   long EXT_direct_state_access_glMapNamedBufferRangeEXT_pointer;
/*      */   long EXT_direct_state_access_glFlushMappedNamedBufferRangeEXT_pointer;
/*      */   long EXT_draw_buffers2_glColorMaskIndexedEXT_pointer;
/*      */   long EXT_draw_buffers2_glGetBooleanIndexedvEXT_pointer;
/*      */   long EXT_draw_buffers2_glGetIntegerIndexedvEXT_pointer;
/*      */   long EXT_draw_buffers2_glEnableIndexedEXT_pointer;
/*      */   long EXT_draw_buffers2_glDisableIndexedEXT_pointer;
/*      */   long EXT_draw_buffers2_glIsEnabledIndexedEXT_pointer;
/*      */   long EXT_draw_instanced_glDrawArraysInstancedEXT_pointer;
/*      */   long EXT_draw_instanced_glDrawElementsInstancedEXT_pointer;
/*      */   long EXT_draw_range_elements_glDrawRangeElementsEXT_pointer;
/*      */   long EXT_fog_coord_glFogCoordfEXT_pointer;
/*      */   long EXT_fog_coord_glFogCoorddEXT_pointer;
/*      */   long EXT_fog_coord_glFogCoordPointerEXT_pointer;
/*      */   long EXT_framebuffer_blit_glBlitFramebufferEXT_pointer;
/*      */   long EXT_framebuffer_multisample_glRenderbufferStorageMultisampleEXT_pointer;
/*      */   long EXT_framebuffer_object_glIsRenderbufferEXT_pointer;
/*      */   long EXT_framebuffer_object_glBindRenderbufferEXT_pointer;
/*      */   long EXT_framebuffer_object_glDeleteRenderbuffersEXT_pointer;
/*      */   long EXT_framebuffer_object_glGenRenderbuffersEXT_pointer;
/*      */   long EXT_framebuffer_object_glRenderbufferStorageEXT_pointer;
/*      */   long EXT_framebuffer_object_glGetRenderbufferParameterivEXT_pointer;
/*      */   long EXT_framebuffer_object_glIsFramebufferEXT_pointer;
/*      */   long EXT_framebuffer_object_glBindFramebufferEXT_pointer;
/*      */   long EXT_framebuffer_object_glDeleteFramebuffersEXT_pointer;
/*      */   long EXT_framebuffer_object_glGenFramebuffersEXT_pointer;
/*      */   long EXT_framebuffer_object_glCheckFramebufferStatusEXT_pointer;
/*      */   long EXT_framebuffer_object_glFramebufferTexture1DEXT_pointer;
/*      */   long EXT_framebuffer_object_glFramebufferTexture2DEXT_pointer;
/*      */   long EXT_framebuffer_object_glFramebufferTexture3DEXT_pointer;
/*      */   long EXT_framebuffer_object_glFramebufferRenderbufferEXT_pointer;
/*      */   long EXT_framebuffer_object_glGetFramebufferAttachmentParameterivEXT_pointer;
/*      */   long EXT_framebuffer_object_glGenerateMipmapEXT_pointer;
/*      */   long EXT_geometry_shader4_glProgramParameteriEXT_pointer;
/*      */   long EXT_geometry_shader4_glFramebufferTextureEXT_pointer;
/*      */   long EXT_geometry_shader4_glFramebufferTextureLayerEXT_pointer;
/*      */   long EXT_geometry_shader4_glFramebufferTextureFaceEXT_pointer;
/*      */   long EXT_gpu_program_parameters_glProgramEnvParameters4fvEXT_pointer;
/*      */   long EXT_gpu_program_parameters_glProgramLocalParameters4fvEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI1iEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI2iEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI3iEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4iEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI1uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI2uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI3uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI1ivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI2ivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI3ivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4ivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI1uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI2uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI3uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4bvEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4svEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4ubvEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribI4usvEXT_pointer;
/*      */   long EXT_gpu_shader4_glVertexAttribIPointerEXT_pointer;
/*      */   long EXT_gpu_shader4_glGetVertexAttribIivEXT_pointer;
/*      */   long EXT_gpu_shader4_glGetVertexAttribIuivEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform1uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform2uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform3uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform4uiEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform1uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform2uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform3uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glUniform4uivEXT_pointer;
/*      */   long EXT_gpu_shader4_glGetUniformuivEXT_pointer;
/*      */   long EXT_gpu_shader4_glBindFragDataLocationEXT_pointer;
/*      */   long EXT_gpu_shader4_glGetFragDataLocationEXT_pointer;
/*      */   long EXT_multi_draw_arrays_glMultiDrawArraysEXT_pointer;
/*      */   long EXT_paletted_texture_glColorTableEXT_pointer;
/*      */   long EXT_paletted_texture_glColorSubTableEXT_pointer;
/*      */   long EXT_paletted_texture_glGetColorTableEXT_pointer;
/*      */   long EXT_paletted_texture_glGetColorTableParameterivEXT_pointer;
/*      */   long EXT_paletted_texture_glGetColorTableParameterfvEXT_pointer;
/*      */   long EXT_point_parameters_glPointParameterfEXT_pointer;
/*      */   long EXT_point_parameters_glPointParameterfvEXT_pointer;
/*      */   long EXT_provoking_vertex_glProvokingVertexEXT_pointer;
/*      */   long EXT_secondary_color_glSecondaryColor3bEXT_pointer;
/*      */   long EXT_secondary_color_glSecondaryColor3fEXT_pointer;
/*      */   long EXT_secondary_color_glSecondaryColor3dEXT_pointer;
/*      */   long EXT_secondary_color_glSecondaryColor3ubEXT_pointer;
/*      */   long EXT_secondary_color_glSecondaryColorPointerEXT_pointer;
/*      */   long EXT_separate_shader_objects_glUseShaderProgramEXT_pointer;
/*      */   long EXT_separate_shader_objects_glActiveProgramEXT_pointer;
/*      */   long EXT_separate_shader_objects_glCreateShaderProgramEXT_pointer;
/*      */   long EXT_shader_image_load_store_glBindImageTextureEXT_pointer;
/*      */   long EXT_shader_image_load_store_glMemoryBarrierEXT_pointer;
/*      */   long EXT_stencil_clear_tag_glStencilClearTagEXT_pointer;
/*      */   long EXT_stencil_two_side_glActiveStencilFaceEXT_pointer;
/*      */   long EXT_texture_array_glFramebufferTextureLayerEXT_pointer;
/*      */   long EXT_texture_buffer_object_glTexBufferEXT_pointer;
/*      */   long EXT_texture_integer_glClearColorIiEXT_pointer;
/*      */   long EXT_texture_integer_glClearColorIuiEXT_pointer;
/*      */   long EXT_texture_integer_glTexParameterIivEXT_pointer;
/*      */   long EXT_texture_integer_glTexParameterIuivEXT_pointer;
/*      */   long EXT_texture_integer_glGetTexParameterIivEXT_pointer;
/*      */   long EXT_texture_integer_glGetTexParameterIuivEXT_pointer;
/*      */   long EXT_timer_query_glGetQueryObjecti64vEXT_pointer;
/*      */   long EXT_timer_query_glGetQueryObjectui64vEXT_pointer;
/*      */   long EXT_transform_feedback_glBindBufferRangeEXT_pointer;
/*      */   long EXT_transform_feedback_glBindBufferOffsetEXT_pointer;
/*      */   long EXT_transform_feedback_glBindBufferBaseEXT_pointer;
/*      */   long EXT_transform_feedback_glBeginTransformFeedbackEXT_pointer;
/*      */   long EXT_transform_feedback_glEndTransformFeedbackEXT_pointer;
/*      */   long EXT_transform_feedback_glTransformFeedbackVaryingsEXT_pointer;
/*      */   long EXT_transform_feedback_glGetTransformFeedbackVaryingEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL1dEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL2dEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL3dEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL4dEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL1dvEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL2dvEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL3dvEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribL4dvEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexAttribLPointerEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glGetVertexAttribLdvEXT_pointer;
/*      */   long EXT_vertex_attrib_64bit_glVertexArrayVertexAttribLOffsetEXT_pointer;
/*      */   long EXT_vertex_shader_glBeginVertexShaderEXT_pointer;
/*      */   long EXT_vertex_shader_glEndVertexShaderEXT_pointer;
/*      */   long EXT_vertex_shader_glBindVertexShaderEXT_pointer;
/*      */   long EXT_vertex_shader_glGenVertexShadersEXT_pointer;
/*      */   long EXT_vertex_shader_glDeleteVertexShaderEXT_pointer;
/*      */   long EXT_vertex_shader_glShaderOp1EXT_pointer;
/*      */   long EXT_vertex_shader_glShaderOp2EXT_pointer;
/*      */   long EXT_vertex_shader_glShaderOp3EXT_pointer;
/*      */   long EXT_vertex_shader_glSwizzleEXT_pointer;
/*      */   long EXT_vertex_shader_glWriteMaskEXT_pointer;
/*      */   long EXT_vertex_shader_glInsertComponentEXT_pointer;
/*      */   long EXT_vertex_shader_glExtractComponentEXT_pointer;
/*      */   long EXT_vertex_shader_glGenSymbolsEXT_pointer;
/*      */   long EXT_vertex_shader_glSetInvariantEXT_pointer;
/*      */   long EXT_vertex_shader_glSetLocalConstantEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantbvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantsvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantivEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantfvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantdvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantubvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantusvEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantuivEXT_pointer;
/*      */   long EXT_vertex_shader_glVariantPointerEXT_pointer;
/*      */   long EXT_vertex_shader_glEnableVariantClientStateEXT_pointer;
/*      */   long EXT_vertex_shader_glDisableVariantClientStateEXT_pointer;
/*      */   long EXT_vertex_shader_glBindLightParameterEXT_pointer;
/*      */   long EXT_vertex_shader_glBindMaterialParameterEXT_pointer;
/*      */   long EXT_vertex_shader_glBindTexGenParameterEXT_pointer;
/*      */   long EXT_vertex_shader_glBindTextureUnitParameterEXT_pointer;
/*      */   long EXT_vertex_shader_glBindParameterEXT_pointer;
/*      */   long EXT_vertex_shader_glIsVariantEnabledEXT_pointer;
/*      */   long EXT_vertex_shader_glGetVariantBooleanvEXT_pointer;
/*      */   long EXT_vertex_shader_glGetVariantIntegervEXT_pointer;
/*      */   long EXT_vertex_shader_glGetVariantFloatvEXT_pointer;
/*      */   long EXT_vertex_shader_glGetVariantPointervEXT_pointer;
/*      */   long EXT_vertex_shader_glGetInvariantBooleanvEXT_pointer;
/*      */   long EXT_vertex_shader_glGetInvariantIntegervEXT_pointer;
/*      */   long EXT_vertex_shader_glGetInvariantFloatvEXT_pointer;
/*      */   long EXT_vertex_shader_glGetLocalConstantBooleanvEXT_pointer;
/*      */   long EXT_vertex_shader_glGetLocalConstantIntegervEXT_pointer;
/*      */   long EXT_vertex_shader_glGetLocalConstantFloatvEXT_pointer;
/*      */   long EXT_vertex_weighting_glVertexWeightfEXT_pointer;
/*      */   long EXT_vertex_weighting_glVertexWeightPointerEXT_pointer;
/*      */   long GL11_glAccum_pointer;
/*      */   long GL11_glAlphaFunc_pointer;
/*      */   long GL11_glClearColor_pointer;
/*      */   long GL11_glClearAccum_pointer;
/*      */   long GL11_glClear_pointer;
/*      */   long GL11_glCallLists_pointer;
/*      */   long GL11_glCallList_pointer;
/*      */   long GL11_glBlendFunc_pointer;
/*      */   long GL11_glBitmap_pointer;
/*      */   long GL11_glBindTexture_pointer;
/*      */   long GL11_glPrioritizeTextures_pointer;
/*      */   long GL11_glAreTexturesResident_pointer;
/*      */   long GL11_glBegin_pointer;
/*      */   long GL11_glEnd_pointer;
/*      */   long GL11_glArrayElement_pointer;
/*      */   long GL11_glClearDepth_pointer;
/*      */   long GL11_glDeleteLists_pointer;
/*      */   long GL11_glDeleteTextures_pointer;
/*      */   long GL11_glCullFace_pointer;
/*      */   long GL11_glCopyTexSubImage2D_pointer;
/*      */   long GL11_glCopyTexSubImage1D_pointer;
/*      */   long GL11_glCopyTexImage2D_pointer;
/*      */   long GL11_glCopyTexImage1D_pointer;
/*      */   long GL11_glCopyPixels_pointer;
/*      */   long GL11_glColorPointer_pointer;
/*      */   long GL11_glColorMaterial_pointer;
/*      */   long GL11_glColorMask_pointer;
/*      */   long GL11_glColor3b_pointer;
/*      */   long GL11_glColor3f_pointer;
/*      */   long GL11_glColor3d_pointer;
/*      */   long GL11_glColor3ub_pointer;
/*      */   long GL11_glColor4b_pointer;
/*      */   long GL11_glColor4f_pointer;
/*      */   long GL11_glColor4d_pointer;
/*      */   long GL11_glColor4ub_pointer;
/*      */   long GL11_glClipPlane_pointer;
/*      */   long GL11_glClearStencil_pointer;
/*      */   long GL11_glEvalPoint1_pointer;
/*      */   long GL11_glEvalPoint2_pointer;
/*      */   long GL11_glEvalMesh1_pointer;
/*      */   long GL11_glEvalMesh2_pointer;
/*      */   long GL11_glEvalCoord1f_pointer;
/*      */   long GL11_glEvalCoord1d_pointer;
/*      */   long GL11_glEvalCoord2f_pointer;
/*      */   long GL11_glEvalCoord2d_pointer;
/*      */   long GL11_glEnableClientState_pointer;
/*      */   long GL11_glDisableClientState_pointer;
/*      */   long GL11_glEnable_pointer;
/*      */   long GL11_glDisable_pointer;
/*      */   long GL11_glEdgeFlagPointer_pointer;
/*      */   long GL11_glEdgeFlag_pointer;
/*      */   long GL11_glDrawPixels_pointer;
/*      */   long GL11_glDrawElements_pointer;
/*      */   long GL11_glDrawBuffer_pointer;
/*      */   long GL11_glDrawArrays_pointer;
/*      */   long GL11_glDepthRange_pointer;
/*      */   long GL11_glDepthMask_pointer;
/*      */   long GL11_glDepthFunc_pointer;
/*      */   long GL11_glFeedbackBuffer_pointer;
/*      */   long GL11_glGetPixelMapfv_pointer;
/*      */   long GL11_glGetPixelMapuiv_pointer;
/*      */   long GL11_glGetPixelMapusv_pointer;
/*      */   long GL11_glGetMaterialfv_pointer;
/*      */   long GL11_glGetMaterialiv_pointer;
/*      */   long GL11_glGetMapfv_pointer;
/*      */   long GL11_glGetMapdv_pointer;
/*      */   long GL11_glGetMapiv_pointer;
/*      */   long GL11_glGetLightfv_pointer;
/*      */   long GL11_glGetLightiv_pointer;
/*      */   long GL11_glGetError_pointer;
/*      */   long GL11_glGetClipPlane_pointer;
/*      */   long GL11_glGetBooleanv_pointer;
/*      */   long GL11_glGetDoublev_pointer;
/*      */   long GL11_glGetFloatv_pointer;
/*      */   long GL11_glGetIntegerv_pointer;
/*      */   long GL11_glGenTextures_pointer;
/*      */   long GL11_glGenLists_pointer;
/*      */   long GL11_glFrustum_pointer;
/*      */   long GL11_glFrontFace_pointer;
/*      */   long GL11_glFogf_pointer;
/*      */   long GL11_glFogi_pointer;
/*      */   long GL11_glFogfv_pointer;
/*      */   long GL11_glFogiv_pointer;
/*      */   long GL11_glFlush_pointer;
/*      */   long GL11_glFinish_pointer;
/*      */   long GL11_glGetPointerv_pointer;
/*      */   long GL11_glIsEnabled_pointer;
/*      */   long GL11_glInterleavedArrays_pointer;
/*      */   long GL11_glInitNames_pointer;
/*      */   long GL11_glHint_pointer;
/*      */   long GL11_glGetTexParameterfv_pointer;
/*      */   long GL11_glGetTexParameteriv_pointer;
/*      */   long GL11_glGetTexLevelParameterfv_pointer;
/*      */   long GL11_glGetTexLevelParameteriv_pointer;
/*      */   long GL11_glGetTexImage_pointer;
/*      */   long GL11_glGetTexGeniv_pointer;
/*      */   long GL11_glGetTexGenfv_pointer;
/*      */   long GL11_glGetTexGendv_pointer;
/*      */   long GL11_glGetTexEnviv_pointer;
/*      */   long GL11_glGetTexEnvfv_pointer;
/*      */   long GL11_glGetString_pointer;
/*      */   long GL11_glGetPolygonStipple_pointer;
/*      */   long GL11_glIsList_pointer;
/*      */   long GL11_glMaterialf_pointer;
/*      */   long GL11_glMateriali_pointer;
/*      */   long GL11_glMaterialfv_pointer;
/*      */   long GL11_glMaterialiv_pointer;
/*      */   long GL11_glMapGrid1f_pointer;
/*      */   long GL11_glMapGrid1d_pointer;
/*      */   long GL11_glMapGrid2f_pointer;
/*      */   long GL11_glMapGrid2d_pointer;
/*      */   long GL11_glMap2f_pointer;
/*      */   long GL11_glMap2d_pointer;
/*      */   long GL11_glMap1f_pointer;
/*      */   long GL11_glMap1d_pointer;
/*      */   long GL11_glLogicOp_pointer;
/*      */   long GL11_glLoadName_pointer;
/*      */   long GL11_glLoadMatrixf_pointer;
/*      */   long GL11_glLoadMatrixd_pointer;
/*      */   long GL11_glLoadIdentity_pointer;
/*      */   long GL11_glListBase_pointer;
/*      */   long GL11_glLineWidth_pointer;
/*      */   long GL11_glLineStipple_pointer;
/*      */   long GL11_glLightModelf_pointer;
/*      */   long GL11_glLightModeli_pointer;
/*      */   long GL11_glLightModelfv_pointer;
/*      */   long GL11_glLightModeliv_pointer;
/*      */   long GL11_glLightf_pointer;
/*      */   long GL11_glLighti_pointer;
/*      */   long GL11_glLightfv_pointer;
/*      */   long GL11_glLightiv_pointer;
/*      */   long GL11_glIsTexture_pointer;
/*      */   long GL11_glMatrixMode_pointer;
/*      */   long GL11_glPolygonStipple_pointer;
/*      */   long GL11_glPolygonOffset_pointer;
/*      */   long GL11_glPolygonMode_pointer;
/*      */   long GL11_glPointSize_pointer;
/*      */   long GL11_glPixelZoom_pointer;
/*      */   long GL11_glPixelTransferf_pointer;
/*      */   long GL11_glPixelTransferi_pointer;
/*      */   long GL11_glPixelStoref_pointer;
/*      */   long GL11_glPixelStorei_pointer;
/*      */   long GL11_glPixelMapfv_pointer;
/*      */   long GL11_glPixelMapuiv_pointer;
/*      */   long GL11_glPixelMapusv_pointer;
/*      */   long GL11_glPassThrough_pointer;
/*      */   long GL11_glOrtho_pointer;
/*      */   long GL11_glNormalPointer_pointer;
/*      */   long GL11_glNormal3b_pointer;
/*      */   long GL11_glNormal3f_pointer;
/*      */   long GL11_glNormal3d_pointer;
/*      */   long GL11_glNormal3i_pointer;
/*      */   long GL11_glNewList_pointer;
/*      */   long GL11_glEndList_pointer;
/*      */   long GL11_glMultMatrixf_pointer;
/*      */   long GL11_glMultMatrixd_pointer;
/*      */   long GL11_glShadeModel_pointer;
/*      */   long GL11_glSelectBuffer_pointer;
/*      */   long GL11_glScissor_pointer;
/*      */   long GL11_glScalef_pointer;
/*      */   long GL11_glScaled_pointer;
/*      */   long GL11_glRotatef_pointer;
/*      */   long GL11_glRenderMode_pointer;
/*      */   long GL11_glRectf_pointer;
/*      */   long GL11_glRectd_pointer;
/*      */   long GL11_glRecti_pointer;
/*      */   long GL11_glReadPixels_pointer;
/*      */   long GL11_glReadBuffer_pointer;
/*      */   long GL11_glRasterPos2f_pointer;
/*      */   long GL11_glRasterPos2d_pointer;
/*      */   long GL11_glRasterPos2i_pointer;
/*      */   long GL11_glRasterPos3f_pointer;
/*      */   long GL11_glRasterPos3d_pointer;
/*      */   long GL11_glRasterPos3i_pointer;
/*      */   long GL11_glRasterPos4f_pointer;
/*      */   long GL11_glRasterPos4d_pointer;
/*      */   long GL11_glRasterPos4i_pointer;
/*      */   long GL11_glPushName_pointer;
/*      */   long GL11_glPopName_pointer;
/*      */   long GL11_glPushMatrix_pointer;
/*      */   long GL11_glPopMatrix_pointer;
/*      */   long GL11_glPushClientAttrib_pointer;
/*      */   long GL11_glPopClientAttrib_pointer;
/*      */   long GL11_glPushAttrib_pointer;
/*      */   long GL11_glPopAttrib_pointer;
/*      */   long GL11_glStencilFunc_pointer;
/*      */   long GL11_glVertexPointer_pointer;
/*      */   long GL11_glVertex2f_pointer;
/*      */   long GL11_glVertex2d_pointer;
/*      */   long GL11_glVertex2i_pointer;
/*      */   long GL11_glVertex3f_pointer;
/*      */   long GL11_glVertex3d_pointer;
/*      */   long GL11_glVertex3i_pointer;
/*      */   long GL11_glVertex4f_pointer;
/*      */   long GL11_glVertex4d_pointer;
/*      */   long GL11_glVertex4i_pointer;
/*      */   long GL11_glTranslatef_pointer;
/*      */   long GL11_glTranslated_pointer;
/*      */   long GL11_glTexImage1D_pointer;
/*      */   long GL11_glTexImage2D_pointer;
/*      */   long GL11_glTexSubImage1D_pointer;
/*      */   long GL11_glTexSubImage2D_pointer;
/*      */   long GL11_glTexParameterf_pointer;
/*      */   long GL11_glTexParameteri_pointer;
/*      */   long GL11_glTexParameterfv_pointer;
/*      */   long GL11_glTexParameteriv_pointer;
/*      */   long GL11_glTexGenf_pointer;
/*      */   long GL11_glTexGend_pointer;
/*      */   long GL11_glTexGenfv_pointer;
/*      */   long GL11_glTexGendv_pointer;
/*      */   long GL11_glTexGeni_pointer;
/*      */   long GL11_glTexGeniv_pointer;
/*      */   long GL11_glTexEnvf_pointer;
/*      */   long GL11_glTexEnvi_pointer;
/*      */   long GL11_glTexEnvfv_pointer;
/*      */   long GL11_glTexEnviv_pointer;
/*      */   long GL11_glTexCoordPointer_pointer;
/*      */   long GL11_glTexCoord1f_pointer;
/*      */   long GL11_glTexCoord1d_pointer;
/*      */   long GL11_glTexCoord2f_pointer;
/*      */   long GL11_glTexCoord2d_pointer;
/*      */   long GL11_glTexCoord3f_pointer;
/*      */   long GL11_glTexCoord3d_pointer;
/*      */   long GL11_glTexCoord4f_pointer;
/*      */   long GL11_glTexCoord4d_pointer;
/*      */   long GL11_glStencilOp_pointer;
/*      */   long GL11_glStencilMask_pointer;
/*      */   long GL11_glViewport_pointer;
/*      */   long GL12_glDrawRangeElements_pointer;
/*      */   long GL12_glTexImage3D_pointer;
/*      */   long GL12_glTexSubImage3D_pointer;
/*      */   long GL12_glCopyTexSubImage3D_pointer;
/*      */   long GL13_glActiveTexture_pointer;
/*      */   long GL13_glClientActiveTexture_pointer;
/*      */   long GL13_glCompressedTexImage1D_pointer;
/*      */   long GL13_glCompressedTexImage2D_pointer;
/*      */   long GL13_glCompressedTexImage3D_pointer;
/*      */   long GL13_glCompressedTexSubImage1D_pointer;
/*      */   long GL13_glCompressedTexSubImage2D_pointer;
/*      */   long GL13_glCompressedTexSubImage3D_pointer;
/*      */   long GL13_glGetCompressedTexImage_pointer;
/*      */   long GL13_glMultiTexCoord1f_pointer;
/*      */   long GL13_glMultiTexCoord1d_pointer;
/*      */   long GL13_glMultiTexCoord2f_pointer;
/*      */   long GL13_glMultiTexCoord2d_pointer;
/*      */   long GL13_glMultiTexCoord3f_pointer;
/*      */   long GL13_glMultiTexCoord3d_pointer;
/*      */   long GL13_glMultiTexCoord4f_pointer;
/*      */   long GL13_glMultiTexCoord4d_pointer;
/*      */   long GL13_glLoadTransposeMatrixf_pointer;
/*      */   long GL13_glLoadTransposeMatrixd_pointer;
/*      */   long GL13_glMultTransposeMatrixf_pointer;
/*      */   long GL13_glMultTransposeMatrixd_pointer;
/*      */   long GL13_glSampleCoverage_pointer;
/*      */   long GL14_glBlendEquation_pointer;
/*      */   long GL14_glBlendColor_pointer;
/*      */   long GL14_glFogCoordf_pointer;
/*      */   long GL14_glFogCoordd_pointer;
/*      */   long GL14_glFogCoordPointer_pointer;
/*      */   long GL14_glMultiDrawArrays_pointer;
/*      */   long GL14_glPointParameteri_pointer;
/*      */   long GL14_glPointParameterf_pointer;
/*      */   long GL14_glPointParameteriv_pointer;
/*      */   long GL14_glPointParameterfv_pointer;
/*      */   long GL14_glSecondaryColor3b_pointer;
/*      */   long GL14_glSecondaryColor3f_pointer;
/*      */   long GL14_glSecondaryColor3d_pointer;
/*      */   long GL14_glSecondaryColor3ub_pointer;
/*      */   long GL14_glSecondaryColorPointer_pointer;
/*      */   long GL14_glBlendFuncSeparate_pointer;
/*      */   long GL14_glWindowPos2f_pointer;
/*      */   long GL14_glWindowPos2d_pointer;
/*      */   long GL14_glWindowPos2i_pointer;
/*      */   long GL14_glWindowPos3f_pointer;
/*      */   long GL14_glWindowPos3d_pointer;
/*      */   long GL14_glWindowPos3i_pointer;
/*      */   long GL15_glBindBuffer_pointer;
/*      */   long GL15_glDeleteBuffers_pointer;
/*      */   long GL15_glGenBuffers_pointer;
/*      */   long GL15_glIsBuffer_pointer;
/*      */   long GL15_glBufferData_pointer;
/*      */   long GL15_glBufferSubData_pointer;
/*      */   long GL15_glGetBufferSubData_pointer;
/*      */   long GL15_glMapBuffer_pointer;
/*      */   long GL15_glUnmapBuffer_pointer;
/*      */   long GL15_glGetBufferParameteriv_pointer;
/*      */   long GL15_glGetBufferPointerv_pointer;
/*      */   long GL15_glGenQueries_pointer;
/*      */   long GL15_glDeleteQueries_pointer;
/*      */   long GL15_glIsQuery_pointer;
/*      */   long GL15_glBeginQuery_pointer;
/*      */   long GL15_glEndQuery_pointer;
/*      */   long GL15_glGetQueryiv_pointer;
/*      */   long GL15_glGetQueryObjectiv_pointer;
/*      */   long GL15_glGetQueryObjectuiv_pointer;
/*      */   long GL20_glShaderSource_pointer;
/*      */   long GL20_glCreateShader_pointer;
/*      */   long GL20_glIsShader_pointer;
/*      */   long GL20_glCompileShader_pointer;
/*      */   long GL20_glDeleteShader_pointer;
/*      */   long GL20_glCreateProgram_pointer;
/*      */   long GL20_glIsProgram_pointer;
/*      */   long GL20_glAttachShader_pointer;
/*      */   long GL20_glDetachShader_pointer;
/*      */   long GL20_glLinkProgram_pointer;
/*      */   long GL20_glUseProgram_pointer;
/*      */   long GL20_glValidateProgram_pointer;
/*      */   long GL20_glDeleteProgram_pointer;
/*      */   long GL20_glUniform1f_pointer;
/*      */   long GL20_glUniform2f_pointer;
/*      */   long GL20_glUniform3f_pointer;
/*      */   long GL20_glUniform4f_pointer;
/*      */   long GL20_glUniform1i_pointer;
/*      */   long GL20_glUniform2i_pointer;
/*      */   long GL20_glUniform3i_pointer;
/*      */   long GL20_glUniform4i_pointer;
/*      */   long GL20_glUniform1fv_pointer;
/*      */   long GL20_glUniform2fv_pointer;
/*      */   long GL20_glUniform3fv_pointer;
/*      */   long GL20_glUniform4fv_pointer;
/*      */   long GL20_glUniform1iv_pointer;
/*      */   long GL20_glUniform2iv_pointer;
/*      */   long GL20_glUniform3iv_pointer;
/*      */   long GL20_glUniform4iv_pointer;
/*      */   long GL20_glUniformMatrix2fv_pointer;
/*      */   long GL20_glUniformMatrix3fv_pointer;
/*      */   long GL20_glUniformMatrix4fv_pointer;
/*      */   long GL20_glGetShaderiv_pointer;
/*      */   long GL20_glGetProgramiv_pointer;
/*      */   long GL20_glGetShaderInfoLog_pointer;
/*      */   long GL20_glGetProgramInfoLog_pointer;
/*      */   long GL20_glGetAttachedShaders_pointer;
/*      */   long GL20_glGetUniformLocation_pointer;
/*      */   long GL20_glGetActiveUniform_pointer;
/*      */   long GL20_glGetUniformfv_pointer;
/*      */   long GL20_glGetUniformiv_pointer;
/*      */   long GL20_glGetShaderSource_pointer;
/*      */   long GL20_glVertexAttrib1s_pointer;
/*      */   long GL20_glVertexAttrib1f_pointer;
/*      */   long GL20_glVertexAttrib1d_pointer;
/*      */   long GL20_glVertexAttrib2s_pointer;
/*      */   long GL20_glVertexAttrib2f_pointer;
/*      */   long GL20_glVertexAttrib2d_pointer;
/*      */   long GL20_glVertexAttrib3s_pointer;
/*      */   long GL20_glVertexAttrib3f_pointer;
/*      */   long GL20_glVertexAttrib3d_pointer;
/*      */   long GL20_glVertexAttrib4s_pointer;
/*      */   long GL20_glVertexAttrib4f_pointer;
/*      */   long GL20_glVertexAttrib4d_pointer;
/*      */   long GL20_glVertexAttrib4Nub_pointer;
/*      */   long GL20_glVertexAttribPointer_pointer;
/*      */   long GL20_glEnableVertexAttribArray_pointer;
/*      */   long GL20_glDisableVertexAttribArray_pointer;
/*      */   long GL20_glGetVertexAttribfv_pointer;
/*      */   long GL20_glGetVertexAttribdv_pointer;
/*      */   long GL20_glGetVertexAttribiv_pointer;
/*      */   long GL20_glGetVertexAttribPointerv_pointer;
/*      */   long GL20_glBindAttribLocation_pointer;
/*      */   long GL20_glGetActiveAttrib_pointer;
/*      */   long GL20_glGetAttribLocation_pointer;
/*      */   long GL20_glDrawBuffers_pointer;
/*      */   long GL20_glStencilOpSeparate_pointer;
/*      */   long GL20_glStencilFuncSeparate_pointer;
/*      */   long GL20_glStencilMaskSeparate_pointer;
/*      */   long GL20_glBlendEquationSeparate_pointer;
/*      */   long GL21_glUniformMatrix2x3fv_pointer;
/*      */   long GL21_glUniformMatrix3x2fv_pointer;
/*      */   long GL21_glUniformMatrix2x4fv_pointer;
/*      */   long GL21_glUniformMatrix4x2fv_pointer;
/*      */   long GL21_glUniformMatrix3x4fv_pointer;
/*      */   long GL21_glUniformMatrix4x3fv_pointer;
/*      */   long GL30_glGetStringi_pointer;
/*      */   long GL30_glClearBufferfv_pointer;
/*      */   long GL30_glClearBufferiv_pointer;
/*      */   long GL30_glClearBufferuiv_pointer;
/*      */   long GL30_glClearBufferfi_pointer;
/*      */   long GL30_glVertexAttribI1i_pointer;
/*      */   long GL30_glVertexAttribI2i_pointer;
/*      */   long GL30_glVertexAttribI3i_pointer;
/*      */   long GL30_glVertexAttribI4i_pointer;
/*      */   long GL30_glVertexAttribI1ui_pointer;
/*      */   long GL30_glVertexAttribI2ui_pointer;
/*      */   long GL30_glVertexAttribI3ui_pointer;
/*      */   long GL30_glVertexAttribI4ui_pointer;
/*      */   long GL30_glVertexAttribI1iv_pointer;
/*      */   long GL30_glVertexAttribI2iv_pointer;
/*      */   long GL30_glVertexAttribI3iv_pointer;
/*      */   long GL30_glVertexAttribI4iv_pointer;
/*      */   long GL30_glVertexAttribI1uiv_pointer;
/*      */   long GL30_glVertexAttribI2uiv_pointer;
/*      */   long GL30_glVertexAttribI3uiv_pointer;
/*      */   long GL30_glVertexAttribI4uiv_pointer;
/*      */   long GL30_glVertexAttribI4bv_pointer;
/*      */   long GL30_glVertexAttribI4sv_pointer;
/*      */   long GL30_glVertexAttribI4ubv_pointer;
/*      */   long GL30_glVertexAttribI4usv_pointer;
/*      */   long GL30_glVertexAttribIPointer_pointer;
/*      */   long GL30_glGetVertexAttribIiv_pointer;
/*      */   long GL30_glGetVertexAttribIuiv_pointer;
/*      */   long GL30_glUniform1ui_pointer;
/*      */   long GL30_glUniform2ui_pointer;
/*      */   long GL30_glUniform3ui_pointer;
/*      */   long GL30_glUniform4ui_pointer;
/*      */   long GL30_glUniform1uiv_pointer;
/*      */   long GL30_glUniform2uiv_pointer;
/*      */   long GL30_glUniform3uiv_pointer;
/*      */   long GL30_glUniform4uiv_pointer;
/*      */   long GL30_glGetUniformuiv_pointer;
/*      */   long GL30_glBindFragDataLocation_pointer;
/*      */   long GL30_glGetFragDataLocation_pointer;
/*      */   long GL30_glBeginConditionalRender_pointer;
/*      */   long GL30_glEndConditionalRender_pointer;
/*      */   long GL30_glMapBufferRange_pointer;
/*      */   long GL30_glFlushMappedBufferRange_pointer;
/*      */   long GL30_glClampColor_pointer;
/*      */   long GL30_glIsRenderbuffer_pointer;
/*      */   long GL30_glBindRenderbuffer_pointer;
/*      */   long GL30_glDeleteRenderbuffers_pointer;
/*      */   long GL30_glGenRenderbuffers_pointer;
/*      */   long GL30_glRenderbufferStorage_pointer;
/*      */   long GL30_glGetRenderbufferParameteriv_pointer;
/*      */   long GL30_glIsFramebuffer_pointer;
/*      */   long GL30_glBindFramebuffer_pointer;
/*      */   long GL30_glDeleteFramebuffers_pointer;
/*      */   long GL30_glGenFramebuffers_pointer;
/*      */   long GL30_glCheckFramebufferStatus_pointer;
/*      */   long GL30_glFramebufferTexture1D_pointer;
/*      */   long GL30_glFramebufferTexture2D_pointer;
/*      */   long GL30_glFramebufferTexture3D_pointer;
/*      */   long GL30_glFramebufferRenderbuffer_pointer;
/*      */   long GL30_glGetFramebufferAttachmentParameteriv_pointer;
/*      */   long GL30_glGenerateMipmap_pointer;
/*      */   long GL30_glRenderbufferStorageMultisample_pointer;
/*      */   long GL30_glBlitFramebuffer_pointer;
/*      */   long GL30_glTexParameterIiv_pointer;
/*      */   long GL30_glTexParameterIuiv_pointer;
/*      */   long GL30_glGetTexParameterIiv_pointer;
/*      */   long GL30_glGetTexParameterIuiv_pointer;
/*      */   long GL30_glFramebufferTextureLayer_pointer;
/*      */   long GL30_glColorMaski_pointer;
/*      */   long GL30_glGetBooleani_v_pointer;
/*      */   long GL30_glGetIntegeri_v_pointer;
/*      */   long GL30_glEnablei_pointer;
/*      */   long GL30_glDisablei_pointer;
/*      */   long GL30_glIsEnabledi_pointer;
/*      */   long GL30_glBindBufferRange_pointer;
/*      */   long GL30_glBindBufferBase_pointer;
/*      */   long GL30_glBeginTransformFeedback_pointer;
/*      */   long GL30_glEndTransformFeedback_pointer;
/*      */   long GL30_glTransformFeedbackVaryings_pointer;
/*      */   long GL30_glGetTransformFeedbackVarying_pointer;
/*      */   long GL30_glBindVertexArray_pointer;
/*      */   long GL30_glDeleteVertexArrays_pointer;
/*      */   long GL30_glGenVertexArrays_pointer;
/*      */   long GL30_glIsVertexArray_pointer;
/*      */   long GL31_glDrawArraysInstanced_pointer;
/*      */   long GL31_glDrawElementsInstanced_pointer;
/*      */   long GL31_glCopyBufferSubData_pointer;
/*      */   long GL31_glPrimitiveRestartIndex_pointer;
/*      */   long GL31_glTexBuffer_pointer;
/*      */   long GL31_glGetUniformIndices_pointer;
/*      */   long GL31_glGetActiveUniformsiv_pointer;
/*      */   long GL31_glGetActiveUniformName_pointer;
/*      */   long GL31_glGetUniformBlockIndex_pointer;
/*      */   long GL31_glGetActiveUniformBlockiv_pointer;
/*      */   long GL31_glGetActiveUniformBlockName_pointer;
/*      */   long GL31_glUniformBlockBinding_pointer;
/*      */   long GL32_glDrawElementsBaseVertex_pointer;
/*      */   long GL32_glDrawRangeElementsBaseVertex_pointer;
/*      */   long GL32_glDrawElementsInstancedBaseVertex_pointer;
/*      */   long GL32_glProvokingVertex_pointer;
/*      */   long GL32_glTexImage2DMultisample_pointer;
/*      */   long GL32_glTexImage3DMultisample_pointer;
/*      */   long GL32_glGetMultisamplefv_pointer;
/*      */   long GL32_glSampleMaski_pointer;
/*      */   long GL32_glFramebufferTexture_pointer;
/*      */   long GL32_glFramebufferTextureLayer_pointer;
/*      */   long GL32_glFenceSync_pointer;
/*      */   long GL32_glIsSync_pointer;
/*      */   long GL32_glDeleteSync_pointer;
/*      */   long GL32_glClientWaitSync_pointer;
/*      */   long GL32_glWaitSync_pointer;
/*      */   long GL32_glGetInteger64v_pointer;
/*      */   long GL32_glGetInteger64i_v_pointer;
/*      */   long GL32_glGetSynciv_pointer;
/*      */   long GL33_glBindFragDataLocationIndexed_pointer;
/*      */   long GL33_glGetFragDataIndex_pointer;
/*      */   long GL33_glGenSamplers_pointer;
/*      */   long GL33_glDeleteSamplers_pointer;
/*      */   long GL33_glIsSampler_pointer;
/*      */   long GL33_glBindSampler_pointer;
/*      */   long GL33_glSamplerParameteri_pointer;
/*      */   long GL33_glSamplerParameterf_pointer;
/*      */   long GL33_glSamplerParameteriv_pointer;
/*      */   long GL33_glSamplerParameterfv_pointer;
/*      */   long GL33_glSamplerParameterIiv_pointer;
/*      */   long GL33_glSamplerParameterIuiv_pointer;
/*      */   long GL33_glGetSamplerParameteriv_pointer;
/*      */   long GL33_glGetSamplerParameterfv_pointer;
/*      */   long GL33_glGetSamplerParameterIiv_pointer;
/*      */   long GL33_glGetSamplerParameterIuiv_pointer;
/*      */   long GL33_glQueryCounter_pointer;
/*      */   long GL33_glGetQueryObjecti64v_pointer;
/*      */   long GL33_glGetQueryObjectui64v_pointer;
/*      */   long GL33_glVertexAttribDivisor_pointer;
/*      */   long GL33_glVertexP2ui_pointer;
/*      */   long GL33_glVertexP3ui_pointer;
/*      */   long GL33_glVertexP4ui_pointer;
/*      */   long GL33_glVertexP2uiv_pointer;
/*      */   long GL33_glVertexP3uiv_pointer;
/*      */   long GL33_glVertexP4uiv_pointer;
/*      */   long GL33_glTexCoordP1ui_pointer;
/*      */   long GL33_glTexCoordP2ui_pointer;
/*      */   long GL33_glTexCoordP3ui_pointer;
/*      */   long GL33_glTexCoordP4ui_pointer;
/*      */   long GL33_glTexCoordP1uiv_pointer;
/*      */   long GL33_glTexCoordP2uiv_pointer;
/*      */   long GL33_glTexCoordP3uiv_pointer;
/*      */   long GL33_glTexCoordP4uiv_pointer;
/*      */   long GL33_glMultiTexCoordP1ui_pointer;
/*      */   long GL33_glMultiTexCoordP2ui_pointer;
/*      */   long GL33_glMultiTexCoordP3ui_pointer;
/*      */   long GL33_glMultiTexCoordP4ui_pointer;
/*      */   long GL33_glMultiTexCoordP1uiv_pointer;
/*      */   long GL33_glMultiTexCoordP2uiv_pointer;
/*      */   long GL33_glMultiTexCoordP3uiv_pointer;
/*      */   long GL33_glMultiTexCoordP4uiv_pointer;
/*      */   long GL33_glNormalP3ui_pointer;
/*      */   long GL33_glNormalP3uiv_pointer;
/*      */   long GL33_glColorP3ui_pointer;
/*      */   long GL33_glColorP4ui_pointer;
/*      */   long GL33_glColorP3uiv_pointer;
/*      */   long GL33_glColorP4uiv_pointer;
/*      */   long GL33_glSecondaryColorP3ui_pointer;
/*      */   long GL33_glSecondaryColorP3uiv_pointer;
/*      */   long GL33_glVertexAttribP1ui_pointer;
/*      */   long GL33_glVertexAttribP2ui_pointer;
/*      */   long GL33_glVertexAttribP3ui_pointer;
/*      */   long GL33_glVertexAttribP4ui_pointer;
/*      */   long GL33_glVertexAttribP1uiv_pointer;
/*      */   long GL33_glVertexAttribP2uiv_pointer;
/*      */   long GL33_glVertexAttribP3uiv_pointer;
/*      */   long GL33_glVertexAttribP4uiv_pointer;
/*      */   long GL40_glBlendEquationi_pointer;
/*      */   long GL40_glBlendEquationSeparatei_pointer;
/*      */   long GL40_glBlendFunci_pointer;
/*      */   long GL40_glBlendFuncSeparatei_pointer;
/*      */   long GL40_glDrawArraysIndirect_pointer;
/*      */   long GL40_glDrawElementsIndirect_pointer;
/*      */   long GL40_glUniform1d_pointer;
/*      */   long GL40_glUniform2d_pointer;
/*      */   long GL40_glUniform3d_pointer;
/*      */   long GL40_glUniform4d_pointer;
/*      */   long GL40_glUniform1dv_pointer;
/*      */   long GL40_glUniform2dv_pointer;
/*      */   long GL40_glUniform3dv_pointer;
/*      */   long GL40_glUniform4dv_pointer;
/*      */   long GL40_glUniformMatrix2dv_pointer;
/*      */   long GL40_glUniformMatrix3dv_pointer;
/*      */   long GL40_glUniformMatrix4dv_pointer;
/*      */   long GL40_glUniformMatrix2x3dv_pointer;
/*      */   long GL40_glUniformMatrix2x4dv_pointer;
/*      */   long GL40_glUniformMatrix3x2dv_pointer;
/*      */   long GL40_glUniformMatrix3x4dv_pointer;
/*      */   long GL40_glUniformMatrix4x2dv_pointer;
/*      */   long GL40_glUniformMatrix4x3dv_pointer;
/*      */   long GL40_glGetUniformdv_pointer;
/*      */   long GL40_glMinSampleShading_pointer;
/*      */   long GL40_glGetSubroutineUniformLocation_pointer;
/*      */   long GL40_glGetSubroutineIndex_pointer;
/*      */   long GL40_glGetActiveSubroutineUniformiv_pointer;
/*      */   long GL40_glGetActiveSubroutineUniformName_pointer;
/*      */   long GL40_glGetActiveSubroutineName_pointer;
/*      */   long GL40_glUniformSubroutinesuiv_pointer;
/*      */   long GL40_glGetUniformSubroutineuiv_pointer;
/*      */   long GL40_glGetProgramStageiv_pointer;
/*      */   long GL40_glPatchParameteri_pointer;
/*      */   long GL40_glPatchParameterfv_pointer;
/*      */   long GL40_glBindTransformFeedback_pointer;
/*      */   long GL40_glDeleteTransformFeedbacks_pointer;
/*      */   long GL40_glGenTransformFeedbacks_pointer;
/*      */   long GL40_glIsTransformFeedback_pointer;
/*      */   long GL40_glPauseTransformFeedback_pointer;
/*      */   long GL40_glResumeTransformFeedback_pointer;
/*      */   long GL40_glDrawTransformFeedback_pointer;
/*      */   long GL40_glDrawTransformFeedbackStream_pointer;
/*      */   long GL40_glBeginQueryIndexed_pointer;
/*      */   long GL40_glEndQueryIndexed_pointer;
/*      */   long GL40_glGetQueryIndexediv_pointer;
/*      */   long GREMEDY_string_marker_glStringMarkerGREMEDY_pointer;
/*      */   long NV_conditional_render_glBeginConditionalRenderNV_pointer;
/*      */   long NV_conditional_render_glEndConditionalRenderNV_pointer;
/*      */   long NV_copy_image_glCopyImageSubDataNV_pointer;
/*      */   long NV_depth_buffer_float_glDepthRangedNV_pointer;
/*      */   long NV_depth_buffer_float_glClearDepthdNV_pointer;
/*      */   long NV_depth_buffer_float_glDepthBoundsdNV_pointer;
/*      */   long NV_evaluators_glGetMapControlPointsNV_pointer;
/*      */   long NV_evaluators_glMapControlPointsNV_pointer;
/*      */   long NV_evaluators_glMapParameterfvNV_pointer;
/*      */   long NV_evaluators_glMapParameterivNV_pointer;
/*      */   long NV_evaluators_glGetMapParameterfvNV_pointer;
/*      */   long NV_evaluators_glGetMapParameterivNV_pointer;
/*      */   long NV_evaluators_glGetMapAttribParameterfvNV_pointer;
/*      */   long NV_evaluators_glGetMapAttribParameterivNV_pointer;
/*      */   long NV_evaluators_glEvalMapsNV_pointer;
/*      */   long NV_explicit_multisample_glGetBooleanIndexedvEXT_pointer;
/*      */   long NV_explicit_multisample_glGetIntegerIndexedvEXT_pointer;
/*      */   long NV_explicit_multisample_glGetMultisamplefvNV_pointer;
/*      */   long NV_explicit_multisample_glSampleMaskIndexedNV_pointer;
/*      */   long NV_explicit_multisample_glTexRenderbufferNV_pointer;
/*      */   long NV_fence_glGenFencesNV_pointer;
/*      */   long NV_fence_glDeleteFencesNV_pointer;
/*      */   long NV_fence_glSetFenceNV_pointer;
/*      */   long NV_fence_glTestFenceNV_pointer;
/*      */   long NV_fence_glFinishFenceNV_pointer;
/*      */   long NV_fence_glIsFenceNV_pointer;
/*      */   long NV_fence_glGetFenceivNV_pointer;
/*      */   long NV_fragment_program_glProgramNamedParameter4fNV_pointer;
/*      */   long NV_fragment_program_glProgramNamedParameter4dNV_pointer;
/*      */   long NV_fragment_program_glGetProgramNamedParameterfvNV_pointer;
/*      */   long NV_fragment_program_glGetProgramNamedParameterdvNV_pointer;
/*      */   long NV_framebuffer_multisample_coverage_glRenderbufferStorageMultisampleCoverageNV_pointer;
/*      */   long NV_geometry_program4_glProgramVertexLimitNV_pointer;
/*      */   long NV_geometry_program4_glFramebufferTextureEXT_pointer;
/*      */   long NV_geometry_program4_glFramebufferTextureLayerEXT_pointer;
/*      */   long NV_geometry_program4_glFramebufferTextureFaceEXT_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParameterI4iNV_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParameterI4ivNV_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParametersI4ivNV_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParameterI4uiNV_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParameterI4uivNV_pointer;
/*      */   long NV_gpu_program4_glProgramLocalParametersI4uivNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParameterI4iNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParameterI4ivNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParametersI4ivNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParameterI4uiNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParameterI4uivNV_pointer;
/*      */   long NV_gpu_program4_glProgramEnvParametersI4uivNV_pointer;
/*      */   long NV_gpu_program4_glGetProgramLocalParameterIivNV_pointer;
/*      */   long NV_gpu_program4_glGetProgramLocalParameterIuivNV_pointer;
/*      */   long NV_gpu_program4_glGetProgramEnvParameterIivNV_pointer;
/*      */   long NV_gpu_program4_glGetProgramEnvParameterIuivNV_pointer;
/*      */   long NV_gpu_shader5_glUniform1i64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform2i64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform3i64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform4i64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform1i64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform2i64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform3i64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform4i64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform1ui64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform2ui64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform3ui64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform4ui64NV_pointer;
/*      */   long NV_gpu_shader5_glUniform1ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform2ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform3ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glUniform4ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glGetUniformi64vNV_pointer;
/*      */   long NV_gpu_shader5_glGetUniformui64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform1i64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform2i64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform3i64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform4i64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform1i64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform2i64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform3i64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform4i64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform1ui64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform2ui64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform3ui64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform4ui64NV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform1ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform2ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform3ui64vNV_pointer;
/*      */   long NV_gpu_shader5_glProgramUniform4ui64vNV_pointer;
/*      */   long NV_half_float_glVertex2hNV_pointer;
/*      */   long NV_half_float_glVertex3hNV_pointer;
/*      */   long NV_half_float_glVertex4hNV_pointer;
/*      */   long NV_half_float_glNormal3hNV_pointer;
/*      */   long NV_half_float_glColor3hNV_pointer;
/*      */   long NV_half_float_glColor4hNV_pointer;
/*      */   long NV_half_float_glTexCoord1hNV_pointer;
/*      */   long NV_half_float_glTexCoord2hNV_pointer;
/*      */   long NV_half_float_glTexCoord3hNV_pointer;
/*      */   long NV_half_float_glTexCoord4hNV_pointer;
/*      */   long NV_half_float_glMultiTexCoord1hNV_pointer;
/*      */   long NV_half_float_glMultiTexCoord2hNV_pointer;
/*      */   long NV_half_float_glMultiTexCoord3hNV_pointer;
/*      */   long NV_half_float_glMultiTexCoord4hNV_pointer;
/*      */   long NV_half_float_glFogCoordhNV_pointer;
/*      */   long NV_half_float_glSecondaryColor3hNV_pointer;
/*      */   long NV_half_float_glVertexWeighthNV_pointer;
/*      */   long NV_half_float_glVertexAttrib1hNV_pointer;
/*      */   long NV_half_float_glVertexAttrib2hNV_pointer;
/*      */   long NV_half_float_glVertexAttrib3hNV_pointer;
/*      */   long NV_half_float_glVertexAttrib4hNV_pointer;
/*      */   long NV_half_float_glVertexAttribs1hvNV_pointer;
/*      */   long NV_half_float_glVertexAttribs2hvNV_pointer;
/*      */   long NV_half_float_glVertexAttribs3hvNV_pointer;
/*      */   long NV_half_float_glVertexAttribs4hvNV_pointer;
/*      */   long NV_occlusion_query_glGenOcclusionQueriesNV_pointer;
/*      */   long NV_occlusion_query_glDeleteOcclusionQueriesNV_pointer;
/*      */   long NV_occlusion_query_glIsOcclusionQueryNV_pointer;
/*      */   long NV_occlusion_query_glBeginOcclusionQueryNV_pointer;
/*      */   long NV_occlusion_query_glEndOcclusionQueryNV_pointer;
/*      */   long NV_occlusion_query_glGetOcclusionQueryuivNV_pointer;
/*      */   long NV_occlusion_query_glGetOcclusionQueryivNV_pointer;
/*      */   long NV_parameter_buffer_object_glProgramBufferParametersfvNV_pointer;
/*      */   long NV_parameter_buffer_object_glProgramBufferParametersIivNV_pointer;
/*      */   long NV_parameter_buffer_object_glProgramBufferParametersIuivNV_pointer;
/*      */   long NV_pixel_data_range_glPixelDataRangeNV_pointer;
/*      */   long NV_pixel_data_range_glFlushPixelDataRangeNV_pointer;
/*      */   long NV_point_sprite_glPointParameteriNV_pointer;
/*      */   long NV_point_sprite_glPointParameterivNV_pointer;
/*      */   long NV_primitive_restart_glPrimitiveRestartNV_pointer;
/*      */   long NV_primitive_restart_glPrimitiveRestartIndexNV_pointer;
/*      */   long NV_program_glLoadProgramNV_pointer;
/*      */   long NV_program_glBindProgramNV_pointer;
/*      */   long NV_program_glDeleteProgramsNV_pointer;
/*      */   long NV_program_glGenProgramsNV_pointer;
/*      */   long NV_program_glGetProgramivNV_pointer;
/*      */   long NV_program_glGetProgramStringNV_pointer;
/*      */   long NV_program_glIsProgramNV_pointer;
/*      */   long NV_program_glAreProgramsResidentNV_pointer;
/*      */   long NV_program_glRequestResidentProgramsNV_pointer;
/*      */   long NV_register_combiners_glCombinerParameterfNV_pointer;
/*      */   long NV_register_combiners_glCombinerParameterfvNV_pointer;
/*      */   long NV_register_combiners_glCombinerParameteriNV_pointer;
/*      */   long NV_register_combiners_glCombinerParameterivNV_pointer;
/*      */   long NV_register_combiners_glCombinerInputNV_pointer;
/*      */   long NV_register_combiners_glCombinerOutputNV_pointer;
/*      */   long NV_register_combiners_glFinalCombinerInputNV_pointer;
/*      */   long NV_register_combiners_glGetCombinerInputParameterfvNV_pointer;
/*      */   long NV_register_combiners_glGetCombinerInputParameterivNV_pointer;
/*      */   long NV_register_combiners_glGetCombinerOutputParameterfvNV_pointer;
/*      */   long NV_register_combiners_glGetCombinerOutputParameterivNV_pointer;
/*      */   long NV_register_combiners_glGetFinalCombinerInputParameterfvNV_pointer;
/*      */   long NV_register_combiners_glGetFinalCombinerInputParameterivNV_pointer;
/*      */   long NV_register_combiners2_glCombinerStageParameterfvNV_pointer;
/*      */   long NV_register_combiners2_glGetCombinerStageParameterfvNV_pointer;
/*      */   long NV_shader_buffer_load_glMakeBufferResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glMakeBufferNonResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glIsBufferResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glMakeNamedBufferResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glMakeNamedBufferNonResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glIsNamedBufferResidentNV_pointer;
/*      */   long NV_shader_buffer_load_glGetBufferParameterui64vNV_pointer;
/*      */   long NV_shader_buffer_load_glGetNamedBufferParameterui64vNV_pointer;
/*      */   long NV_shader_buffer_load_glGetIntegerui64vNV_pointer;
/*      */   long NV_shader_buffer_load_glUniformui64NV_pointer;
/*      */   long NV_shader_buffer_load_glUniformui64vNV_pointer;
/*      */   long NV_shader_buffer_load_glGetUniformui64vNV_pointer;
/*      */   long NV_shader_buffer_load_glProgramUniformui64NV_pointer;
/*      */   long NV_shader_buffer_load_glProgramUniformui64vNV_pointer;
/*      */   long NV_texture_barrier_glTextureBarrierNV_pointer;
/*      */   long NV_transform_feedback_glBindBufferRangeNV_pointer;
/*      */   long NV_transform_feedback_glBindBufferOffsetNV_pointer;
/*      */   long NV_transform_feedback_glBindBufferBaseNV_pointer;
/*      */   long NV_transform_feedback_glTransformFeedbackAttribsNV_pointer;
/*      */   long NV_transform_feedback_glTransformFeedbackVaryingsNV_pointer;
/*      */   long NV_transform_feedback_glBeginTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback_glEndTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback_glGetVaryingLocationNV_pointer;
/*      */   long NV_transform_feedback_glGetActiveVaryingNV_pointer;
/*      */   long NV_transform_feedback_glActiveVaryingNV_pointer;
/*      */   long NV_transform_feedback_glGetTransformFeedbackVaryingNV_pointer;
/*      */   long NV_transform_feedback2_glBindTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback2_glDeleteTransformFeedbacksNV_pointer;
/*      */   long NV_transform_feedback2_glGenTransformFeedbacksNV_pointer;
/*      */   long NV_transform_feedback2_glIsTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback2_glPauseTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback2_glResumeTransformFeedbackNV_pointer;
/*      */   long NV_transform_feedback2_glDrawTransformFeedbackNV_pointer;
/*      */   long NV_vertex_array_range_glVertexArrayRangeNV_pointer;
/*      */   long NV_vertex_array_range_glFlushVertexArrayRangeNV_pointer;
/*      */   long NV_vertex_array_range_glAllocateMemoryNV_pointer;
/*      */   long NV_vertex_array_range_glFreeMemoryNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL1i64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL2i64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL3i64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL4i64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL1i64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL2i64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL3i64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL4i64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL1ui64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL2ui64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL3ui64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL4ui64NV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL1ui64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL2ui64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL3ui64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribL4ui64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glGetVertexAttribLi64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glGetVertexAttribLui64vNV_pointer;
/*      */   long NV_vertex_attrib_integer_64bit_glVertexAttribLFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glBufferAddressRangeNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glVertexFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glNormalFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glColorFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glIndexFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glTexCoordFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glEdgeFlagFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glSecondaryColorFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glFogCoordFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glVertexAttribFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glVertexAttribIFormatNV_pointer;
/*      */   long NV_vertex_buffer_unified_memory_glGetIntegerui64i_vNV_pointer;
/*      */   long NV_vertex_program_glExecuteProgramNV_pointer;
/*      */   long NV_vertex_program_glGetProgramParameterfvNV_pointer;
/*      */   long NV_vertex_program_glGetProgramParameterdvNV_pointer;
/*      */   long NV_vertex_program_glGetTrackMatrixivNV_pointer;
/*      */   long NV_vertex_program_glGetVertexAttribfvNV_pointer;
/*      */   long NV_vertex_program_glGetVertexAttribdvNV_pointer;
/*      */   long NV_vertex_program_glGetVertexAttribivNV_pointer;
/*      */   long NV_vertex_program_glGetVertexAttribPointervNV_pointer;
/*      */   long NV_vertex_program_glProgramParameter4fNV_pointer;
/*      */   long NV_vertex_program_glProgramParameter4dNV_pointer;
/*      */   long NV_vertex_program_glProgramParameters4fvNV_pointer;
/*      */   long NV_vertex_program_glProgramParameters4dvNV_pointer;
/*      */   long NV_vertex_program_glTrackMatrixNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribPointerNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib1sNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib1fNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib1dNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib2sNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib2fNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib2dNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib3sNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib3fNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib3dNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib4sNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib4fNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib4dNV_pointer;
/*      */   long NV_vertex_program_glVertexAttrib4ubNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs1svNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs1fvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs1dvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs2svNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs2fvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs2dvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs3svNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs3fvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs3dvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs4svNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs4fvNV_pointer;
/*      */   long NV_vertex_program_glVertexAttribs4dvNV_pointer;
/*      */ 
/*      */   private boolean AMD_draw_buffers_blend_initNativeFunctionAddresses()
/*      */   {
/* 2033 */     return ((this.AMD_draw_buffers_blend_glBlendFuncIndexedAMD_pointer = GLContext.getFunctionAddress("glBlendFuncIndexedAMD")) != 0L ? 1 : 0) & ((this.AMD_draw_buffers_blend_glBlendFuncSeparateIndexedAMD_pointer = GLContext.getFunctionAddress("glBlendFuncSeparateIndexedAMD")) != 0L ? 1 : 0) & ((this.AMD_draw_buffers_blend_glBlendEquationIndexedAMD_pointer = GLContext.getFunctionAddress("glBlendEquationIndexedAMD")) != 0L ? 1 : 0) & ((this.AMD_draw_buffers_blend_glBlendEquationSeparateIndexedAMD_pointer = GLContext.getFunctionAddress("glBlendEquationSeparateIndexedAMD")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean AMD_performance_monitor_initNativeFunctionAddresses()
/*      */   {
/* 2041 */     return ((this.AMD_performance_monitor_glGetPerfMonitorGroupsAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorGroupsAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGetPerfMonitorCountersAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorCountersAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGetPerfMonitorGroupStringAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorGroupStringAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGetPerfMonitorCounterStringAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorCounterStringAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGetPerfMonitorCounterInfoAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorCounterInfoAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGenPerfMonitorsAMD_pointer = GLContext.getFunctionAddress("glGenPerfMonitorsAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glDeletePerfMonitorsAMD_pointer = GLContext.getFunctionAddress("glDeletePerfMonitorsAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glSelectPerfMonitorCountersAMD_pointer = GLContext.getFunctionAddress("glSelectPerfMonitorCountersAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glBeginPerfMonitorAMD_pointer = GLContext.getFunctionAddress("glBeginPerfMonitorAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glEndPerfMonitorAMD_pointer = GLContext.getFunctionAddress("glEndPerfMonitorAMD")) != 0L ? 1 : 0) & ((this.AMD_performance_monitor_glGetPerfMonitorCounterDataAMD_pointer = GLContext.getFunctionAddress("glGetPerfMonitorCounterDataAMD")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean AMD_vertex_shader_tessellator_initNativeFunctionAddresses()
/*      */   {
/* 2056 */     return ((this.AMD_vertex_shader_tessellator_glTessellationFactorAMD_pointer = GLContext.getFunctionAddress("glTessellationFactorAMD")) != 0L ? 1 : 0) & ((this.AMD_vertex_shader_tessellator_glTessellationModeAMD_pointer = GLContext.getFunctionAddress("glTessellationModeAMD")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_element_array_initNativeFunctionAddresses()
/*      */   {
/* 2062 */     return ((this.APPLE_element_array_glElementPointerAPPLE_pointer = GLContext.getFunctionAddress("glElementPointerAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_element_array_glDrawElementArrayAPPLE_pointer = GLContext.getFunctionAddress("glDrawElementArrayAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_element_array_glDrawRangeElementArrayAPPLE_pointer = GLContext.getFunctionAddress("glDrawRangeElementArrayAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_element_array_glMultiDrawElementArrayAPPLE_pointer = GLContext.getFunctionAddress("glMultiDrawElementArrayAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_element_array_glMultiDrawRangeElementArrayAPPLE_pointer = GLContext.getFunctionAddress("glMultiDrawRangeElementArrayAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_fence_initNativeFunctionAddresses()
/*      */   {
/* 2071 */     return ((this.APPLE_fence_glGenFencesAPPLE_pointer = GLContext.getFunctionAddress("glGenFencesAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glDeleteFencesAPPLE_pointer = GLContext.getFunctionAddress("glDeleteFencesAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glSetFenceAPPLE_pointer = GLContext.getFunctionAddress("glSetFenceAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glIsFenceAPPLE_pointer = GLContext.getFunctionAddress("glIsFenceAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glTestFenceAPPLE_pointer = GLContext.getFunctionAddress("glTestFenceAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glFinishFenceAPPLE_pointer = GLContext.getFunctionAddress("glFinishFenceAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glTestObjectAPPLE_pointer = GLContext.getFunctionAddress("glTestObjectAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_fence_glFinishObjectAPPLE_pointer = GLContext.getFunctionAddress("glFinishObjectAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_flush_buffer_range_initNativeFunctionAddresses()
/*      */   {
/* 2083 */     return ((this.APPLE_flush_buffer_range_glBufferParameteriAPPLE_pointer = GLContext.getFunctionAddress("glBufferParameteriAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_flush_buffer_range_glFlushMappedBufferRangeAPPLE_pointer = GLContext.getFunctionAddress("glFlushMappedBufferRangeAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_object_purgeable_initNativeFunctionAddresses()
/*      */   {
/* 2089 */     return ((this.APPLE_object_purgeable_glObjectPurgeableAPPLE_pointer = GLContext.getFunctionAddress("glObjectPurgeableAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_object_purgeable_glObjectUnpurgeableAPPLE_pointer = GLContext.getFunctionAddress("glObjectUnpurgeableAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_object_purgeable_glGetObjectParameterivAPPLE_pointer = GLContext.getFunctionAddress("glGetObjectParameterivAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_texture_range_initNativeFunctionAddresses()
/*      */   {
/* 2096 */     return ((this.APPLE_texture_range_glTextureRangeAPPLE_pointer = GLContext.getFunctionAddress("glTextureRangeAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_texture_range_glGetTexParameterPointervAPPLE_pointer = GLContext.getFunctionAddress("glGetTexParameterPointervAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_vertex_array_object_initNativeFunctionAddresses()
/*      */   {
/* 2102 */     return ((this.APPLE_vertex_array_object_glBindVertexArrayAPPLE_pointer = GLContext.getFunctionAddress("glBindVertexArrayAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_array_object_glDeleteVertexArraysAPPLE_pointer = GLContext.getFunctionAddress("glDeleteVertexArraysAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_array_object_glGenVertexArraysAPPLE_pointer = GLContext.getFunctionAddress("glGenVertexArraysAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_array_object_glIsVertexArrayAPPLE_pointer = GLContext.getFunctionAddress("glIsVertexArrayAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_vertex_array_range_initNativeFunctionAddresses()
/*      */   {
/* 2110 */     return ((this.APPLE_vertex_array_range_glVertexArrayRangeAPPLE_pointer = GLContext.getFunctionAddress("glVertexArrayRangeAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_array_range_glFlushVertexArrayRangeAPPLE_pointer = GLContext.getFunctionAddress("glFlushVertexArrayRangeAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_array_range_glVertexArrayParameteriAPPLE_pointer = GLContext.getFunctionAddress("glVertexArrayParameteriAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean APPLE_vertex_program_evaluators_initNativeFunctionAddresses()
/*      */   {
/* 2117 */     return ((this.APPLE_vertex_program_evaluators_glEnableVertexAttribAPPLE_pointer = GLContext.getFunctionAddress("glEnableVertexAttribAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glDisableVertexAttribAPPLE_pointer = GLContext.getFunctionAddress("glDisableVertexAttribAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glIsVertexAttribEnabledAPPLE_pointer = GLContext.getFunctionAddress("glIsVertexAttribEnabledAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glMapVertexAttrib1dAPPLE_pointer = GLContext.getFunctionAddress("glMapVertexAttrib1dAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glMapVertexAttrib1fAPPLE_pointer = GLContext.getFunctionAddress("glMapVertexAttrib1fAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glMapVertexAttrib2dAPPLE_pointer = GLContext.getFunctionAddress("glMapVertexAttrib2dAPPLE")) != 0L ? 1 : 0) & ((this.APPLE_vertex_program_evaluators_glMapVertexAttrib2fAPPLE_pointer = GLContext.getFunctionAddress("glMapVertexAttrib2fAPPLE")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_blend_func_extended_initNativeFunctionAddresses()
/*      */   {
/* 2128 */     return ((this.ARB_blend_func_extended_glBindFragDataLocationIndexed_pointer = GLContext.getFunctionAddress("glBindFragDataLocationIndexed")) != 0L ? 1 : 0) & ((this.ARB_blend_func_extended_glGetFragDataIndex_pointer = GLContext.getFunctionAddress("glGetFragDataIndex")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_buffer_object_initNativeFunctionAddresses()
/*      */   {
/* 2134 */     return ((this.ARB_buffer_object_glBindBufferARB_pointer = GLContext.getFunctionAddress("glBindBufferARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glDeleteBuffersARB_pointer = GLContext.getFunctionAddress("glDeleteBuffersARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glGenBuffersARB_pointer = GLContext.getFunctionAddress("glGenBuffersARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glIsBufferARB_pointer = GLContext.getFunctionAddress("glIsBufferARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glBufferDataARB_pointer = GLContext.getFunctionAddress("glBufferDataARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glBufferSubDataARB_pointer = GLContext.getFunctionAddress("glBufferSubDataARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glGetBufferSubDataARB_pointer = GLContext.getFunctionAddress("glGetBufferSubDataARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glMapBufferARB_pointer = GLContext.getFunctionAddress("glMapBufferARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glUnmapBufferARB_pointer = GLContext.getFunctionAddress("glUnmapBufferARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glGetBufferParameterivARB_pointer = GLContext.getFunctionAddress("glGetBufferParameterivARB")) != 0L ? 1 : 0) & ((this.ARB_buffer_object_glGetBufferPointervARB_pointer = GLContext.getFunctionAddress("glGetBufferPointervARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_color_buffer_float_initNativeFunctionAddresses()
/*      */   {
/* 2149 */     return (this.ARB_color_buffer_float_glClampColorARB_pointer = GLContext.getFunctionAddress("glClampColorARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_copy_buffer_initNativeFunctionAddresses()
/*      */   {
/* 2154 */     return (this.ARB_copy_buffer_glCopyBufferSubData_pointer = GLContext.getFunctionAddress("glCopyBufferSubData")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_draw_buffers_initNativeFunctionAddresses()
/*      */   {
/* 2159 */     return (this.ARB_draw_buffers_glDrawBuffersARB_pointer = GLContext.getFunctionAddress("glDrawBuffersARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_draw_buffers_blend_initNativeFunctionAddresses()
/*      */   {
/* 2164 */     return ((this.ARB_draw_buffers_blend_glBlendEquationiARB_pointer = GLContext.getFunctionAddress("glBlendEquationiARB")) != 0L ? 1 : 0) & ((this.ARB_draw_buffers_blend_glBlendEquationSeparateiARB_pointer = GLContext.getFunctionAddress("glBlendEquationSeparateiARB")) != 0L ? 1 : 0) & ((this.ARB_draw_buffers_blend_glBlendFunciARB_pointer = GLContext.getFunctionAddress("glBlendFunciARB")) != 0L ? 1 : 0) & ((this.ARB_draw_buffers_blend_glBlendFuncSeparateiARB_pointer = GLContext.getFunctionAddress("glBlendFuncSeparateiARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_draw_elements_base_vertex_initNativeFunctionAddresses()
/*      */   {
/* 2172 */     return ((this.ARB_draw_elements_base_vertex_glDrawElementsBaseVertex_pointer = GLContext.getFunctionAddress("glDrawElementsBaseVertex")) != 0L ? 1 : 0) & ((this.ARB_draw_elements_base_vertex_glDrawRangeElementsBaseVertex_pointer = GLContext.getFunctionAddress("glDrawRangeElementsBaseVertex")) != 0L ? 1 : 0) & ((this.ARB_draw_elements_base_vertex_glDrawElementsInstancedBaseVertex_pointer = GLContext.getFunctionAddress("glDrawElementsInstancedBaseVertex")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_draw_indirect_initNativeFunctionAddresses()
/*      */   {
/* 2179 */     return ((this.ARB_draw_indirect_glDrawArraysIndirect_pointer = GLContext.getFunctionAddress("glDrawArraysIndirect")) != 0L ? 1 : 0) & ((this.ARB_draw_indirect_glDrawElementsIndirect_pointer = GLContext.getFunctionAddress("glDrawElementsIndirect")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_draw_instanced_initNativeFunctionAddresses()
/*      */   {
/* 2185 */     return ((this.ARB_draw_instanced_glDrawArraysInstancedARB_pointer = GLContext.getFunctionAddress("glDrawArraysInstancedARB")) != 0L ? 1 : 0) & ((this.ARB_draw_instanced_glDrawElementsInstancedARB_pointer = GLContext.getFunctionAddress("glDrawElementsInstancedARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_framebuffer_object_initNativeFunctionAddresses()
/*      */   {
/* 2191 */     return ((this.ARB_framebuffer_object_glIsRenderbuffer_pointer = GLContext.getFunctionAddress("glIsRenderbuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glBindRenderbuffer_pointer = GLContext.getFunctionAddress("glBindRenderbuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glDeleteRenderbuffers_pointer = GLContext.getFunctionAddress("glDeleteRenderbuffers")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glGenRenderbuffers_pointer = GLContext.getFunctionAddress("glGenRenderbuffers")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glRenderbufferStorage_pointer = GLContext.getFunctionAddress("glRenderbufferStorage")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glRenderbufferStorageMultisample_pointer = GLContext.getFunctionAddress("glRenderbufferStorageMultisample")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glGetRenderbufferParameteriv_pointer = GLContext.getFunctionAddress("glGetRenderbufferParameteriv")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glIsFramebuffer_pointer = GLContext.getFunctionAddress("glIsFramebuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glBindFramebuffer_pointer = GLContext.getFunctionAddress("glBindFramebuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glDeleteFramebuffers_pointer = GLContext.getFunctionAddress("glDeleteFramebuffers")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glGenFramebuffers_pointer = GLContext.getFunctionAddress("glGenFramebuffers")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glCheckFramebufferStatus_pointer = GLContext.getFunctionAddress("glCheckFramebufferStatus")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glFramebufferTexture1D_pointer = GLContext.getFunctionAddress("glFramebufferTexture1D")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glFramebufferTexture2D_pointer = GLContext.getFunctionAddress("glFramebufferTexture2D")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glFramebufferTexture3D_pointer = GLContext.getFunctionAddress("glFramebufferTexture3D")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glFramebufferTextureLayer_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glFramebufferRenderbuffer_pointer = GLContext.getFunctionAddress("glFramebufferRenderbuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glGetFramebufferAttachmentParameteriv_pointer = GLContext.getFunctionAddress("glGetFramebufferAttachmentParameteriv")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glBlitFramebuffer_pointer = GLContext.getFunctionAddress("glBlitFramebuffer")) != 0L ? 1 : 0) & ((this.ARB_framebuffer_object_glGenerateMipmap_pointer = GLContext.getFunctionAddress("glGenerateMipmap")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_geometry_shader4_initNativeFunctionAddresses()
/*      */   {
/* 2215 */     return ((this.ARB_geometry_shader4_glProgramParameteriARB_pointer = GLContext.getFunctionAddress("glProgramParameteriARB")) != 0L ? 1 : 0) & ((this.ARB_geometry_shader4_glFramebufferTextureARB_pointer = GLContext.getFunctionAddress("glFramebufferTextureARB")) != 0L ? 1 : 0) & ((this.ARB_geometry_shader4_glFramebufferTextureLayerARB_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayerARB")) != 0L ? 1 : 0) & ((this.ARB_geometry_shader4_glFramebufferTextureFaceARB_pointer = GLContext.getFunctionAddress("glFramebufferTextureFaceARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_gpu_shader_fp64_initNativeFunctionAddresses(Set supported_extensions)
/*      */   {
/* 2223 */     return ((this.ARB_gpu_shader_fp64_glUniform1d_pointer = GLContext.getFunctionAddress("glUniform1d")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform2d_pointer = GLContext.getFunctionAddress("glUniform2d")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform3d_pointer = GLContext.getFunctionAddress("glUniform3d")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform4d_pointer = GLContext.getFunctionAddress("glUniform4d")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform1dv_pointer = GLContext.getFunctionAddress("glUniform1dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform2dv_pointer = GLContext.getFunctionAddress("glUniform2dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform3dv_pointer = GLContext.getFunctionAddress("glUniform3dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniform4dv_pointer = GLContext.getFunctionAddress("glUniform4dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix2x3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x3dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix2x4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x4dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix3x2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x2dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix3x4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x4dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix4x2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x2dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glUniformMatrix4x3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x3dv")) != 0L ? 1 : 0) & ((this.ARB_gpu_shader_fp64_glGetUniformdv_pointer = GLContext.getFunctionAddress("glGetUniformdv")) != 0L ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform1dEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1dEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform2dEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2dEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform3dEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3dEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform4dEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4dEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform1dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform2dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform3dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniform4dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix2dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix3dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix4dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix2x3dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2x3dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix2x4dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2x4dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix3x2dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3x2dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix3x4dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3x4dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix4x2dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4x2dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_direct_state_access")) || ((this.ARB_gpu_shader_fp64_glProgramUniformMatrix4x3dvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4x3dvEXT")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_imaging_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 2262 */     return ((forwardCompatible) || ((this.ARB_imaging_glColorTable_pointer = GLContext.getFunctionAddress("glColorTable")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glColorSubTable_pointer = GLContext.getFunctionAddress("glColorSubTable")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glColorTableParameteriv_pointer = GLContext.getFunctionAddress("glColorTableParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glColorTableParameterfv_pointer = GLContext.getFunctionAddress("glColorTableParameterfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glCopyColorSubTable_pointer = GLContext.getFunctionAddress("glCopyColorSubTable")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glCopyColorTable_pointer = GLContext.getFunctionAddress("glCopyColorTable")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetColorTable_pointer = GLContext.getFunctionAddress("glGetColorTable")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetColorTableParameteriv_pointer = GLContext.getFunctionAddress("glGetColorTableParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetColorTableParameterfv_pointer = GLContext.getFunctionAddress("glGetColorTableParameterfv")) != 0L) ? 1 : 0) & ((this.ARB_imaging_glBlendEquation_pointer = GLContext.getFunctionAddress("glBlendEquation")) != 0L ? 1 : 0) & ((this.ARB_imaging_glBlendColor_pointer = GLContext.getFunctionAddress("glBlendColor")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glHistogram_pointer = GLContext.getFunctionAddress("glHistogram")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glResetHistogram_pointer = GLContext.getFunctionAddress("glResetHistogram")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetHistogram_pointer = GLContext.getFunctionAddress("glGetHistogram")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetHistogramParameterfv_pointer = GLContext.getFunctionAddress("glGetHistogramParameterfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetHistogramParameteriv_pointer = GLContext.getFunctionAddress("glGetHistogramParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glMinmax_pointer = GLContext.getFunctionAddress("glMinmax")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glResetMinmax_pointer = GLContext.getFunctionAddress("glResetMinmax")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetMinmax_pointer = GLContext.getFunctionAddress("glGetMinmax")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetMinmaxParameterfv_pointer = GLContext.getFunctionAddress("glGetMinmaxParameterfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetMinmaxParameteriv_pointer = GLContext.getFunctionAddress("glGetMinmaxParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionFilter1D_pointer = GLContext.getFunctionAddress("glConvolutionFilter1D")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionFilter2D_pointer = GLContext.getFunctionAddress("glConvolutionFilter2D")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionParameterf_pointer = GLContext.getFunctionAddress("glConvolutionParameterf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionParameterfv_pointer = GLContext.getFunctionAddress("glConvolutionParameterfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionParameteri_pointer = GLContext.getFunctionAddress("glConvolutionParameteri")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glConvolutionParameteriv_pointer = GLContext.getFunctionAddress("glConvolutionParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glCopyConvolutionFilter1D_pointer = GLContext.getFunctionAddress("glCopyConvolutionFilter1D")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glCopyConvolutionFilter2D_pointer = GLContext.getFunctionAddress("glCopyConvolutionFilter2D")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetConvolutionFilter_pointer = GLContext.getFunctionAddress("glGetConvolutionFilter")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetConvolutionParameterfv_pointer = GLContext.getFunctionAddress("glGetConvolutionParameterfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetConvolutionParameteriv_pointer = GLContext.getFunctionAddress("glGetConvolutionParameteriv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glSeparableFilter2D_pointer = GLContext.getFunctionAddress("glSeparableFilter2D")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_imaging_glGetSeparableFilter_pointer = GLContext.getFunctionAddress("glGetSeparableFilter")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_instanced_arrays_initNativeFunctionAddresses()
/*      */   {
/* 2300 */     return (this.ARB_instanced_arrays_glVertexAttribDivisorARB_pointer = GLContext.getFunctionAddress("glVertexAttribDivisorARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_map_buffer_range_initNativeFunctionAddresses()
/*      */   {
/* 2305 */     return ((this.ARB_map_buffer_range_glMapBufferRange_pointer = GLContext.getFunctionAddress("glMapBufferRange")) != 0L ? 1 : 0) & ((this.ARB_map_buffer_range_glFlushMappedBufferRange_pointer = GLContext.getFunctionAddress("glFlushMappedBufferRange")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_matrix_palette_initNativeFunctionAddresses()
/*      */   {
/* 2311 */     return ((this.ARB_matrix_palette_glCurrentPaletteMatrixARB_pointer = GLContext.getFunctionAddress("glCurrentPaletteMatrixARB")) != 0L ? 1 : 0) & ((this.ARB_matrix_palette_glMatrixIndexPointerARB_pointer = GLContext.getFunctionAddress("glMatrixIndexPointerARB")) != 0L ? 1 : 0) & ((this.ARB_matrix_palette_glMatrixIndexubvARB_pointer = GLContext.getFunctionAddress("glMatrixIndexubvARB")) != 0L ? 1 : 0) & ((this.ARB_matrix_palette_glMatrixIndexusvARB_pointer = GLContext.getFunctionAddress("glMatrixIndexusvARB")) != 0L ? 1 : 0) & ((this.ARB_matrix_palette_glMatrixIndexuivARB_pointer = GLContext.getFunctionAddress("glMatrixIndexuivARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_multisample_initNativeFunctionAddresses()
/*      */   {
/* 2320 */     return (this.ARB_multisample_glSampleCoverageARB_pointer = GLContext.getFunctionAddress("glSampleCoverageARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_multitexture_initNativeFunctionAddresses()
/*      */   {
/* 2325 */     return ((this.ARB_multitexture_glClientActiveTextureARB_pointer = GLContext.getFunctionAddress("glClientActiveTextureARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glActiveTextureARB_pointer = GLContext.getFunctionAddress("glActiveTextureARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord1fARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord1fARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord1dARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord1dARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord1iARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord1iARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord1sARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord1sARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord2fARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord2fARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord2dARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord2dARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord2iARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord2iARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord2sARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord2sARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord3fARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord3fARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord3dARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord3dARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord3iARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord3iARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord3sARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord3sARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord4fARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord4fARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord4dARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord4dARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord4iARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord4iARB")) != 0L ? 1 : 0) & ((this.ARB_multitexture_glMultiTexCoord4sARB_pointer = GLContext.getFunctionAddress("glMultiTexCoord4sARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_occlusion_query_initNativeFunctionAddresses()
/*      */   {
/* 2347 */     return ((this.ARB_occlusion_query_glGenQueriesARB_pointer = GLContext.getFunctionAddress("glGenQueriesARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glDeleteQueriesARB_pointer = GLContext.getFunctionAddress("glDeleteQueriesARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glIsQueryARB_pointer = GLContext.getFunctionAddress("glIsQueryARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glBeginQueryARB_pointer = GLContext.getFunctionAddress("glBeginQueryARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glEndQueryARB_pointer = GLContext.getFunctionAddress("glEndQueryARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glGetQueryivARB_pointer = GLContext.getFunctionAddress("glGetQueryivARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glGetQueryObjectivARB_pointer = GLContext.getFunctionAddress("glGetQueryObjectivARB")) != 0L ? 1 : 0) & ((this.ARB_occlusion_query_glGetQueryObjectuivARB_pointer = GLContext.getFunctionAddress("glGetQueryObjectuivARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_point_parameters_initNativeFunctionAddresses()
/*      */   {
/* 2359 */     return ((this.ARB_point_parameters_glPointParameterfARB_pointer = GLContext.getFunctionAddress("glPointParameterfARB")) != 0L ? 1 : 0) & ((this.ARB_point_parameters_glPointParameterfvARB_pointer = GLContext.getFunctionAddress("glPointParameterfvARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_program_initNativeFunctionAddresses()
/*      */   {
/* 2365 */     return ((this.ARB_program_glProgramStringARB_pointer = GLContext.getFunctionAddress("glProgramStringARB")) != 0L ? 1 : 0) & ((this.ARB_program_glBindProgramARB_pointer = GLContext.getFunctionAddress("glBindProgramARB")) != 0L ? 1 : 0) & ((this.ARB_program_glDeleteProgramsARB_pointer = GLContext.getFunctionAddress("glDeleteProgramsARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGenProgramsARB_pointer = GLContext.getFunctionAddress("glGenProgramsARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramEnvParameter4fARB_pointer = GLContext.getFunctionAddress("glProgramEnvParameter4fARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramEnvParameter4dARB_pointer = GLContext.getFunctionAddress("glProgramEnvParameter4dARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramEnvParameter4fvARB_pointer = GLContext.getFunctionAddress("glProgramEnvParameter4fvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramEnvParameter4dvARB_pointer = GLContext.getFunctionAddress("glProgramEnvParameter4dvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramLocalParameter4fARB_pointer = GLContext.getFunctionAddress("glProgramLocalParameter4fARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramLocalParameter4dARB_pointer = GLContext.getFunctionAddress("glProgramLocalParameter4dARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramLocalParameter4fvARB_pointer = GLContext.getFunctionAddress("glProgramLocalParameter4fvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glProgramLocalParameter4dvARB_pointer = GLContext.getFunctionAddress("glProgramLocalParameter4dvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramEnvParameterfvARB_pointer = GLContext.getFunctionAddress("glGetProgramEnvParameterfvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramEnvParameterdvARB_pointer = GLContext.getFunctionAddress("glGetProgramEnvParameterdvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramLocalParameterfvARB_pointer = GLContext.getFunctionAddress("glGetProgramLocalParameterfvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramLocalParameterdvARB_pointer = GLContext.getFunctionAddress("glGetProgramLocalParameterdvARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramivARB_pointer = GLContext.getFunctionAddress("glGetProgramivARB")) != 0L ? 1 : 0) & ((this.ARB_program_glGetProgramStringARB_pointer = GLContext.getFunctionAddress("glGetProgramStringARB")) != 0L ? 1 : 0) & ((this.ARB_program_glIsProgramARB_pointer = GLContext.getFunctionAddress("glIsProgramARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_provoking_vertex_initNativeFunctionAddresses()
/*      */   {
/* 2388 */     return (this.ARB_provoking_vertex_glProvokingVertex_pointer = GLContext.getFunctionAddress("glProvokingVertex")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_sample_shading_initNativeFunctionAddresses()
/*      */   {
/* 2393 */     return (this.ARB_sample_shading_glMinSampleShadingARB_pointer = GLContext.getFunctionAddress("glMinSampleShadingARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_sampler_objects_initNativeFunctionAddresses()
/*      */   {
/* 2398 */     return ((this.ARB_sampler_objects_glGenSamplers_pointer = GLContext.getFunctionAddress("glGenSamplers")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glDeleteSamplers_pointer = GLContext.getFunctionAddress("glDeleteSamplers")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glIsSampler_pointer = GLContext.getFunctionAddress("glIsSampler")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glBindSampler_pointer = GLContext.getFunctionAddress("glBindSampler")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameteri_pointer = GLContext.getFunctionAddress("glSamplerParameteri")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameterf_pointer = GLContext.getFunctionAddress("glSamplerParameterf")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameteriv_pointer = GLContext.getFunctionAddress("glSamplerParameteriv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameterfv_pointer = GLContext.getFunctionAddress("glSamplerParameterfv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameterIiv_pointer = GLContext.getFunctionAddress("glSamplerParameterIiv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glSamplerParameterIuiv_pointer = GLContext.getFunctionAddress("glSamplerParameterIuiv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glGetSamplerParameteriv_pointer = GLContext.getFunctionAddress("glGetSamplerParameteriv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glGetSamplerParameterfv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterfv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glGetSamplerParameterIiv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterIiv")) != 0L ? 1 : 0) & ((this.ARB_sampler_objects_glGetSamplerParameterIuiv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterIuiv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_shader_objects_initNativeFunctionAddresses()
/*      */   {
/* 2416 */     return ((this.ARB_shader_objects_glDeleteObjectARB_pointer = GLContext.getFunctionAddress("glDeleteObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetHandleARB_pointer = GLContext.getFunctionAddress("glGetHandleARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glDetachObjectARB_pointer = GLContext.getFunctionAddress("glDetachObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glCreateShaderObjectARB_pointer = GLContext.getFunctionAddress("glCreateShaderObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glShaderSourceARB_pointer = GLContext.getFunctionAddress("glShaderSourceARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glCompileShaderARB_pointer = GLContext.getFunctionAddress("glCompileShaderARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glCreateProgramObjectARB_pointer = GLContext.getFunctionAddress("glCreateProgramObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glAttachObjectARB_pointer = GLContext.getFunctionAddress("glAttachObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glLinkProgramARB_pointer = GLContext.getFunctionAddress("glLinkProgramARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUseProgramObjectARB_pointer = GLContext.getFunctionAddress("glUseProgramObjectARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glValidateProgramARB_pointer = GLContext.getFunctionAddress("glValidateProgramARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform1fARB_pointer = GLContext.getFunctionAddress("glUniform1fARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform2fARB_pointer = GLContext.getFunctionAddress("glUniform2fARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform3fARB_pointer = GLContext.getFunctionAddress("glUniform3fARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform4fARB_pointer = GLContext.getFunctionAddress("glUniform4fARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform1iARB_pointer = GLContext.getFunctionAddress("glUniform1iARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform2iARB_pointer = GLContext.getFunctionAddress("glUniform2iARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform3iARB_pointer = GLContext.getFunctionAddress("glUniform3iARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform4iARB_pointer = GLContext.getFunctionAddress("glUniform4iARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform1fvARB_pointer = GLContext.getFunctionAddress("glUniform1fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform2fvARB_pointer = GLContext.getFunctionAddress("glUniform2fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform3fvARB_pointer = GLContext.getFunctionAddress("glUniform3fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform4fvARB_pointer = GLContext.getFunctionAddress("glUniform4fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform1ivARB_pointer = GLContext.getFunctionAddress("glUniform1ivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform2ivARB_pointer = GLContext.getFunctionAddress("glUniform2ivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform3ivARB_pointer = GLContext.getFunctionAddress("glUniform3ivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniform4ivARB_pointer = GLContext.getFunctionAddress("glUniform4ivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniformMatrix2fvARB_pointer = GLContext.getFunctionAddress("glUniformMatrix2fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniformMatrix3fvARB_pointer = GLContext.getFunctionAddress("glUniformMatrix3fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glUniformMatrix4fvARB_pointer = GLContext.getFunctionAddress("glUniformMatrix4fvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetObjectParameterfvARB_pointer = GLContext.getFunctionAddress("glGetObjectParameterfvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetObjectParameterivARB_pointer = GLContext.getFunctionAddress("glGetObjectParameterivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetInfoLogARB_pointer = GLContext.getFunctionAddress("glGetInfoLogARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetAttachedObjectsARB_pointer = GLContext.getFunctionAddress("glGetAttachedObjectsARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetUniformLocationARB_pointer = GLContext.getFunctionAddress("glGetUniformLocationARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetActiveUniformARB_pointer = GLContext.getFunctionAddress("glGetActiveUniformARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetUniformfvARB_pointer = GLContext.getFunctionAddress("glGetUniformfvARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetUniformivARB_pointer = GLContext.getFunctionAddress("glGetUniformivARB")) != 0L ? 1 : 0) & ((this.ARB_shader_objects_glGetShaderSourceARB_pointer = GLContext.getFunctionAddress("glGetShaderSourceARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_shader_subroutine_initNativeFunctionAddresses()
/*      */   {
/* 2459 */     return ((this.ARB_shader_subroutine_glGetSubroutineUniformLocation_pointer = GLContext.getFunctionAddress("glGetSubroutineUniformLocation")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetSubroutineIndex_pointer = GLContext.getFunctionAddress("glGetSubroutineIndex")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetActiveSubroutineUniformiv_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineUniformiv")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetActiveSubroutineUniformName_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineUniformName")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetActiveSubroutineName_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineName")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glUniformSubroutinesuiv_pointer = GLContext.getFunctionAddress("glUniformSubroutinesuiv")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetUniformSubroutineuiv_pointer = GLContext.getFunctionAddress("glGetUniformSubroutineuiv")) != 0L ? 1 : 0) & ((this.ARB_shader_subroutine_glGetProgramStageiv_pointer = GLContext.getFunctionAddress("glGetProgramStageiv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_shading_language_include_initNativeFunctionAddresses()
/*      */   {
/* 2471 */     return ((this.ARB_shading_language_include_glNamedStringARB_pointer = GLContext.getFunctionAddress("glNamedStringARB")) != 0L ? 1 : 0) & ((this.ARB_shading_language_include_glDeleteNamedStringARB_pointer = GLContext.getFunctionAddress("glDeleteNamedStringARB")) != 0L ? 1 : 0) & ((this.ARB_shading_language_include_glCompileShaderIncludeARB_pointer = GLContext.getFunctionAddress("glCompileShaderIncludeARB")) != 0L ? 1 : 0) & ((this.ARB_shading_language_include_glIsNamedStringARB_pointer = GLContext.getFunctionAddress("glIsNamedStringARB")) != 0L ? 1 : 0) & ((this.ARB_shading_language_include_glGetNamedStringARB_pointer = GLContext.getFunctionAddress("glGetNamedStringARB")) != 0L ? 1 : 0) & ((this.ARB_shading_language_include_glGetNamedStringivARB_pointer = GLContext.getFunctionAddress("glGetNamedStringivARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_sync_initNativeFunctionAddresses()
/*      */   {
/* 2481 */     return ((this.ARB_sync_glFenceSync_pointer = GLContext.getFunctionAddress("glFenceSync")) != 0L ? 1 : 0) & ((this.ARB_sync_glIsSync_pointer = GLContext.getFunctionAddress("glIsSync")) != 0L ? 1 : 0) & ((this.ARB_sync_glDeleteSync_pointer = GLContext.getFunctionAddress("glDeleteSync")) != 0L ? 1 : 0) & ((this.ARB_sync_glClientWaitSync_pointer = GLContext.getFunctionAddress("glClientWaitSync")) != 0L ? 1 : 0) & ((this.ARB_sync_glWaitSync_pointer = GLContext.getFunctionAddress("glWaitSync")) != 0L ? 1 : 0) & ((this.ARB_sync_glGetInteger64v_pointer = GLContext.getFunctionAddress("glGetInteger64v")) != 0L ? 1 : 0) & ((this.ARB_sync_glGetSynciv_pointer = GLContext.getFunctionAddress("glGetSynciv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_tessellation_shader_initNativeFunctionAddresses()
/*      */   {
/* 2492 */     return ((this.ARB_tessellation_shader_glPatchParameteri_pointer = GLContext.getFunctionAddress("glPatchParameteri")) != 0L ? 1 : 0) & ((this.ARB_tessellation_shader_glPatchParameterfv_pointer = GLContext.getFunctionAddress("glPatchParameterfv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_texture_buffer_object_initNativeFunctionAddresses()
/*      */   {
/* 2498 */     return (this.ARB_texture_buffer_object_glTexBufferARB_pointer = GLContext.getFunctionAddress("glTexBufferARB")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ARB_texture_compression_initNativeFunctionAddresses()
/*      */   {
/* 2503 */     return ((this.ARB_texture_compression_glCompressedTexImage1DARB_pointer = GLContext.getFunctionAddress("glCompressedTexImage1DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glCompressedTexImage2DARB_pointer = GLContext.getFunctionAddress("glCompressedTexImage2DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glCompressedTexImage3DARB_pointer = GLContext.getFunctionAddress("glCompressedTexImage3DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glCompressedTexSubImage1DARB_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage1DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glCompressedTexSubImage2DARB_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage2DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glCompressedTexSubImage3DARB_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage3DARB")) != 0L ? 1 : 0) & ((this.ARB_texture_compression_glGetCompressedTexImageARB_pointer = GLContext.getFunctionAddress("glGetCompressedTexImageARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_texture_multisample_initNativeFunctionAddresses()
/*      */   {
/* 2514 */     return ((this.ARB_texture_multisample_glTexImage2DMultisample_pointer = GLContext.getFunctionAddress("glTexImage2DMultisample")) != 0L ? 1 : 0) & ((this.ARB_texture_multisample_glTexImage3DMultisample_pointer = GLContext.getFunctionAddress("glTexImage3DMultisample")) != 0L ? 1 : 0) & ((this.ARB_texture_multisample_glGetMultisamplefv_pointer = GLContext.getFunctionAddress("glGetMultisamplefv")) != 0L ? 1 : 0) & ((this.ARB_texture_multisample_glSampleMaski_pointer = GLContext.getFunctionAddress("glSampleMaski")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_timer_query_initNativeFunctionAddresses()
/*      */   {
/* 2522 */     return ((this.ARB_timer_query_glQueryCounter_pointer = GLContext.getFunctionAddress("glQueryCounter")) != 0L ? 1 : 0) & ((this.ARB_timer_query_glGetQueryObjecti64v_pointer = GLContext.getFunctionAddress("glGetQueryObjecti64v")) != 0L ? 1 : 0) & ((this.ARB_timer_query_glGetQueryObjectui64v_pointer = GLContext.getFunctionAddress("glGetQueryObjectui64v")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_transform_feedback2_initNativeFunctionAddresses()
/*      */   {
/* 2529 */     return ((this.ARB_transform_feedback2_glBindTransformFeedback_pointer = GLContext.getFunctionAddress("glBindTransformFeedback")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glDeleteTransformFeedbacks_pointer = GLContext.getFunctionAddress("glDeleteTransformFeedbacks")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glGenTransformFeedbacks_pointer = GLContext.getFunctionAddress("glGenTransformFeedbacks")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glIsTransformFeedback_pointer = GLContext.getFunctionAddress("glIsTransformFeedback")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glPauseTransformFeedback_pointer = GLContext.getFunctionAddress("glPauseTransformFeedback")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glResumeTransformFeedback_pointer = GLContext.getFunctionAddress("glResumeTransformFeedback")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback2_glDrawTransformFeedback_pointer = GLContext.getFunctionAddress("glDrawTransformFeedback")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_transform_feedback3_initNativeFunctionAddresses()
/*      */   {
/* 2540 */     return ((this.ARB_transform_feedback3_glDrawTransformFeedbackStream_pointer = GLContext.getFunctionAddress("glDrawTransformFeedbackStream")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback3_glBeginQueryIndexed_pointer = GLContext.getFunctionAddress("glBeginQueryIndexed")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback3_glEndQueryIndexed_pointer = GLContext.getFunctionAddress("glEndQueryIndexed")) != 0L ? 1 : 0) & ((this.ARB_transform_feedback3_glGetQueryIndexediv_pointer = GLContext.getFunctionAddress("glGetQueryIndexediv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_transpose_matrix_initNativeFunctionAddresses()
/*      */   {
/* 2548 */     return ((this.ARB_transpose_matrix_glLoadTransposeMatrixfARB_pointer = GLContext.getFunctionAddress("glLoadTransposeMatrixfARB")) != 0L ? 1 : 0) & ((this.ARB_transpose_matrix_glMultTransposeMatrixfARB_pointer = GLContext.getFunctionAddress("glMultTransposeMatrixfARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_uniform_buffer_object_initNativeFunctionAddresses()
/*      */   {
/* 2554 */     return ((this.ARB_uniform_buffer_object_glGetUniformIndices_pointer = GLContext.getFunctionAddress("glGetUniformIndices")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetActiveUniformsiv_pointer = GLContext.getFunctionAddress("glGetActiveUniformsiv")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetActiveUniformName_pointer = GLContext.getFunctionAddress("glGetActiveUniformName")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetUniformBlockIndex_pointer = GLContext.getFunctionAddress("glGetUniformBlockIndex")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetActiveUniformBlockiv_pointer = GLContext.getFunctionAddress("glGetActiveUniformBlockiv")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetActiveUniformBlockName_pointer = GLContext.getFunctionAddress("glGetActiveUniformBlockName")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glBindBufferRange_pointer = GLContext.getFunctionAddress("glBindBufferRange")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glBindBufferBase_pointer = GLContext.getFunctionAddress("glBindBufferBase")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glGetIntegeri_v_pointer = GLContext.getFunctionAddress("glGetIntegeri_v")) != 0L ? 1 : 0) & ((this.ARB_uniform_buffer_object_glUniformBlockBinding_pointer = GLContext.getFunctionAddress("glUniformBlockBinding")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_vertex_array_object_initNativeFunctionAddresses()
/*      */   {
/* 2568 */     return ((this.ARB_vertex_array_object_glBindVertexArray_pointer = GLContext.getFunctionAddress("glBindVertexArray")) != 0L ? 1 : 0) & ((this.ARB_vertex_array_object_glDeleteVertexArrays_pointer = GLContext.getFunctionAddress("glDeleteVertexArrays")) != 0L ? 1 : 0) & ((this.ARB_vertex_array_object_glGenVertexArrays_pointer = GLContext.getFunctionAddress("glGenVertexArrays")) != 0L ? 1 : 0) & ((this.ARB_vertex_array_object_glIsVertexArray_pointer = GLContext.getFunctionAddress("glIsVertexArray")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_vertex_blend_initNativeFunctionAddresses()
/*      */   {
/* 2576 */     return ((this.ARB_vertex_blend_glWeightbvARB_pointer = GLContext.getFunctionAddress("glWeightbvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightsvARB_pointer = GLContext.getFunctionAddress("glWeightsvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightivARB_pointer = GLContext.getFunctionAddress("glWeightivARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightfvARB_pointer = GLContext.getFunctionAddress("glWeightfvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightdvARB_pointer = GLContext.getFunctionAddress("glWeightdvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightubvARB_pointer = GLContext.getFunctionAddress("glWeightubvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightusvARB_pointer = GLContext.getFunctionAddress("glWeightusvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightuivARB_pointer = GLContext.getFunctionAddress("glWeightuivARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glWeightPointerARB_pointer = GLContext.getFunctionAddress("glWeightPointerARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_blend_glVertexBlendARB_pointer = GLContext.getFunctionAddress("glVertexBlendARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_vertex_program_initNativeFunctionAddresses()
/*      */   {
/* 2590 */     return ((this.ARB_vertex_program_glVertexAttrib1sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib1fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib1dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib2sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib2fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib2dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib3sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib3fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib3dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib4sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib4fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib4dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttrib4NubARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4NubARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glVertexAttribPointerARB_pointer = GLContext.getFunctionAddress("glVertexAttribPointerARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glEnableVertexAttribArrayARB_pointer = GLContext.getFunctionAddress("glEnableVertexAttribArrayARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glDisableVertexAttribArrayARB_pointer = GLContext.getFunctionAddress("glDisableVertexAttribArrayARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glGetVertexAttribfvARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribfvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glGetVertexAttribdvARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribdvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glGetVertexAttribivARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribivARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_program_glGetVertexAttribPointervARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribPointervARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_vertex_shader_initNativeFunctionAddresses()
/*      */   {
/* 2614 */     return ((this.ARB_vertex_shader_glVertexAttrib1sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib1fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib1dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib1dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib2sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib2fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib2dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib2dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib3sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib3fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib3dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib3dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib4sARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4sARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib4fARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4fARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib4dARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4dARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttrib4NubARB_pointer = GLContext.getFunctionAddress("glVertexAttrib4NubARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glVertexAttribPointerARB_pointer = GLContext.getFunctionAddress("glVertexAttribPointerARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glEnableVertexAttribArrayARB_pointer = GLContext.getFunctionAddress("glEnableVertexAttribArrayARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glDisableVertexAttribArrayARB_pointer = GLContext.getFunctionAddress("glDisableVertexAttribArrayARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glBindAttribLocationARB_pointer = GLContext.getFunctionAddress("glBindAttribLocationARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetActiveAttribARB_pointer = GLContext.getFunctionAddress("glGetActiveAttribARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetAttribLocationARB_pointer = GLContext.getFunctionAddress("glGetAttribLocationARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetVertexAttribfvARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribfvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetVertexAttribdvARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribdvARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetVertexAttribivARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribivARB")) != 0L ? 1 : 0) & ((this.ARB_vertex_shader_glGetVertexAttribPointervARB_pointer = GLContext.getFunctionAddress("glGetVertexAttribPointervARB")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_vertex_type_2_10_10_10_rev_initNativeFunctionAddresses()
/*      */   {
/* 2641 */     return ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP2ui_pointer = GLContext.getFunctionAddress("glVertexP2ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP3ui_pointer = GLContext.getFunctionAddress("glVertexP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP4ui_pointer = GLContext.getFunctionAddress("glVertexP4ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP2uiv_pointer = GLContext.getFunctionAddress("glVertexP2uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP3uiv_pointer = GLContext.getFunctionAddress("glVertexP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexP4uiv_pointer = GLContext.getFunctionAddress("glVertexP4uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP1ui_pointer = GLContext.getFunctionAddress("glTexCoordP1ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP2ui_pointer = GLContext.getFunctionAddress("glTexCoordP2ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP3ui_pointer = GLContext.getFunctionAddress("glTexCoordP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP4ui_pointer = GLContext.getFunctionAddress("glTexCoordP4ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP1uiv_pointer = GLContext.getFunctionAddress("glTexCoordP1uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP2uiv_pointer = GLContext.getFunctionAddress("glTexCoordP2uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP3uiv_pointer = GLContext.getFunctionAddress("glTexCoordP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glTexCoordP4uiv_pointer = GLContext.getFunctionAddress("glTexCoordP4uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP1ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP1ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP2ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP2ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP3ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP4ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP4ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP1uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP1uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP2uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP2uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP3uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glMultiTexCoordP4uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP4uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glNormalP3ui_pointer = GLContext.getFunctionAddress("glNormalP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glNormalP3uiv_pointer = GLContext.getFunctionAddress("glNormalP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glColorP3ui_pointer = GLContext.getFunctionAddress("glColorP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glColorP4ui_pointer = GLContext.getFunctionAddress("glColorP4ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glColorP3uiv_pointer = GLContext.getFunctionAddress("glColorP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glColorP4uiv_pointer = GLContext.getFunctionAddress("glColorP4uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glSecondaryColorP3ui_pointer = GLContext.getFunctionAddress("glSecondaryColorP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glSecondaryColorP3uiv_pointer = GLContext.getFunctionAddress("glSecondaryColorP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP1ui_pointer = GLContext.getFunctionAddress("glVertexAttribP1ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP2ui_pointer = GLContext.getFunctionAddress("glVertexAttribP2ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP3ui_pointer = GLContext.getFunctionAddress("glVertexAttribP3ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP4ui_pointer = GLContext.getFunctionAddress("glVertexAttribP4ui")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP1uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP1uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP2uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP2uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP3uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP3uiv")) != 0L ? 1 : 0) & ((this.ARB_vertex_type_2_10_10_10_rev_glVertexAttribP4uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP4uiv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ARB_window_pos_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 2683 */     return ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos2fARB_pointer = GLContext.getFunctionAddress("glWindowPos2fARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos2dARB_pointer = GLContext.getFunctionAddress("glWindowPos2dARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos2iARB_pointer = GLContext.getFunctionAddress("glWindowPos2iARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos2sARB_pointer = GLContext.getFunctionAddress("glWindowPos2sARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos3fARB_pointer = GLContext.getFunctionAddress("glWindowPos3fARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos3dARB_pointer = GLContext.getFunctionAddress("glWindowPos3dARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos3iARB_pointer = GLContext.getFunctionAddress("glWindowPos3iARB")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.ARB_window_pos_glWindowPos3sARB_pointer = GLContext.getFunctionAddress("glWindowPos3sARB")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_draw_buffers_initNativeFunctionAddresses()
/*      */   {
/* 2695 */     return (this.ATI_draw_buffers_glDrawBuffersATI_pointer = GLContext.getFunctionAddress("glDrawBuffersATI")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean ATI_element_array_initNativeFunctionAddresses()
/*      */   {
/* 2700 */     return ((this.ATI_element_array_glElementPointerATI_pointer = GLContext.getFunctionAddress("glElementPointerATI")) != 0L ? 1 : 0) & ((this.ATI_element_array_glDrawElementArrayATI_pointer = GLContext.getFunctionAddress("glDrawElementArrayATI")) != 0L ? 1 : 0) & ((this.ATI_element_array_glDrawRangeElementArrayATI_pointer = GLContext.getFunctionAddress("glDrawRangeElementArrayATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_envmap_bumpmap_initNativeFunctionAddresses()
/*      */   {
/* 2707 */     return ((this.ATI_envmap_bumpmap_glTexBumpParameterfvATI_pointer = GLContext.getFunctionAddress("glTexBumpParameterfvATI")) != 0L ? 1 : 0) & ((this.ATI_envmap_bumpmap_glTexBumpParameterivATI_pointer = GLContext.getFunctionAddress("glTexBumpParameterivATI")) != 0L ? 1 : 0) & ((this.ATI_envmap_bumpmap_glGetTexBumpParameterfvATI_pointer = GLContext.getFunctionAddress("glGetTexBumpParameterfvATI")) != 0L ? 1 : 0) & ((this.ATI_envmap_bumpmap_glGetTexBumpParameterivATI_pointer = GLContext.getFunctionAddress("glGetTexBumpParameterivATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_fragment_shader_initNativeFunctionAddresses()
/*      */   {
/* 2715 */     return ((this.ATI_fragment_shader_glGenFragmentShadersATI_pointer = GLContext.getFunctionAddress("glGenFragmentShadersATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glBindFragmentShaderATI_pointer = GLContext.getFunctionAddress("glBindFragmentShaderATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glDeleteFragmentShaderATI_pointer = GLContext.getFunctionAddress("glDeleteFragmentShaderATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glBeginFragmentShaderATI_pointer = GLContext.getFunctionAddress("glBeginFragmentShaderATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glEndFragmentShaderATI_pointer = GLContext.getFunctionAddress("glEndFragmentShaderATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glPassTexCoordATI_pointer = GLContext.getFunctionAddress("glPassTexCoordATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glSampleMapATI_pointer = GLContext.getFunctionAddress("glSampleMapATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glColorFragmentOp1ATI_pointer = GLContext.getFunctionAddress("glColorFragmentOp1ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glColorFragmentOp2ATI_pointer = GLContext.getFunctionAddress("glColorFragmentOp2ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glColorFragmentOp3ATI_pointer = GLContext.getFunctionAddress("glColorFragmentOp3ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glAlphaFragmentOp1ATI_pointer = GLContext.getFunctionAddress("glAlphaFragmentOp1ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glAlphaFragmentOp2ATI_pointer = GLContext.getFunctionAddress("glAlphaFragmentOp2ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glAlphaFragmentOp3ATI_pointer = GLContext.getFunctionAddress("glAlphaFragmentOp3ATI")) != 0L ? 1 : 0) & ((this.ATI_fragment_shader_glSetFragmentShaderConstantATI_pointer = GLContext.getFunctionAddress("glSetFragmentShaderConstantATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_map_object_buffer_initNativeFunctionAddresses()
/*      */   {
/* 2733 */     return ((this.ATI_map_object_buffer_glMapObjectBufferATI_pointer = GLContext.getFunctionAddress("glMapObjectBufferATI")) != 0L ? 1 : 0) & ((this.ATI_map_object_buffer_glUnmapObjectBufferATI_pointer = GLContext.getFunctionAddress("glUnmapObjectBufferATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_pn_triangles_initNativeFunctionAddresses()
/*      */   {
/* 2739 */     return ((this.ATI_pn_triangles_glPNTrianglesfATI_pointer = GLContext.getFunctionAddress("glPNTrianglesfATI")) != 0L ? 1 : 0) & ((this.ATI_pn_triangles_glPNTrianglesiATI_pointer = GLContext.getFunctionAddress("glPNTrianglesiATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_separate_stencil_initNativeFunctionAddresses()
/*      */   {
/* 2745 */     return ((this.ATI_separate_stencil_glStencilOpSeparateATI_pointer = GLContext.getFunctionAddress("glStencilOpSeparateATI")) != 0L ? 1 : 0) & ((this.ATI_separate_stencil_glStencilFuncSeparateATI_pointer = GLContext.getFunctionAddress("glStencilFuncSeparateATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_vertex_array_object_initNativeFunctionAddresses()
/*      */   {
/* 2751 */     return ((this.ATI_vertex_array_object_glNewObjectBufferATI_pointer = GLContext.getFunctionAddress("glNewObjectBufferATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glIsObjectBufferATI_pointer = GLContext.getFunctionAddress("glIsObjectBufferATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glUpdateObjectBufferATI_pointer = GLContext.getFunctionAddress("glUpdateObjectBufferATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetObjectBufferfvATI_pointer = GLContext.getFunctionAddress("glGetObjectBufferfvATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetObjectBufferivATI_pointer = GLContext.getFunctionAddress("glGetObjectBufferivATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glFreeObjectBufferATI_pointer = GLContext.getFunctionAddress("glFreeObjectBufferATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glArrayObjectATI_pointer = GLContext.getFunctionAddress("glArrayObjectATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetArrayObjectfvATI_pointer = GLContext.getFunctionAddress("glGetArrayObjectfvATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetArrayObjectivATI_pointer = GLContext.getFunctionAddress("glGetArrayObjectivATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glVariantArrayObjectATI_pointer = GLContext.getFunctionAddress("glVariantArrayObjectATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetVariantArrayObjectfvATI_pointer = GLContext.getFunctionAddress("glGetVariantArrayObjectfvATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_array_object_glGetVariantArrayObjectivATI_pointer = GLContext.getFunctionAddress("glGetVariantArrayObjectivATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_vertex_attrib_array_object_initNativeFunctionAddresses()
/*      */   {
/* 2767 */     return ((this.ATI_vertex_attrib_array_object_glVertexAttribArrayObjectATI_pointer = GLContext.getFunctionAddress("glVertexAttribArrayObjectATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_attrib_array_object_glGetVertexAttribArrayObjectfvATI_pointer = GLContext.getFunctionAddress("glGetVertexAttribArrayObjectfvATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_attrib_array_object_glGetVertexAttribArrayObjectivATI_pointer = GLContext.getFunctionAddress("glGetVertexAttribArrayObjectivATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean ATI_vertex_streams_initNativeFunctionAddresses()
/*      */   {
/* 2774 */     return ((this.ATI_vertex_streams_glVertexStream2fATI_pointer = GLContext.getFunctionAddress("glVertexStream2fATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream2dATI_pointer = GLContext.getFunctionAddress("glVertexStream2dATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream2iATI_pointer = GLContext.getFunctionAddress("glVertexStream2iATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream2sATI_pointer = GLContext.getFunctionAddress("glVertexStream2sATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream3fATI_pointer = GLContext.getFunctionAddress("glVertexStream3fATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream3dATI_pointer = GLContext.getFunctionAddress("glVertexStream3dATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream3iATI_pointer = GLContext.getFunctionAddress("glVertexStream3iATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream3sATI_pointer = GLContext.getFunctionAddress("glVertexStream3sATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream4fATI_pointer = GLContext.getFunctionAddress("glVertexStream4fATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream4dATI_pointer = GLContext.getFunctionAddress("glVertexStream4dATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream4iATI_pointer = GLContext.getFunctionAddress("glVertexStream4iATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexStream4sATI_pointer = GLContext.getFunctionAddress("glVertexStream4sATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glNormalStream3bATI_pointer = GLContext.getFunctionAddress("glNormalStream3bATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glNormalStream3fATI_pointer = GLContext.getFunctionAddress("glNormalStream3fATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glNormalStream3dATI_pointer = GLContext.getFunctionAddress("glNormalStream3dATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glNormalStream3iATI_pointer = GLContext.getFunctionAddress("glNormalStream3iATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glNormalStream3sATI_pointer = GLContext.getFunctionAddress("glNormalStream3sATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glClientActiveVertexStreamATI_pointer = GLContext.getFunctionAddress("glClientActiveVertexStreamATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexBlendEnvfATI_pointer = GLContext.getFunctionAddress("glVertexBlendEnvfATI")) != 0L ? 1 : 0) & ((this.ATI_vertex_streams_glVertexBlendEnviATI_pointer = GLContext.getFunctionAddress("glVertexBlendEnviATI")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_bindable_uniform_initNativeFunctionAddresses()
/*      */   {
/* 2798 */     return ((this.EXT_bindable_uniform_glUniformBufferEXT_pointer = GLContext.getFunctionAddress("glUniformBufferEXT")) != 0L ? 1 : 0) & ((this.EXT_bindable_uniform_glGetUniformBufferSizeEXT_pointer = GLContext.getFunctionAddress("glGetUniformBufferSizeEXT")) != 0L ? 1 : 0) & ((this.EXT_bindable_uniform_glGetUniformOffsetEXT_pointer = GLContext.getFunctionAddress("glGetUniformOffsetEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_blend_color_initNativeFunctionAddresses()
/*      */   {
/* 2805 */     return (this.EXT_blend_color_glBlendColorEXT_pointer = GLContext.getFunctionAddress("glBlendColorEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_blend_equation_separate_initNativeFunctionAddresses()
/*      */   {
/* 2810 */     return (this.EXT_blend_equation_separate_glBlendEquationSeparateEXT_pointer = GLContext.getFunctionAddress("glBlendEquationSeparateEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_blend_func_separate_initNativeFunctionAddresses()
/*      */   {
/* 2815 */     return (this.EXT_blend_func_separate_glBlendFuncSeparateEXT_pointer = GLContext.getFunctionAddress("glBlendFuncSeparateEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_blend_minmax_initNativeFunctionAddresses()
/*      */   {
/* 2820 */     return (this.EXT_blend_minmax_glBlendEquationEXT_pointer = GLContext.getFunctionAddress("glBlendEquationEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_compiled_vertex_array_initNativeFunctionAddresses()
/*      */   {
/* 2825 */     return ((this.EXT_compiled_vertex_array_glLockArraysEXT_pointer = GLContext.getFunctionAddress("glLockArraysEXT")) != 0L ? 1 : 0) & ((this.EXT_compiled_vertex_array_glUnlockArraysEXT_pointer = GLContext.getFunctionAddress("glUnlockArraysEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_depth_bounds_test_initNativeFunctionAddresses()
/*      */   {
/* 2831 */     return (this.EXT_depth_bounds_test_glDepthBoundsEXT_pointer = GLContext.getFunctionAddress("glDepthBoundsEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_direct_state_access_initNativeFunctionAddresses(boolean forwardCompatible, Set supported_extensions)
/*      */   {
/* 2836 */     return ((forwardCompatible) || ((this.EXT_direct_state_access_glClientAttribDefaultEXT_pointer = GLContext.getFunctionAddress("glClientAttribDefaultEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glPushClientAttribDefaultEXT_pointer = GLContext.getFunctionAddress("glPushClientAttribDefaultEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixLoadfEXT_pointer = GLContext.getFunctionAddress("glMatrixLoadfEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixLoaddEXT_pointer = GLContext.getFunctionAddress("glMatrixLoaddEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixMultfEXT_pointer = GLContext.getFunctionAddress("glMatrixMultfEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixMultdEXT_pointer = GLContext.getFunctionAddress("glMatrixMultdEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixLoadIdentityEXT_pointer = GLContext.getFunctionAddress("glMatrixLoadIdentityEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixRotatefEXT_pointer = GLContext.getFunctionAddress("glMatrixRotatefEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixRotatedEXT_pointer = GLContext.getFunctionAddress("glMatrixRotatedEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixScalefEXT_pointer = GLContext.getFunctionAddress("glMatrixScalefEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixScaledEXT_pointer = GLContext.getFunctionAddress("glMatrixScaledEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixTranslatefEXT_pointer = GLContext.getFunctionAddress("glMatrixTranslatefEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixTranslatedEXT_pointer = GLContext.getFunctionAddress("glMatrixTranslatedEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixOrthoEXT_pointer = GLContext.getFunctionAddress("glMatrixOrthoEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixFrustumEXT_pointer = GLContext.getFunctionAddress("glMatrixFrustumEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixPushEXT_pointer = GLContext.getFunctionAddress("glMatrixPushEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.EXT_direct_state_access_glMatrixPopEXT_pointer = GLContext.getFunctionAddress("glMatrixPopEXT")) != 0L) ? 1 : 0) & ((this.EXT_direct_state_access_glTextureParameteriEXT_pointer = GLContext.getFunctionAddress("glTextureParameteriEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureParameterivEXT_pointer = GLContext.getFunctionAddress("glTextureParameterivEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureParameterfEXT_pointer = GLContext.getFunctionAddress("glTextureParameterfEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureParameterfvEXT_pointer = GLContext.getFunctionAddress("glTextureParameterfvEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureImage1DEXT_pointer = GLContext.getFunctionAddress("glTextureImage1DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureImage2DEXT_pointer = GLContext.getFunctionAddress("glTextureImage2DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureSubImage1DEXT_pointer = GLContext.getFunctionAddress("glTextureSubImage1DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glTextureSubImage2DEXT_pointer = GLContext.getFunctionAddress("glTextureSubImage2DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glCopyTextureImage1DEXT_pointer = GLContext.getFunctionAddress("glCopyTextureImage1DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glCopyTextureImage2DEXT_pointer = GLContext.getFunctionAddress("glCopyTextureImage2DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glCopyTextureSubImage1DEXT_pointer = GLContext.getFunctionAddress("glCopyTextureSubImage1DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glCopyTextureSubImage2DEXT_pointer = GLContext.getFunctionAddress("glCopyTextureSubImage2DEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glGetTextureImageEXT_pointer = GLContext.getFunctionAddress("glGetTextureImageEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glGetTextureParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetTextureParameterfvEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glGetTextureParameterivEXT_pointer = GLContext.getFunctionAddress("glGetTextureParameterivEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glGetTextureLevelParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetTextureLevelParameterfvEXT")) != 0L ? 1 : 0) & ((this.EXT_direct_state_access_glGetTextureLevelParameterivEXT_pointer = GLContext.getFunctionAddress("glGetTextureLevelParameterivEXT")) != 0L ? 1 : 0) & ((!supported_extensions.contains("OpenGL12")) || ((this.EXT_direct_state_access_glTextureImage3DEXT_pointer = GLContext.getFunctionAddress("glTextureImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL12")) || ((this.EXT_direct_state_access_glTextureSubImage3DEXT_pointer = GLContext.getFunctionAddress("glTextureSubImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL12")) || ((this.EXT_direct_state_access_glCopyTextureSubImage3DEXT_pointer = GLContext.getFunctionAddress("glCopyTextureSubImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glBindMultiTextureEXT_pointer = GLContext.getFunctionAddress("glBindMultiTextureEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexCoordPointerEXT_pointer = GLContext.getFunctionAddress("glMultiTexCoordPointerEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexEnvfEXT_pointer = GLContext.getFunctionAddress("glMultiTexEnvfEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexEnvfvEXT_pointer = GLContext.getFunctionAddress("glMultiTexEnvfvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexEnviEXT_pointer = GLContext.getFunctionAddress("glMultiTexEnviEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexEnvivEXT_pointer = GLContext.getFunctionAddress("glMultiTexEnvivEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGendEXT_pointer = GLContext.getFunctionAddress("glMultiTexGendEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGendvEXT_pointer = GLContext.getFunctionAddress("glMultiTexGendvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGenfEXT_pointer = GLContext.getFunctionAddress("glMultiTexGenfEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGenfvEXT_pointer = GLContext.getFunctionAddress("glMultiTexGenfvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGeniEXT_pointer = GLContext.getFunctionAddress("glMultiTexGeniEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexGenivEXT_pointer = GLContext.getFunctionAddress("glMultiTexGenivEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexEnvfvEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexEnvfvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexEnvivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexEnvivEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexGendvEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexGendvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexGenfvEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexGenfvEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexGenivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexGenivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexParameteriEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameteriEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexParameterivEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameterivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexParameterfEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameterfEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexParameterfvEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameterfvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexImage1DEXT_pointer = GLContext.getFunctionAddress("glMultiTexImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexImage2DEXT_pointer = GLContext.getFunctionAddress("glMultiTexImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexSubImage1DEXT_pointer = GLContext.getFunctionAddress("glMultiTexSubImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexSubImage2DEXT_pointer = GLContext.getFunctionAddress("glMultiTexSubImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCopyMultiTexImage1DEXT_pointer = GLContext.getFunctionAddress("glCopyMultiTexImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCopyMultiTexImage2DEXT_pointer = GLContext.getFunctionAddress("glCopyMultiTexImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCopyMultiTexSubImage1DEXT_pointer = GLContext.getFunctionAddress("glCopyMultiTexSubImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCopyMultiTexSubImage2DEXT_pointer = GLContext.getFunctionAddress("glCopyMultiTexSubImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexImageEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexImageEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexParameterfvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexParameterivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexParameterivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexLevelParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexLevelParameterfvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetMultiTexLevelParameterivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexLevelParameterivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexImage3DEXT_pointer = GLContext.getFunctionAddress("glMultiTexImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMultiTexSubImage3DEXT_pointer = GLContext.getFunctionAddress("glMultiTexSubImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCopyMultiTexSubImage3DEXT_pointer = GLContext.getFunctionAddress("glCopyMultiTexSubImage3DEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glEnableClientStateIndexedEXT_pointer = GLContext.getFunctionAddress("glEnableClientStateIndexedEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glDisableClientStateIndexedEXT_pointer = GLContext.getFunctionAddress("glDisableClientStateIndexedEXT")) != 0L) ? 1 : 0) & 0x1 & 0x1 & (((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glEnableClientStateiEXT_pointer = GLContext.getFunctionAddress("glEnableClientStateiEXT")) != 0L)) || (((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glDisableClientStateiEXT_pointer = GLContext.getFunctionAddress("glDisableClientStateiEXT")) != 0L)) || ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetFloatIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetFloatIndexedvEXT")) != 0L))) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetDoubleIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetDoubleIndexedvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetPointerIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetPointerIndexedvEXT")) != 0L) ? 1 : 0) & 0x1 & 0x1 & 0x1 & (((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetFloati_vEXT_pointer = GLContext.getFunctionAddress("glGetFloati_vEXT")) != 0L)) || (((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetDoublei_vEXT_pointer = GLContext.getFunctionAddress("glGetDoublei_vEXT")) != 0L)) || (((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetPointeri_vEXT_pointer = GLContext.getFunctionAddress("glGetPointeri_vEXT")) != 0L)) || ((!supported_extensions.contains("GL_EXT_draw_buffers2")) || ((this.EXT_direct_state_access_glEnableIndexedEXT_pointer = GLContext.getFunctionAddress("glEnableIndexedEXT")) != 0L)))) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_draw_buffers2")) || ((this.EXT_direct_state_access_glDisableIndexedEXT_pointer = GLContext.getFunctionAddress("glDisableIndexedEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_draw_buffers2")) || ((this.EXT_direct_state_access_glIsEnabledIndexedEXT_pointer = GLContext.getFunctionAddress("glIsEnabledIndexedEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_draw_buffers2")) || ((this.EXT_direct_state_access_glGetIntegerIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetIntegerIndexedvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_draw_buffers2")) || ((this.EXT_direct_state_access_glGetBooleanIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetBooleanIndexedvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glNamedProgramStringEXT_pointer = GLContext.getFunctionAddress("glNamedProgramStringEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameter4dEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameter4dEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameter4dvEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameter4dvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameter4fEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameter4fEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameter4fvEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameter4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glGetNamedProgramLocalParameterdvEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramLocalParameterdvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glGetNamedProgramLocalParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramLocalParameterfvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glGetNamedProgramivEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_ARB_vertex_program")) || ((this.EXT_direct_state_access_glGetNamedProgramStringEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramStringEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureImage3DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureImage2DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureImage1DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureSubImage3DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureSubImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureSubImage2DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureSubImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedTextureSubImage1DEXT_pointer = GLContext.getFunctionAddress("glCompressedTextureSubImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetCompressedTextureImageEXT_pointer = GLContext.getFunctionAddress("glGetCompressedTextureImageEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexImage3DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexImage2DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexImage1DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexSubImage3DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexSubImage3DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexSubImage2DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexSubImage2DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glCompressedMultiTexSubImage1DEXT_pointer = GLContext.getFunctionAddress("glCompressedMultiTexSubImage1DEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetCompressedMultiTexImageEXT_pointer = GLContext.getFunctionAddress("glGetCompressedMultiTexImageEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glGetCompressedTexImage_pointer = GLContext.getFunctionAddress("glGetCompressedTexImage")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMatrixLoadTransposefEXT_pointer = GLContext.getFunctionAddress("glMatrixLoadTransposefEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMatrixLoadTransposedEXT_pointer = GLContext.getFunctionAddress("glMatrixLoadTransposedEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMatrixMultTransposefEXT_pointer = GLContext.getFunctionAddress("glMatrixMultTransposefEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL13")) || ((this.EXT_direct_state_access_glMatrixMultTransposedEXT_pointer = GLContext.getFunctionAddress("glMatrixMultTransposedEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glNamedBufferDataEXT_pointer = GLContext.getFunctionAddress("glNamedBufferDataEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glNamedBufferSubDataEXT_pointer = GLContext.getFunctionAddress("glNamedBufferSubDataEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glMapNamedBufferEXT_pointer = GLContext.getFunctionAddress("glMapNamedBufferEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glUnmapNamedBufferEXT_pointer = GLContext.getFunctionAddress("glUnmapNamedBufferEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glGetNamedBufferParameterivEXT_pointer = GLContext.getFunctionAddress("glGetNamedBufferParameterivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glGetNamedBufferPointervEXT_pointer = GLContext.getFunctionAddress("glGetNamedBufferPointervEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL15")) || ((this.EXT_direct_state_access_glGetNamedBufferSubDataEXT_pointer = GLContext.getFunctionAddress("glGetNamedBufferSubDataEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform1fEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1fEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform2fEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2fEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform3fEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3fEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform4fEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4fEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform1iEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1iEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform2iEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2iEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform3iEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3iEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform4iEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4iEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform1fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform2fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform3fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform4fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform1ivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform2ivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform3ivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniform4ivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniformMatrix2fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniformMatrix3fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL20")) || ((this.EXT_direct_state_access_glProgramUniformMatrix4fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix2x3fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2x3fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix3x2fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3x2fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix2x4fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix2x4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix4x2fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4x2fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix3x4fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix3x4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL21")) || ((this.EXT_direct_state_access_glProgramUniformMatrix4x3fvEXT_pointer = GLContext.getFunctionAddress("glProgramUniformMatrix4x3fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_buffer_object")) || ((this.EXT_direct_state_access_glTextureBufferEXT_pointer = GLContext.getFunctionAddress("glTextureBufferEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_buffer_object")) || ((this.EXT_direct_state_access_glMultiTexBufferEXT_pointer = GLContext.getFunctionAddress("glMultiTexBufferEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glTextureParameterIivEXT_pointer = GLContext.getFunctionAddress("glTextureParameterIivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glTextureParameterIuivEXT_pointer = GLContext.getFunctionAddress("glTextureParameterIuivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glGetTextureParameterIivEXT_pointer = GLContext.getFunctionAddress("glGetTextureParameterIivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glGetTextureParameterIuivEXT_pointer = GLContext.getFunctionAddress("glGetTextureParameterIuivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glMultiTexParameterIivEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameterIivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glMultiTexParameterIuivEXT_pointer = GLContext.getFunctionAddress("glMultiTexParameterIuivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glGetMultiTexParameterIivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexParameterIivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_texture_integer")) || ((this.EXT_direct_state_access_glGetMultiTexParameterIuivEXT_pointer = GLContext.getFunctionAddress("glGetMultiTexParameterIuivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform1uiEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1uiEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform2uiEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2uiEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform3uiEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3uiEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform4uiEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4uiEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform1uivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform1uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform2uivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform2uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform3uivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform3uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_shader4")) || ((this.EXT_direct_state_access_glProgramUniform4uivEXT_pointer = GLContext.getFunctionAddress("glProgramUniform4uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_EXT_gpu_program_parameters")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameters4fvEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameters4fvEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameterI4iEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameterI4iEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameterI4ivEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameterI4ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParametersI4ivEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParametersI4ivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameterI4uiEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameterI4uiEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParameterI4uivEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParameterI4uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glNamedProgramLocalParametersI4uivEXT_pointer = GLContext.getFunctionAddress("glNamedProgramLocalParametersI4uivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glGetNamedProgramLocalParameterIivEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramLocalParameterIivEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_gpu_program4")) || ((this.EXT_direct_state_access_glGetNamedProgramLocalParameterIuivEXT_pointer = GLContext.getFunctionAddress("glGetNamedProgramLocalParameterIuivEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glNamedRenderbufferStorageEXT_pointer = GLContext.getFunctionAddress("glNamedRenderbufferStorageEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glGetNamedRenderbufferParameterivEXT_pointer = GLContext.getFunctionAddress("glGetNamedRenderbufferParameterivEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_multisample"))) || ((this.EXT_direct_state_access_glNamedRenderbufferStorageMultisampleEXT_pointer = GLContext.getFunctionAddress("glNamedRenderbufferStorageMultisampleEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_framebuffer_multisample_coverage")) || ((this.EXT_direct_state_access_glNamedRenderbufferStorageMultisampleCoverageEXT_pointer = GLContext.getFunctionAddress("glNamedRenderbufferStorageMultisampleCoverageEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glCheckNamedFramebufferStatusEXT_pointer = GLContext.getFunctionAddress("glCheckNamedFramebufferStatusEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glNamedFramebufferTexture1DEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTexture1DEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glNamedFramebufferTexture2DEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTexture2DEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glNamedFramebufferTexture3DEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTexture3DEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glNamedFramebufferRenderbufferEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferRenderbufferEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glGetNamedFramebufferAttachmentParameterivEXT_pointer = GLContext.getFunctionAddress("glGetNamedFramebufferAttachmentParameterivEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glGenerateTextureMipmapEXT_pointer = GLContext.getFunctionAddress("glGenerateTextureMipmapEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glGenerateMultiTexMipmapEXT_pointer = GLContext.getFunctionAddress("glGenerateMultiTexMipmapEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glFramebufferDrawBufferEXT_pointer = GLContext.getFunctionAddress("glFramebufferDrawBufferEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glFramebufferDrawBuffersEXT_pointer = GLContext.getFunctionAddress("glFramebufferDrawBuffersEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glFramebufferReadBufferEXT_pointer = GLContext.getFunctionAddress("glFramebufferReadBufferEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL30")) && (!supported_extensions.contains("GL_EXT_framebuffer_object"))) || ((this.EXT_direct_state_access_glGetFramebufferParameterivEXT_pointer = GLContext.getFunctionAddress("glGetFramebufferParameterivEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("OpenGL31")) && (!supported_extensions.contains("GL_ARB_copy_buffer"))) || ((this.EXT_direct_state_access_glNamedCopyBufferSubDataEXT_pointer = GLContext.getFunctionAddress("glNamedCopyBufferSubDataEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("GL_EXT_geometry_shader4")) && (!supported_extensions.contains("NV_geometry_program4"))) || ((this.EXT_direct_state_access_glNamedFramebufferTextureEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTextureEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("GL_EXT_geometry_shader4")) && (!supported_extensions.contains("NV_geometry_program4"))) || ((this.EXT_direct_state_access_glNamedFramebufferTextureLayerEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTextureLayerEXT")) != 0L) ? 1 : 0) & (((!supported_extensions.contains("GL_EXT_geometry_shader4")) && (!supported_extensions.contains("NV_geometry_program4"))) || ((this.EXT_direct_state_access_glNamedFramebufferTextureFaceEXT_pointer = GLContext.getFunctionAddress("glNamedFramebufferTextureFaceEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_explicit_multisample")) || ((this.EXT_direct_state_access_glTextureRenderbufferEXT_pointer = GLContext.getFunctionAddress("glTextureRenderbufferEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("GL_NV_explicit_multisample")) || ((this.EXT_direct_state_access_glMultiTexRenderbufferEXT_pointer = GLContext.getFunctionAddress("glMultiTexRenderbufferEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayVertexOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayVertexOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayColorOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayColorOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayEdgeFlagOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayEdgeFlagOffsetEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayIndexOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayIndexOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayNormalOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayNormalOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayTexCoordOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayTexCoordOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayMultiTexCoordOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayMultiTexCoordOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayFogCoordOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayFogCoordOffsetEXT")) != 0L) ? 1 : 0) & ((forwardCompatible) || (!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArraySecondaryColorOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArraySecondaryColorOffsetEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayVertexAttribOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayVertexAttribOffsetEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glVertexArrayVertexAttribIOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayVertexAttribIOffsetEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glEnableVertexArrayEXT_pointer = GLContext.getFunctionAddress("glEnableVertexArrayEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glDisableVertexArrayEXT_pointer = GLContext.getFunctionAddress("glDisableVertexArrayEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glEnableVertexArrayAttribEXT_pointer = GLContext.getFunctionAddress("glEnableVertexArrayAttribEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glDisableVertexArrayAttribEXT_pointer = GLContext.getFunctionAddress("glDisableVertexArrayAttribEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetVertexArrayIntegervEXT_pointer = GLContext.getFunctionAddress("glGetVertexArrayIntegervEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetVertexArrayPointervEXT_pointer = GLContext.getFunctionAddress("glGetVertexArrayPointervEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetVertexArrayIntegeri_vEXT_pointer = GLContext.getFunctionAddress("glGetVertexArrayIntegeri_vEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glGetVertexArrayPointeri_vEXT_pointer = GLContext.getFunctionAddress("glGetVertexArrayPointeri_vEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glMapNamedBufferRangeEXT_pointer = GLContext.getFunctionAddress("glMapNamedBufferRangeEXT")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("OpenGL30")) || ((this.EXT_direct_state_access_glFlushMappedNamedBufferRangeEXT_pointer = GLContext.getFunctionAddress("glFlushMappedNamedBufferRangeEXT")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_draw_buffers2_initNativeFunctionAddresses()
/*      */   {
/* 3059 */     return ((this.EXT_draw_buffers2_glColorMaskIndexedEXT_pointer = GLContext.getFunctionAddress("glColorMaskIndexedEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_buffers2_glGetBooleanIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetBooleanIndexedvEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_buffers2_glGetIntegerIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetIntegerIndexedvEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_buffers2_glEnableIndexedEXT_pointer = GLContext.getFunctionAddress("glEnableIndexedEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_buffers2_glDisableIndexedEXT_pointer = GLContext.getFunctionAddress("glDisableIndexedEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_buffers2_glIsEnabledIndexedEXT_pointer = GLContext.getFunctionAddress("glIsEnabledIndexedEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_draw_instanced_initNativeFunctionAddresses()
/*      */   {
/* 3069 */     return ((this.EXT_draw_instanced_glDrawArraysInstancedEXT_pointer = GLContext.getFunctionAddress("glDrawArraysInstancedEXT")) != 0L ? 1 : 0) & ((this.EXT_draw_instanced_glDrawElementsInstancedEXT_pointer = GLContext.getFunctionAddress("glDrawElementsInstancedEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_draw_range_elements_initNativeFunctionAddresses()
/*      */   {
/* 3075 */     return (this.EXT_draw_range_elements_glDrawRangeElementsEXT_pointer = GLContext.getFunctionAddress("glDrawRangeElementsEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_fog_coord_initNativeFunctionAddresses()
/*      */   {
/* 3080 */     return ((this.EXT_fog_coord_glFogCoordfEXT_pointer = GLContext.getFunctionAddress("glFogCoordfEXT")) != 0L ? 1 : 0) & ((this.EXT_fog_coord_glFogCoorddEXT_pointer = GLContext.getFunctionAddress("glFogCoorddEXT")) != 0L ? 1 : 0) & ((this.EXT_fog_coord_glFogCoordPointerEXT_pointer = GLContext.getFunctionAddress("glFogCoordPointerEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_framebuffer_blit_initNativeFunctionAddresses()
/*      */   {
/* 3087 */     return (this.EXT_framebuffer_blit_glBlitFramebufferEXT_pointer = GLContext.getFunctionAddress("glBlitFramebufferEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_framebuffer_multisample_initNativeFunctionAddresses()
/*      */   {
/* 3092 */     return (this.EXT_framebuffer_multisample_glRenderbufferStorageMultisampleEXT_pointer = GLContext.getFunctionAddress("glRenderbufferStorageMultisampleEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_framebuffer_object_initNativeFunctionAddresses()
/*      */   {
/* 3097 */     return ((this.EXT_framebuffer_object_glIsRenderbufferEXT_pointer = GLContext.getFunctionAddress("glIsRenderbufferEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glBindRenderbufferEXT_pointer = GLContext.getFunctionAddress("glBindRenderbufferEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glDeleteRenderbuffersEXT_pointer = GLContext.getFunctionAddress("glDeleteRenderbuffersEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glGenRenderbuffersEXT_pointer = GLContext.getFunctionAddress("glGenRenderbuffersEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glRenderbufferStorageEXT_pointer = GLContext.getFunctionAddress("glRenderbufferStorageEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glGetRenderbufferParameterivEXT_pointer = GLContext.getFunctionAddress("glGetRenderbufferParameterivEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glIsFramebufferEXT_pointer = GLContext.getFunctionAddress("glIsFramebufferEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glBindFramebufferEXT_pointer = GLContext.getFunctionAddress("glBindFramebufferEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glDeleteFramebuffersEXT_pointer = GLContext.getFunctionAddress("glDeleteFramebuffersEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glGenFramebuffersEXT_pointer = GLContext.getFunctionAddress("glGenFramebuffersEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glCheckFramebufferStatusEXT_pointer = GLContext.getFunctionAddress("glCheckFramebufferStatusEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glFramebufferTexture1DEXT_pointer = GLContext.getFunctionAddress("glFramebufferTexture1DEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glFramebufferTexture2DEXT_pointer = GLContext.getFunctionAddress("glFramebufferTexture2DEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glFramebufferTexture3DEXT_pointer = GLContext.getFunctionAddress("glFramebufferTexture3DEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glFramebufferRenderbufferEXT_pointer = GLContext.getFunctionAddress("glFramebufferRenderbufferEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glGetFramebufferAttachmentParameterivEXT_pointer = GLContext.getFunctionAddress("glGetFramebufferAttachmentParameterivEXT")) != 0L ? 1 : 0) & ((this.EXT_framebuffer_object_glGenerateMipmapEXT_pointer = GLContext.getFunctionAddress("glGenerateMipmapEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_geometry_shader4_initNativeFunctionAddresses()
/*      */   {
/* 3118 */     return ((this.EXT_geometry_shader4_glProgramParameteriEXT_pointer = GLContext.getFunctionAddress("glProgramParameteriEXT")) != 0L ? 1 : 0) & ((this.EXT_geometry_shader4_glFramebufferTextureEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureEXT")) != 0L ? 1 : 0) & ((this.EXT_geometry_shader4_glFramebufferTextureLayerEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayerEXT")) != 0L ? 1 : 0) & ((this.EXT_geometry_shader4_glFramebufferTextureFaceEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureFaceEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_gpu_program_parameters_initNativeFunctionAddresses()
/*      */   {
/* 3126 */     return ((this.EXT_gpu_program_parameters_glProgramEnvParameters4fvEXT_pointer = GLContext.getFunctionAddress("glProgramEnvParameters4fvEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_program_parameters_glProgramLocalParameters4fvEXT_pointer = GLContext.getFunctionAddress("glProgramLocalParameters4fvEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_gpu_shader4_initNativeFunctionAddresses()
/*      */   {
/* 3132 */     return ((this.EXT_gpu_shader4_glVertexAttribI1iEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI1iEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI2iEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI2iEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI3iEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI3iEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4iEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4iEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI1uiEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI1uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI2uiEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI2uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI3uiEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI3uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4uiEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI1ivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI1ivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI2ivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI2ivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI3ivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI3ivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4ivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4ivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI1uivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI1uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI2uivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI2uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI3uivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI3uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4uivEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4bvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4bvEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4svEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4svEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4ubvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4ubvEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribI4usvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribI4usvEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glVertexAttribIPointerEXT_pointer = GLContext.getFunctionAddress("glVertexAttribIPointerEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glGetVertexAttribIivEXT_pointer = GLContext.getFunctionAddress("glGetVertexAttribIivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glGetVertexAttribIuivEXT_pointer = GLContext.getFunctionAddress("glGetVertexAttribIuivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform1uiEXT_pointer = GLContext.getFunctionAddress("glUniform1uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform2uiEXT_pointer = GLContext.getFunctionAddress("glUniform2uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform3uiEXT_pointer = GLContext.getFunctionAddress("glUniform3uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform4uiEXT_pointer = GLContext.getFunctionAddress("glUniform4uiEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform1uivEXT_pointer = GLContext.getFunctionAddress("glUniform1uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform2uivEXT_pointer = GLContext.getFunctionAddress("glUniform2uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform3uivEXT_pointer = GLContext.getFunctionAddress("glUniform3uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glUniform4uivEXT_pointer = GLContext.getFunctionAddress("glUniform4uivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glGetUniformuivEXT_pointer = GLContext.getFunctionAddress("glGetUniformuivEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glBindFragDataLocationEXT_pointer = GLContext.getFunctionAddress("glBindFragDataLocationEXT")) != 0L ? 1 : 0) & ((this.EXT_gpu_shader4_glGetFragDataLocationEXT_pointer = GLContext.getFunctionAddress("glGetFragDataLocationEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_multi_draw_arrays_initNativeFunctionAddresses()
/*      */   {
/* 3170 */     return (this.EXT_multi_draw_arrays_glMultiDrawArraysEXT_pointer = GLContext.getFunctionAddress("glMultiDrawArraysEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_paletted_texture_initNativeFunctionAddresses()
/*      */   {
/* 3175 */     return ((this.EXT_paletted_texture_glColorTableEXT_pointer = GLContext.getFunctionAddress("glColorTableEXT")) != 0L ? 1 : 0) & ((this.EXT_paletted_texture_glColorSubTableEXT_pointer = GLContext.getFunctionAddress("glColorSubTableEXT")) != 0L ? 1 : 0) & ((this.EXT_paletted_texture_glGetColorTableEXT_pointer = GLContext.getFunctionAddress("glGetColorTableEXT")) != 0L ? 1 : 0) & ((this.EXT_paletted_texture_glGetColorTableParameterivEXT_pointer = GLContext.getFunctionAddress("glGetColorTableParameterivEXT")) != 0L ? 1 : 0) & ((this.EXT_paletted_texture_glGetColorTableParameterfvEXT_pointer = GLContext.getFunctionAddress("glGetColorTableParameterfvEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_point_parameters_initNativeFunctionAddresses()
/*      */   {
/* 3184 */     return ((this.EXT_point_parameters_glPointParameterfEXT_pointer = GLContext.getFunctionAddress("glPointParameterfEXT")) != 0L ? 1 : 0) & ((this.EXT_point_parameters_glPointParameterfvEXT_pointer = GLContext.getFunctionAddress("glPointParameterfvEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_provoking_vertex_initNativeFunctionAddresses()
/*      */   {
/* 3190 */     return (this.EXT_provoking_vertex_glProvokingVertexEXT_pointer = GLContext.getFunctionAddress("glProvokingVertexEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_secondary_color_initNativeFunctionAddresses()
/*      */   {
/* 3195 */     return ((this.EXT_secondary_color_glSecondaryColor3bEXT_pointer = GLContext.getFunctionAddress("glSecondaryColor3bEXT")) != 0L ? 1 : 0) & ((this.EXT_secondary_color_glSecondaryColor3fEXT_pointer = GLContext.getFunctionAddress("glSecondaryColor3fEXT")) != 0L ? 1 : 0) & ((this.EXT_secondary_color_glSecondaryColor3dEXT_pointer = GLContext.getFunctionAddress("glSecondaryColor3dEXT")) != 0L ? 1 : 0) & ((this.EXT_secondary_color_glSecondaryColor3ubEXT_pointer = GLContext.getFunctionAddress("glSecondaryColor3ubEXT")) != 0L ? 1 : 0) & ((this.EXT_secondary_color_glSecondaryColorPointerEXT_pointer = GLContext.getFunctionAddress("glSecondaryColorPointerEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_separate_shader_objects_initNativeFunctionAddresses()
/*      */   {
/* 3204 */     return ((this.EXT_separate_shader_objects_glUseShaderProgramEXT_pointer = GLContext.getFunctionAddress("glUseShaderProgramEXT")) != 0L ? 1 : 0) & ((this.EXT_separate_shader_objects_glActiveProgramEXT_pointer = GLContext.getFunctionAddress("glActiveProgramEXT")) != 0L ? 1 : 0) & ((this.EXT_separate_shader_objects_glCreateShaderProgramEXT_pointer = GLContext.getFunctionAddress("glCreateShaderProgramEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_shader_image_load_store_initNativeFunctionAddresses()
/*      */   {
/* 3211 */     return ((this.EXT_shader_image_load_store_glBindImageTextureEXT_pointer = GLContext.getFunctionAddress("glBindImageTextureEXT")) != 0L ? 1 : 0) & ((this.EXT_shader_image_load_store_glMemoryBarrierEXT_pointer = GLContext.getFunctionAddress("glMemoryBarrierEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_stencil_clear_tag_initNativeFunctionAddresses()
/*      */   {
/* 3217 */     return (this.EXT_stencil_clear_tag_glStencilClearTagEXT_pointer = GLContext.getFunctionAddress("glStencilClearTagEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_stencil_two_side_initNativeFunctionAddresses()
/*      */   {
/* 3222 */     return (this.EXT_stencil_two_side_glActiveStencilFaceEXT_pointer = GLContext.getFunctionAddress("glActiveStencilFaceEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_texture_array_initNativeFunctionAddresses()
/*      */   {
/* 3227 */     return (this.EXT_texture_array_glFramebufferTextureLayerEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayerEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_texture_buffer_object_initNativeFunctionAddresses()
/*      */   {
/* 3232 */     return (this.EXT_texture_buffer_object_glTexBufferEXT_pointer = GLContext.getFunctionAddress("glTexBufferEXT")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean EXT_texture_integer_initNativeFunctionAddresses()
/*      */   {
/* 3237 */     return ((this.EXT_texture_integer_glClearColorIiEXT_pointer = GLContext.getFunctionAddress("glClearColorIiEXT")) != 0L ? 1 : 0) & ((this.EXT_texture_integer_glClearColorIuiEXT_pointer = GLContext.getFunctionAddress("glClearColorIuiEXT")) != 0L ? 1 : 0) & ((this.EXT_texture_integer_glTexParameterIivEXT_pointer = GLContext.getFunctionAddress("glTexParameterIivEXT")) != 0L ? 1 : 0) & ((this.EXT_texture_integer_glTexParameterIuivEXT_pointer = GLContext.getFunctionAddress("glTexParameterIuivEXT")) != 0L ? 1 : 0) & ((this.EXT_texture_integer_glGetTexParameterIivEXT_pointer = GLContext.getFunctionAddress("glGetTexParameterIivEXT")) != 0L ? 1 : 0) & ((this.EXT_texture_integer_glGetTexParameterIuivEXT_pointer = GLContext.getFunctionAddress("glGetTexParameterIuivEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_timer_query_initNativeFunctionAddresses()
/*      */   {
/* 3247 */     return ((this.EXT_timer_query_glGetQueryObjecti64vEXT_pointer = GLContext.getFunctionAddress("glGetQueryObjecti64vEXT")) != 0L ? 1 : 0) & ((this.EXT_timer_query_glGetQueryObjectui64vEXT_pointer = GLContext.getFunctionAddress("glGetQueryObjectui64vEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_transform_feedback_initNativeFunctionAddresses()
/*      */   {
/* 3253 */     return ((this.EXT_transform_feedback_glBindBufferRangeEXT_pointer = GLContext.getFunctionAddress("glBindBufferRangeEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glBindBufferOffsetEXT_pointer = GLContext.getFunctionAddress("glBindBufferOffsetEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glBindBufferBaseEXT_pointer = GLContext.getFunctionAddress("glBindBufferBaseEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glBeginTransformFeedbackEXT_pointer = GLContext.getFunctionAddress("glBeginTransformFeedbackEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glEndTransformFeedbackEXT_pointer = GLContext.getFunctionAddress("glEndTransformFeedbackEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glTransformFeedbackVaryingsEXT_pointer = GLContext.getFunctionAddress("glTransformFeedbackVaryingsEXT")) != 0L ? 1 : 0) & ((this.EXT_transform_feedback_glGetTransformFeedbackVaryingEXT_pointer = GLContext.getFunctionAddress("glGetTransformFeedbackVaryingEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_vertex_attrib_64bit_initNativeFunctionAddresses(Set supported_extensions)
/*      */   {
/* 3264 */     return ((this.EXT_vertex_attrib_64bit_glVertexAttribL1dEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL1dEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL2dEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL2dEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL3dEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL3dEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL4dEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL4dEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL1dvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL1dvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL2dvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL2dvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL3dvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL3dvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribL4dvEXT_pointer = GLContext.getFunctionAddress("glVertexAttribL4dvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glVertexAttribLPointerEXT_pointer = GLContext.getFunctionAddress("glVertexAttribLPointerEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_attrib_64bit_glGetVertexAttribLdvEXT_pointer = GLContext.getFunctionAddress("glGetVertexAttribLdvEXT")) != 0L ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.EXT_vertex_attrib_64bit_glVertexArrayVertexAttribLOffsetEXT_pointer = GLContext.getFunctionAddress("glVertexArrayVertexAttribLOffsetEXT")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_vertex_shader_initNativeFunctionAddresses()
/*      */   {
/* 3279 */     return ((this.EXT_vertex_shader_glBeginVertexShaderEXT_pointer = GLContext.getFunctionAddress("glBeginVertexShaderEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glEndVertexShaderEXT_pointer = GLContext.getFunctionAddress("glEndVertexShaderEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindVertexShaderEXT_pointer = GLContext.getFunctionAddress("glBindVertexShaderEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGenVertexShadersEXT_pointer = GLContext.getFunctionAddress("glGenVertexShadersEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glDeleteVertexShaderEXT_pointer = GLContext.getFunctionAddress("glDeleteVertexShaderEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glShaderOp1EXT_pointer = GLContext.getFunctionAddress("glShaderOp1EXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glShaderOp2EXT_pointer = GLContext.getFunctionAddress("glShaderOp2EXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glShaderOp3EXT_pointer = GLContext.getFunctionAddress("glShaderOp3EXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glSwizzleEXT_pointer = GLContext.getFunctionAddress("glSwizzleEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glWriteMaskEXT_pointer = GLContext.getFunctionAddress("glWriteMaskEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glInsertComponentEXT_pointer = GLContext.getFunctionAddress("glInsertComponentEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glExtractComponentEXT_pointer = GLContext.getFunctionAddress("glExtractComponentEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGenSymbolsEXT_pointer = GLContext.getFunctionAddress("glGenSymbolsEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glSetInvariantEXT_pointer = GLContext.getFunctionAddress("glSetInvariantEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glSetLocalConstantEXT_pointer = GLContext.getFunctionAddress("glSetLocalConstantEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantbvEXT_pointer = GLContext.getFunctionAddress("glVariantbvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantsvEXT_pointer = GLContext.getFunctionAddress("glVariantsvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantivEXT_pointer = GLContext.getFunctionAddress("glVariantivEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantfvEXT_pointer = GLContext.getFunctionAddress("glVariantfvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantdvEXT_pointer = GLContext.getFunctionAddress("glVariantdvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantubvEXT_pointer = GLContext.getFunctionAddress("glVariantubvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantusvEXT_pointer = GLContext.getFunctionAddress("glVariantusvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantuivEXT_pointer = GLContext.getFunctionAddress("glVariantuivEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glVariantPointerEXT_pointer = GLContext.getFunctionAddress("glVariantPointerEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glEnableVariantClientStateEXT_pointer = GLContext.getFunctionAddress("glEnableVariantClientStateEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glDisableVariantClientStateEXT_pointer = GLContext.getFunctionAddress("glDisableVariantClientStateEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindLightParameterEXT_pointer = GLContext.getFunctionAddress("glBindLightParameterEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindMaterialParameterEXT_pointer = GLContext.getFunctionAddress("glBindMaterialParameterEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindTexGenParameterEXT_pointer = GLContext.getFunctionAddress("glBindTexGenParameterEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindTextureUnitParameterEXT_pointer = GLContext.getFunctionAddress("glBindTextureUnitParameterEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glBindParameterEXT_pointer = GLContext.getFunctionAddress("glBindParameterEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glIsVariantEnabledEXT_pointer = GLContext.getFunctionAddress("glIsVariantEnabledEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetVariantBooleanvEXT_pointer = GLContext.getFunctionAddress("glGetVariantBooleanvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetVariantIntegervEXT_pointer = GLContext.getFunctionAddress("glGetVariantIntegervEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetVariantFloatvEXT_pointer = GLContext.getFunctionAddress("glGetVariantFloatvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetVariantPointervEXT_pointer = GLContext.getFunctionAddress("glGetVariantPointervEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetInvariantBooleanvEXT_pointer = GLContext.getFunctionAddress("glGetInvariantBooleanvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetInvariantIntegervEXT_pointer = GLContext.getFunctionAddress("glGetInvariantIntegervEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetInvariantFloatvEXT_pointer = GLContext.getFunctionAddress("glGetInvariantFloatvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetLocalConstantBooleanvEXT_pointer = GLContext.getFunctionAddress("glGetLocalConstantBooleanvEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetLocalConstantIntegervEXT_pointer = GLContext.getFunctionAddress("glGetLocalConstantIntegervEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_shader_glGetLocalConstantFloatvEXT_pointer = GLContext.getFunctionAddress("glGetLocalConstantFloatvEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean EXT_vertex_weighting_initNativeFunctionAddresses()
/*      */   {
/* 3325 */     return ((this.EXT_vertex_weighting_glVertexWeightfEXT_pointer = GLContext.getFunctionAddress("glVertexWeightfEXT")) != 0L ? 1 : 0) & ((this.EXT_vertex_weighting_glVertexWeightPointerEXT_pointer = GLContext.getFunctionAddress("glVertexWeightPointerEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL11_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 3331 */     return ((forwardCompatible) || ((this.GL11_glAccum_pointer = GLContext.getFunctionAddress("glAccum")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glAlphaFunc_pointer = GLContext.getFunctionAddress("glAlphaFunc")) != 0L) ? 1 : 0) & ((this.GL11_glClearColor_pointer = GLContext.getFunctionAddress("glClearColor")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glClearAccum_pointer = GLContext.getFunctionAddress("glClearAccum")) != 0L) ? 1 : 0) & ((this.GL11_glClear_pointer = GLContext.getFunctionAddress("glClear")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glCallLists_pointer = GLContext.getFunctionAddress("glCallLists")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glCallList_pointer = GLContext.getFunctionAddress("glCallList")) != 0L) ? 1 : 0) & ((this.GL11_glBlendFunc_pointer = GLContext.getFunctionAddress("glBlendFunc")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glBitmap_pointer = GLContext.getFunctionAddress("glBitmap")) != 0L) ? 1 : 0) & ((this.GL11_glBindTexture_pointer = GLContext.getFunctionAddress("glBindTexture")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPrioritizeTextures_pointer = GLContext.getFunctionAddress("glPrioritizeTextures")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glAreTexturesResident_pointer = GLContext.getFunctionAddress("glAreTexturesResident")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glBegin_pointer = GLContext.getFunctionAddress("glBegin")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEnd_pointer = GLContext.getFunctionAddress("glEnd")) != 0L) ? 1 : 0) & ((this.GL11_glArrayElement_pointer = GLContext.getFunctionAddress("glArrayElement")) != 0L ? 1 : 0) & ((this.GL11_glClearDepth_pointer = GLContext.getFunctionAddress("glClearDepth")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glDeleteLists_pointer = GLContext.getFunctionAddress("glDeleteLists")) != 0L) ? 1 : 0) & ((this.GL11_glDeleteTextures_pointer = GLContext.getFunctionAddress("glDeleteTextures")) != 0L ? 1 : 0) & ((this.GL11_glCullFace_pointer = GLContext.getFunctionAddress("glCullFace")) != 0L ? 1 : 0) & ((this.GL11_glCopyTexSubImage2D_pointer = GLContext.getFunctionAddress("glCopyTexSubImage2D")) != 0L ? 1 : 0) & ((this.GL11_glCopyTexSubImage1D_pointer = GLContext.getFunctionAddress("glCopyTexSubImage1D")) != 0L ? 1 : 0) & ((this.GL11_glCopyTexImage2D_pointer = GLContext.getFunctionAddress("glCopyTexImage2D")) != 0L ? 1 : 0) & ((this.GL11_glCopyTexImage1D_pointer = GLContext.getFunctionAddress("glCopyTexImage1D")) != 0L ? 1 : 0) & ((this.GL11_glCopyPixels_pointer = GLContext.getFunctionAddress("glCopyPixels")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColorPointer_pointer = GLContext.getFunctionAddress("glColorPointer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColorMaterial_pointer = GLContext.getFunctionAddress("glColorMaterial")) != 0L) ? 1 : 0) & ((this.GL11_glColorMask_pointer = GLContext.getFunctionAddress("glColorMask")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor3b_pointer = GLContext.getFunctionAddress("glColor3b")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor3f_pointer = GLContext.getFunctionAddress("glColor3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor3d_pointer = GLContext.getFunctionAddress("glColor3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor3ub_pointer = GLContext.getFunctionAddress("glColor3ub")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor4b_pointer = GLContext.getFunctionAddress("glColor4b")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor4f_pointer = GLContext.getFunctionAddress("glColor4f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor4d_pointer = GLContext.getFunctionAddress("glColor4d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glColor4ub_pointer = GLContext.getFunctionAddress("glColor4ub")) != 0L) ? 1 : 0) & ((this.GL11_glClipPlane_pointer = GLContext.getFunctionAddress("glClipPlane")) != 0L ? 1 : 0) & ((this.GL11_glClearStencil_pointer = GLContext.getFunctionAddress("glClearStencil")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalPoint1_pointer = GLContext.getFunctionAddress("glEvalPoint1")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalPoint2_pointer = GLContext.getFunctionAddress("glEvalPoint2")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalMesh1_pointer = GLContext.getFunctionAddress("glEvalMesh1")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalMesh2_pointer = GLContext.getFunctionAddress("glEvalMesh2")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalCoord1f_pointer = GLContext.getFunctionAddress("glEvalCoord1f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalCoord1d_pointer = GLContext.getFunctionAddress("glEvalCoord1d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalCoord2f_pointer = GLContext.getFunctionAddress("glEvalCoord2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEvalCoord2d_pointer = GLContext.getFunctionAddress("glEvalCoord2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEnableClientState_pointer = GLContext.getFunctionAddress("glEnableClientState")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glDisableClientState_pointer = GLContext.getFunctionAddress("glDisableClientState")) != 0L) ? 1 : 0) & ((this.GL11_glEnable_pointer = GLContext.getFunctionAddress("glEnable")) != 0L ? 1 : 0) & ((this.GL11_glDisable_pointer = GLContext.getFunctionAddress("glDisable")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEdgeFlagPointer_pointer = GLContext.getFunctionAddress("glEdgeFlagPointer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEdgeFlag_pointer = GLContext.getFunctionAddress("glEdgeFlag")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glDrawPixels_pointer = GLContext.getFunctionAddress("glDrawPixels")) != 0L) ? 1 : 0) & ((this.GL11_glDrawElements_pointer = GLContext.getFunctionAddress("glDrawElements")) != 0L ? 1 : 0) & ((this.GL11_glDrawBuffer_pointer = GLContext.getFunctionAddress("glDrawBuffer")) != 0L ? 1 : 0) & ((this.GL11_glDrawArrays_pointer = GLContext.getFunctionAddress("glDrawArrays")) != 0L ? 1 : 0) & ((this.GL11_glDepthRange_pointer = GLContext.getFunctionAddress("glDepthRange")) != 0L ? 1 : 0) & ((this.GL11_glDepthMask_pointer = GLContext.getFunctionAddress("glDepthMask")) != 0L ? 1 : 0) & ((this.GL11_glDepthFunc_pointer = GLContext.getFunctionAddress("glDepthFunc")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFeedbackBuffer_pointer = GLContext.getFunctionAddress("glFeedbackBuffer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetPixelMapfv_pointer = GLContext.getFunctionAddress("glGetPixelMapfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetPixelMapuiv_pointer = GLContext.getFunctionAddress("glGetPixelMapuiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetPixelMapusv_pointer = GLContext.getFunctionAddress("glGetPixelMapusv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetMaterialfv_pointer = GLContext.getFunctionAddress("glGetMaterialfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetMaterialiv_pointer = GLContext.getFunctionAddress("glGetMaterialiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetMapfv_pointer = GLContext.getFunctionAddress("glGetMapfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetMapdv_pointer = GLContext.getFunctionAddress("glGetMapdv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetMapiv_pointer = GLContext.getFunctionAddress("glGetMapiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetLightfv_pointer = GLContext.getFunctionAddress("glGetLightfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetLightiv_pointer = GLContext.getFunctionAddress("glGetLightiv")) != 0L) ? 1 : 0) & ((this.GL11_glGetError_pointer = GLContext.getFunctionAddress("glGetError")) != 0L ? 1 : 0) & ((this.GL11_glGetClipPlane_pointer = GLContext.getFunctionAddress("glGetClipPlane")) != 0L ? 1 : 0) & ((this.GL11_glGetBooleanv_pointer = GLContext.getFunctionAddress("glGetBooleanv")) != 0L ? 1 : 0) & ((this.GL11_glGetDoublev_pointer = GLContext.getFunctionAddress("glGetDoublev")) != 0L ? 1 : 0) & ((this.GL11_glGetFloatv_pointer = GLContext.getFunctionAddress("glGetFloatv")) != 0L ? 1 : 0) & ((this.GL11_glGetIntegerv_pointer = GLContext.getFunctionAddress("glGetIntegerv")) != 0L ? 1 : 0) & ((this.GL11_glGenTextures_pointer = GLContext.getFunctionAddress("glGenTextures")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGenLists_pointer = GLContext.getFunctionAddress("glGenLists")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFrustum_pointer = GLContext.getFunctionAddress("glFrustum")) != 0L) ? 1 : 0) & ((this.GL11_glFrontFace_pointer = GLContext.getFunctionAddress("glFrontFace")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFogf_pointer = GLContext.getFunctionAddress("glFogf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFogi_pointer = GLContext.getFunctionAddress("glFogi")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFogfv_pointer = GLContext.getFunctionAddress("glFogfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glFogiv_pointer = GLContext.getFunctionAddress("glFogiv")) != 0L) ? 1 : 0) & ((this.GL11_glFlush_pointer = GLContext.getFunctionAddress("glFlush")) != 0L ? 1 : 0) & ((this.GL11_glFinish_pointer = GLContext.getFunctionAddress("glFinish")) != 0L ? 1 : 0) & ((this.GL11_glGetPointerv_pointer = GLContext.getFunctionAddress("glGetPointerv")) != 0L ? 1 : 0) & ((this.GL11_glIsEnabled_pointer = GLContext.getFunctionAddress("glIsEnabled")) != 0L ? 1 : 0) & ((this.GL11_glInterleavedArrays_pointer = GLContext.getFunctionAddress("glInterleavedArrays")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glInitNames_pointer = GLContext.getFunctionAddress("glInitNames")) != 0L) ? 1 : 0) & ((this.GL11_glHint_pointer = GLContext.getFunctionAddress("glHint")) != 0L ? 1 : 0) & ((this.GL11_glGetTexParameterfv_pointer = GLContext.getFunctionAddress("glGetTexParameterfv")) != 0L ? 1 : 0) & ((this.GL11_glGetTexParameteriv_pointer = GLContext.getFunctionAddress("glGetTexParameteriv")) != 0L ? 1 : 0) & ((this.GL11_glGetTexLevelParameterfv_pointer = GLContext.getFunctionAddress("glGetTexLevelParameterfv")) != 0L ? 1 : 0) & ((this.GL11_glGetTexLevelParameteriv_pointer = GLContext.getFunctionAddress("glGetTexLevelParameteriv")) != 0L ? 1 : 0) & ((this.GL11_glGetTexImage_pointer = GLContext.getFunctionAddress("glGetTexImage")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetTexGeniv_pointer = GLContext.getFunctionAddress("glGetTexGeniv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetTexGenfv_pointer = GLContext.getFunctionAddress("glGetTexGenfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetTexGendv_pointer = GLContext.getFunctionAddress("glGetTexGendv")) != 0L) ? 1 : 0) & ((this.GL11_glGetTexEnviv_pointer = GLContext.getFunctionAddress("glGetTexEnviv")) != 0L ? 1 : 0) & ((this.GL11_glGetTexEnvfv_pointer = GLContext.getFunctionAddress("glGetTexEnvfv")) != 0L ? 1 : 0) & ((this.GL11_glGetString_pointer = GLContext.getFunctionAddress("glGetString")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glGetPolygonStipple_pointer = GLContext.getFunctionAddress("glGetPolygonStipple")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glIsList_pointer = GLContext.getFunctionAddress("glIsList")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMaterialf_pointer = GLContext.getFunctionAddress("glMaterialf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMateriali_pointer = GLContext.getFunctionAddress("glMateriali")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMaterialfv_pointer = GLContext.getFunctionAddress("glMaterialfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMaterialiv_pointer = GLContext.getFunctionAddress("glMaterialiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMapGrid1f_pointer = GLContext.getFunctionAddress("glMapGrid1f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMapGrid1d_pointer = GLContext.getFunctionAddress("glMapGrid1d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMapGrid2f_pointer = GLContext.getFunctionAddress("glMapGrid2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMapGrid2d_pointer = GLContext.getFunctionAddress("glMapGrid2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMap2f_pointer = GLContext.getFunctionAddress("glMap2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMap2d_pointer = GLContext.getFunctionAddress("glMap2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMap1f_pointer = GLContext.getFunctionAddress("glMap1f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMap1d_pointer = GLContext.getFunctionAddress("glMap1d")) != 0L) ? 1 : 0) & ((this.GL11_glLogicOp_pointer = GLContext.getFunctionAddress("glLogicOp")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLoadName_pointer = GLContext.getFunctionAddress("glLoadName")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLoadMatrixf_pointer = GLContext.getFunctionAddress("glLoadMatrixf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLoadMatrixd_pointer = GLContext.getFunctionAddress("glLoadMatrixd")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLoadIdentity_pointer = GLContext.getFunctionAddress("glLoadIdentity")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glListBase_pointer = GLContext.getFunctionAddress("glListBase")) != 0L) ? 1 : 0) & ((this.GL11_glLineWidth_pointer = GLContext.getFunctionAddress("glLineWidth")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLineStipple_pointer = GLContext.getFunctionAddress("glLineStipple")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightModelf_pointer = GLContext.getFunctionAddress("glLightModelf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightModeli_pointer = GLContext.getFunctionAddress("glLightModeli")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightModelfv_pointer = GLContext.getFunctionAddress("glLightModelfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightModeliv_pointer = GLContext.getFunctionAddress("glLightModeliv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightf_pointer = GLContext.getFunctionAddress("glLightf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLighti_pointer = GLContext.getFunctionAddress("glLighti")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightfv_pointer = GLContext.getFunctionAddress("glLightfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glLightiv_pointer = GLContext.getFunctionAddress("glLightiv")) != 0L) ? 1 : 0) & ((this.GL11_glIsTexture_pointer = GLContext.getFunctionAddress("glIsTexture")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMatrixMode_pointer = GLContext.getFunctionAddress("glMatrixMode")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPolygonStipple_pointer = GLContext.getFunctionAddress("glPolygonStipple")) != 0L) ? 1 : 0) & ((this.GL11_glPolygonOffset_pointer = GLContext.getFunctionAddress("glPolygonOffset")) != 0L ? 1 : 0) & ((this.GL11_glPolygonMode_pointer = GLContext.getFunctionAddress("glPolygonMode")) != 0L ? 1 : 0) & ((this.GL11_glPointSize_pointer = GLContext.getFunctionAddress("glPointSize")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelZoom_pointer = GLContext.getFunctionAddress("glPixelZoom")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelTransferf_pointer = GLContext.getFunctionAddress("glPixelTransferf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelTransferi_pointer = GLContext.getFunctionAddress("glPixelTransferi")) != 0L) ? 1 : 0) & ((this.GL11_glPixelStoref_pointer = GLContext.getFunctionAddress("glPixelStoref")) != 0L ? 1 : 0) & ((this.GL11_glPixelStorei_pointer = GLContext.getFunctionAddress("glPixelStorei")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelMapfv_pointer = GLContext.getFunctionAddress("glPixelMapfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelMapuiv_pointer = GLContext.getFunctionAddress("glPixelMapuiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPixelMapusv_pointer = GLContext.getFunctionAddress("glPixelMapusv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPassThrough_pointer = GLContext.getFunctionAddress("glPassThrough")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glOrtho_pointer = GLContext.getFunctionAddress("glOrtho")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNormalPointer_pointer = GLContext.getFunctionAddress("glNormalPointer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNormal3b_pointer = GLContext.getFunctionAddress("glNormal3b")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNormal3f_pointer = GLContext.getFunctionAddress("glNormal3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNormal3d_pointer = GLContext.getFunctionAddress("glNormal3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNormal3i_pointer = GLContext.getFunctionAddress("glNormal3i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glNewList_pointer = GLContext.getFunctionAddress("glNewList")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glEndList_pointer = GLContext.getFunctionAddress("glEndList")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMultMatrixf_pointer = GLContext.getFunctionAddress("glMultMatrixf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glMultMatrixd_pointer = GLContext.getFunctionAddress("glMultMatrixd")) != 0L) ? 1 : 0) & ((this.GL11_glShadeModel_pointer = GLContext.getFunctionAddress("glShadeModel")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glSelectBuffer_pointer = GLContext.getFunctionAddress("glSelectBuffer")) != 0L) ? 1 : 0) & ((this.GL11_glScissor_pointer = GLContext.getFunctionAddress("glScissor")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glScalef_pointer = GLContext.getFunctionAddress("glScalef")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glScaled_pointer = GLContext.getFunctionAddress("glScaled")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRotatef_pointer = GLContext.getFunctionAddress("glRotatef")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRenderMode_pointer = GLContext.getFunctionAddress("glRenderMode")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRectf_pointer = GLContext.getFunctionAddress("glRectf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRectd_pointer = GLContext.getFunctionAddress("glRectd")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRecti_pointer = GLContext.getFunctionAddress("glRecti")) != 0L) ? 1 : 0) & ((this.GL11_glReadPixels_pointer = GLContext.getFunctionAddress("glReadPixels")) != 0L ? 1 : 0) & ((this.GL11_glReadBuffer_pointer = GLContext.getFunctionAddress("glReadBuffer")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos2f_pointer = GLContext.getFunctionAddress("glRasterPos2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos2d_pointer = GLContext.getFunctionAddress("glRasterPos2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos2i_pointer = GLContext.getFunctionAddress("glRasterPos2i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos3f_pointer = GLContext.getFunctionAddress("glRasterPos3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos3d_pointer = GLContext.getFunctionAddress("glRasterPos3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos3i_pointer = GLContext.getFunctionAddress("glRasterPos3i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos4f_pointer = GLContext.getFunctionAddress("glRasterPos4f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos4d_pointer = GLContext.getFunctionAddress("glRasterPos4d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glRasterPos4i_pointer = GLContext.getFunctionAddress("glRasterPos4i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPushName_pointer = GLContext.getFunctionAddress("glPushName")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPopName_pointer = GLContext.getFunctionAddress("glPopName")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPushMatrix_pointer = GLContext.getFunctionAddress("glPushMatrix")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPopMatrix_pointer = GLContext.getFunctionAddress("glPopMatrix")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPushClientAttrib_pointer = GLContext.getFunctionAddress("glPushClientAttrib")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPopClientAttrib_pointer = GLContext.getFunctionAddress("glPopClientAttrib")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPushAttrib_pointer = GLContext.getFunctionAddress("glPushAttrib")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glPopAttrib_pointer = GLContext.getFunctionAddress("glPopAttrib")) != 0L) ? 1 : 0) & ((this.GL11_glStencilFunc_pointer = GLContext.getFunctionAddress("glStencilFunc")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertexPointer_pointer = GLContext.getFunctionAddress("glVertexPointer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex2f_pointer = GLContext.getFunctionAddress("glVertex2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex2d_pointer = GLContext.getFunctionAddress("glVertex2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex2i_pointer = GLContext.getFunctionAddress("glVertex2i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex3f_pointer = GLContext.getFunctionAddress("glVertex3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex3d_pointer = GLContext.getFunctionAddress("glVertex3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex3i_pointer = GLContext.getFunctionAddress("glVertex3i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex4f_pointer = GLContext.getFunctionAddress("glVertex4f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex4d_pointer = GLContext.getFunctionAddress("glVertex4d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glVertex4i_pointer = GLContext.getFunctionAddress("glVertex4i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTranslatef_pointer = GLContext.getFunctionAddress("glTranslatef")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTranslated_pointer = GLContext.getFunctionAddress("glTranslated")) != 0L) ? 1 : 0) & ((this.GL11_glTexImage1D_pointer = GLContext.getFunctionAddress("glTexImage1D")) != 0L ? 1 : 0) & ((this.GL11_glTexImage2D_pointer = GLContext.getFunctionAddress("glTexImage2D")) != 0L ? 1 : 0) & ((this.GL11_glTexSubImage1D_pointer = GLContext.getFunctionAddress("glTexSubImage1D")) != 0L ? 1 : 0) & ((this.GL11_glTexSubImage2D_pointer = GLContext.getFunctionAddress("glTexSubImage2D")) != 0L ? 1 : 0) & ((this.GL11_glTexParameterf_pointer = GLContext.getFunctionAddress("glTexParameterf")) != 0L ? 1 : 0) & ((this.GL11_glTexParameteri_pointer = GLContext.getFunctionAddress("glTexParameteri")) != 0L ? 1 : 0) & ((this.GL11_glTexParameterfv_pointer = GLContext.getFunctionAddress("glTexParameterfv")) != 0L ? 1 : 0) & ((this.GL11_glTexParameteriv_pointer = GLContext.getFunctionAddress("glTexParameteriv")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGenf_pointer = GLContext.getFunctionAddress("glTexGenf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGend_pointer = GLContext.getFunctionAddress("glTexGend")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGenfv_pointer = GLContext.getFunctionAddress("glTexGenfv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGendv_pointer = GLContext.getFunctionAddress("glTexGendv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGeni_pointer = GLContext.getFunctionAddress("glTexGeni")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexGeniv_pointer = GLContext.getFunctionAddress("glTexGeniv")) != 0L) ? 1 : 0) & ((this.GL11_glTexEnvf_pointer = GLContext.getFunctionAddress("glTexEnvf")) != 0L ? 1 : 0) & ((this.GL11_glTexEnvi_pointer = GLContext.getFunctionAddress("glTexEnvi")) != 0L ? 1 : 0) & ((this.GL11_glTexEnvfv_pointer = GLContext.getFunctionAddress("glTexEnvfv")) != 0L ? 1 : 0) & ((this.GL11_glTexEnviv_pointer = GLContext.getFunctionAddress("glTexEnviv")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoordPointer_pointer = GLContext.getFunctionAddress("glTexCoordPointer")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord1f_pointer = GLContext.getFunctionAddress("glTexCoord1f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord1d_pointer = GLContext.getFunctionAddress("glTexCoord1d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord2f_pointer = GLContext.getFunctionAddress("glTexCoord2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord2d_pointer = GLContext.getFunctionAddress("glTexCoord2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord3f_pointer = GLContext.getFunctionAddress("glTexCoord3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord3d_pointer = GLContext.getFunctionAddress("glTexCoord3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord4f_pointer = GLContext.getFunctionAddress("glTexCoord4f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL11_glTexCoord4d_pointer = GLContext.getFunctionAddress("glTexCoord4d")) != 0L) ? 1 : 0) & ((this.GL11_glStencilOp_pointer = GLContext.getFunctionAddress("glStencilOp")) != 0L ? 1 : 0) & ((this.GL11_glStencilMask_pointer = GLContext.getFunctionAddress("glStencilMask")) != 0L ? 1 : 0) & ((this.GL11_glViewport_pointer = GLContext.getFunctionAddress("glViewport")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL12_initNativeFunctionAddresses()
/*      */   {
/* 3563 */     return ((this.GL12_glDrawRangeElements_pointer = GLContext.getFunctionAddress("glDrawRangeElements")) != 0L ? 1 : 0) & ((this.GL12_glTexImage3D_pointer = GLContext.getFunctionAddress("glTexImage3D")) != 0L ? 1 : 0) & ((this.GL12_glTexSubImage3D_pointer = GLContext.getFunctionAddress("glTexSubImage3D")) != 0L ? 1 : 0) & ((this.GL12_glCopyTexSubImage3D_pointer = GLContext.getFunctionAddress("glCopyTexSubImage3D")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL13_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 3571 */     return ((this.GL13_glActiveTexture_pointer = GLContext.getFunctionAddress("glActiveTexture")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glClientActiveTexture_pointer = GLContext.getFunctionAddress("glClientActiveTexture")) != 0L) ? 1 : 0) & ((this.GL13_glCompressedTexImage1D_pointer = GLContext.getFunctionAddress("glCompressedTexImage1D")) != 0L ? 1 : 0) & ((this.GL13_glCompressedTexImage2D_pointer = GLContext.getFunctionAddress("glCompressedTexImage2D")) != 0L ? 1 : 0) & ((this.GL13_glCompressedTexImage3D_pointer = GLContext.getFunctionAddress("glCompressedTexImage3D")) != 0L ? 1 : 0) & ((this.GL13_glCompressedTexSubImage1D_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage1D")) != 0L ? 1 : 0) & ((this.GL13_glCompressedTexSubImage2D_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage2D")) != 0L ? 1 : 0) & ((this.GL13_glCompressedTexSubImage3D_pointer = GLContext.getFunctionAddress("glCompressedTexSubImage3D")) != 0L ? 1 : 0) & ((this.GL13_glGetCompressedTexImage_pointer = GLContext.getFunctionAddress("glGetCompressedTexImage")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord1f_pointer = GLContext.getFunctionAddress("glMultiTexCoord1f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord1d_pointer = GLContext.getFunctionAddress("glMultiTexCoord1d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord2f_pointer = GLContext.getFunctionAddress("glMultiTexCoord2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord2d_pointer = GLContext.getFunctionAddress("glMultiTexCoord2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord3f_pointer = GLContext.getFunctionAddress("glMultiTexCoord3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord3d_pointer = GLContext.getFunctionAddress("glMultiTexCoord3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord4f_pointer = GLContext.getFunctionAddress("glMultiTexCoord4f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultiTexCoord4d_pointer = GLContext.getFunctionAddress("glMultiTexCoord4d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glLoadTransposeMatrixf_pointer = GLContext.getFunctionAddress("glLoadTransposeMatrixf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glLoadTransposeMatrixd_pointer = GLContext.getFunctionAddress("glLoadTransposeMatrixd")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultTransposeMatrixf_pointer = GLContext.getFunctionAddress("glMultTransposeMatrixf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL13_glMultTransposeMatrixd_pointer = GLContext.getFunctionAddress("glMultTransposeMatrixd")) != 0L) ? 1 : 0) & ((this.GL13_glSampleCoverage_pointer = GLContext.getFunctionAddress("glSampleCoverage")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL14_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 3597 */     return ((this.GL14_glBlendEquation_pointer = GLContext.getFunctionAddress("glBlendEquation")) != 0L ? 1 : 0) & ((this.GL14_glBlendColor_pointer = GLContext.getFunctionAddress("glBlendColor")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glFogCoordf_pointer = GLContext.getFunctionAddress("glFogCoordf")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glFogCoordd_pointer = GLContext.getFunctionAddress("glFogCoordd")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glFogCoordPointer_pointer = GLContext.getFunctionAddress("glFogCoordPointer")) != 0L) ? 1 : 0) & ((this.GL14_glMultiDrawArrays_pointer = GLContext.getFunctionAddress("glMultiDrawArrays")) != 0L ? 1 : 0) & ((this.GL14_glPointParameteri_pointer = GLContext.getFunctionAddress("glPointParameteri")) != 0L ? 1 : 0) & ((this.GL14_glPointParameterf_pointer = GLContext.getFunctionAddress("glPointParameterf")) != 0L ? 1 : 0) & ((this.GL14_glPointParameteriv_pointer = GLContext.getFunctionAddress("glPointParameteriv")) != 0L ? 1 : 0) & ((this.GL14_glPointParameterfv_pointer = GLContext.getFunctionAddress("glPointParameterfv")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glSecondaryColor3b_pointer = GLContext.getFunctionAddress("glSecondaryColor3b")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glSecondaryColor3f_pointer = GLContext.getFunctionAddress("glSecondaryColor3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glSecondaryColor3d_pointer = GLContext.getFunctionAddress("glSecondaryColor3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glSecondaryColor3ub_pointer = GLContext.getFunctionAddress("glSecondaryColor3ub")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glSecondaryColorPointer_pointer = GLContext.getFunctionAddress("glSecondaryColorPointer")) != 0L) ? 1 : 0) & ((this.GL14_glBlendFuncSeparate_pointer = GLContext.getFunctionAddress("glBlendFuncSeparate")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos2f_pointer = GLContext.getFunctionAddress("glWindowPos2f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos2d_pointer = GLContext.getFunctionAddress("glWindowPos2d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos2i_pointer = GLContext.getFunctionAddress("glWindowPos2i")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos3f_pointer = GLContext.getFunctionAddress("glWindowPos3f")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos3d_pointer = GLContext.getFunctionAddress("glWindowPos3d")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL14_glWindowPos3i_pointer = GLContext.getFunctionAddress("glWindowPos3i")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL15_initNativeFunctionAddresses()
/*      */   {
/* 3623 */     return ((this.GL15_glBindBuffer_pointer = GLContext.getFunctionAddress("glBindBuffer")) != 0L ? 1 : 0) & ((this.GL15_glDeleteBuffers_pointer = GLContext.getFunctionAddress("glDeleteBuffers")) != 0L ? 1 : 0) & ((this.GL15_glGenBuffers_pointer = GLContext.getFunctionAddress("glGenBuffers")) != 0L ? 1 : 0) & ((this.GL15_glIsBuffer_pointer = GLContext.getFunctionAddress("glIsBuffer")) != 0L ? 1 : 0) & ((this.GL15_glBufferData_pointer = GLContext.getFunctionAddress("glBufferData")) != 0L ? 1 : 0) & ((this.GL15_glBufferSubData_pointer = GLContext.getFunctionAddress("glBufferSubData")) != 0L ? 1 : 0) & ((this.GL15_glGetBufferSubData_pointer = GLContext.getFunctionAddress("glGetBufferSubData")) != 0L ? 1 : 0) & ((this.GL15_glMapBuffer_pointer = GLContext.getFunctionAddress("glMapBuffer")) != 0L ? 1 : 0) & ((this.GL15_glUnmapBuffer_pointer = GLContext.getFunctionAddress("glUnmapBuffer")) != 0L ? 1 : 0) & ((this.GL15_glGetBufferParameteriv_pointer = GLContext.getFunctionAddress("glGetBufferParameteriv")) != 0L ? 1 : 0) & ((this.GL15_glGetBufferPointerv_pointer = GLContext.getFunctionAddress("glGetBufferPointerv")) != 0L ? 1 : 0) & ((this.GL15_glGenQueries_pointer = GLContext.getFunctionAddress("glGenQueries")) != 0L ? 1 : 0) & ((this.GL15_glDeleteQueries_pointer = GLContext.getFunctionAddress("glDeleteQueries")) != 0L ? 1 : 0) & ((this.GL15_glIsQuery_pointer = GLContext.getFunctionAddress("glIsQuery")) != 0L ? 1 : 0) & ((this.GL15_glBeginQuery_pointer = GLContext.getFunctionAddress("glBeginQuery")) != 0L ? 1 : 0) & ((this.GL15_glEndQuery_pointer = GLContext.getFunctionAddress("glEndQuery")) != 0L ? 1 : 0) & ((this.GL15_glGetQueryiv_pointer = GLContext.getFunctionAddress("glGetQueryiv")) != 0L ? 1 : 0) & ((this.GL15_glGetQueryObjectiv_pointer = GLContext.getFunctionAddress("glGetQueryObjectiv")) != 0L ? 1 : 0) & ((this.GL15_glGetQueryObjectuiv_pointer = GLContext.getFunctionAddress("glGetQueryObjectuiv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL20_initNativeFunctionAddresses()
/*      */   {
/* 3646 */     return ((this.GL20_glShaderSource_pointer = GLContext.getFunctionAddress("glShaderSource")) != 0L ? 1 : 0) & ((this.GL20_glCreateShader_pointer = GLContext.getFunctionAddress("glCreateShader")) != 0L ? 1 : 0) & ((this.GL20_glIsShader_pointer = GLContext.getFunctionAddress("glIsShader")) != 0L ? 1 : 0) & ((this.GL20_glCompileShader_pointer = GLContext.getFunctionAddress("glCompileShader")) != 0L ? 1 : 0) & ((this.GL20_glDeleteShader_pointer = GLContext.getFunctionAddress("glDeleteShader")) != 0L ? 1 : 0) & ((this.GL20_glCreateProgram_pointer = GLContext.getFunctionAddress("glCreateProgram")) != 0L ? 1 : 0) & ((this.GL20_glIsProgram_pointer = GLContext.getFunctionAddress("glIsProgram")) != 0L ? 1 : 0) & ((this.GL20_glAttachShader_pointer = GLContext.getFunctionAddress("glAttachShader")) != 0L ? 1 : 0) & ((this.GL20_glDetachShader_pointer = GLContext.getFunctionAddress("glDetachShader")) != 0L ? 1 : 0) & ((this.GL20_glLinkProgram_pointer = GLContext.getFunctionAddress("glLinkProgram")) != 0L ? 1 : 0) & ((this.GL20_glUseProgram_pointer = GLContext.getFunctionAddress("glUseProgram")) != 0L ? 1 : 0) & ((this.GL20_glValidateProgram_pointer = GLContext.getFunctionAddress("glValidateProgram")) != 0L ? 1 : 0) & ((this.GL20_glDeleteProgram_pointer = GLContext.getFunctionAddress("glDeleteProgram")) != 0L ? 1 : 0) & ((this.GL20_glUniform1f_pointer = GLContext.getFunctionAddress("glUniform1f")) != 0L ? 1 : 0) & ((this.GL20_glUniform2f_pointer = GLContext.getFunctionAddress("glUniform2f")) != 0L ? 1 : 0) & ((this.GL20_glUniform3f_pointer = GLContext.getFunctionAddress("glUniform3f")) != 0L ? 1 : 0) & ((this.GL20_glUniform4f_pointer = GLContext.getFunctionAddress("glUniform4f")) != 0L ? 1 : 0) & ((this.GL20_glUniform1i_pointer = GLContext.getFunctionAddress("glUniform1i")) != 0L ? 1 : 0) & ((this.GL20_glUniform2i_pointer = GLContext.getFunctionAddress("glUniform2i")) != 0L ? 1 : 0) & ((this.GL20_glUniform3i_pointer = GLContext.getFunctionAddress("glUniform3i")) != 0L ? 1 : 0) & ((this.GL20_glUniform4i_pointer = GLContext.getFunctionAddress("glUniform4i")) != 0L ? 1 : 0) & ((this.GL20_glUniform1fv_pointer = GLContext.getFunctionAddress("glUniform1fv")) != 0L ? 1 : 0) & ((this.GL20_glUniform2fv_pointer = GLContext.getFunctionAddress("glUniform2fv")) != 0L ? 1 : 0) & ((this.GL20_glUniform3fv_pointer = GLContext.getFunctionAddress("glUniform3fv")) != 0L ? 1 : 0) & ((this.GL20_glUniform4fv_pointer = GLContext.getFunctionAddress("glUniform4fv")) != 0L ? 1 : 0) & ((this.GL20_glUniform1iv_pointer = GLContext.getFunctionAddress("glUniform1iv")) != 0L ? 1 : 0) & ((this.GL20_glUniform2iv_pointer = GLContext.getFunctionAddress("glUniform2iv")) != 0L ? 1 : 0) & ((this.GL20_glUniform3iv_pointer = GLContext.getFunctionAddress("glUniform3iv")) != 0L ? 1 : 0) & ((this.GL20_glUniform4iv_pointer = GLContext.getFunctionAddress("glUniform4iv")) != 0L ? 1 : 0) & ((this.GL20_glUniformMatrix2fv_pointer = GLContext.getFunctionAddress("glUniformMatrix2fv")) != 0L ? 1 : 0) & ((this.GL20_glUniformMatrix3fv_pointer = GLContext.getFunctionAddress("glUniformMatrix3fv")) != 0L ? 1 : 0) & ((this.GL20_glUniformMatrix4fv_pointer = GLContext.getFunctionAddress("glUniformMatrix4fv")) != 0L ? 1 : 0) & ((this.GL20_glGetShaderiv_pointer = GLContext.getFunctionAddress("glGetShaderiv")) != 0L ? 1 : 0) & ((this.GL20_glGetProgramiv_pointer = GLContext.getFunctionAddress("glGetProgramiv")) != 0L ? 1 : 0) & ((this.GL20_glGetShaderInfoLog_pointer = GLContext.getFunctionAddress("glGetShaderInfoLog")) != 0L ? 1 : 0) & ((this.GL20_glGetProgramInfoLog_pointer = GLContext.getFunctionAddress("glGetProgramInfoLog")) != 0L ? 1 : 0) & ((this.GL20_glGetAttachedShaders_pointer = GLContext.getFunctionAddress("glGetAttachedShaders")) != 0L ? 1 : 0) & ((this.GL20_glGetUniformLocation_pointer = GLContext.getFunctionAddress("glGetUniformLocation")) != 0L ? 1 : 0) & ((this.GL20_glGetActiveUniform_pointer = GLContext.getFunctionAddress("glGetActiveUniform")) != 0L ? 1 : 0) & ((this.GL20_glGetUniformfv_pointer = GLContext.getFunctionAddress("glGetUniformfv")) != 0L ? 1 : 0) & ((this.GL20_glGetUniformiv_pointer = GLContext.getFunctionAddress("glGetUniformiv")) != 0L ? 1 : 0) & ((this.GL20_glGetShaderSource_pointer = GLContext.getFunctionAddress("glGetShaderSource")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib1s_pointer = GLContext.getFunctionAddress("glVertexAttrib1s")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib1f_pointer = GLContext.getFunctionAddress("glVertexAttrib1f")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib1d_pointer = GLContext.getFunctionAddress("glVertexAttrib1d")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib2s_pointer = GLContext.getFunctionAddress("glVertexAttrib2s")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib2f_pointer = GLContext.getFunctionAddress("glVertexAttrib2f")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib2d_pointer = GLContext.getFunctionAddress("glVertexAttrib2d")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib3s_pointer = GLContext.getFunctionAddress("glVertexAttrib3s")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib3f_pointer = GLContext.getFunctionAddress("glVertexAttrib3f")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib3d_pointer = GLContext.getFunctionAddress("glVertexAttrib3d")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib4s_pointer = GLContext.getFunctionAddress("glVertexAttrib4s")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib4f_pointer = GLContext.getFunctionAddress("glVertexAttrib4f")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib4d_pointer = GLContext.getFunctionAddress("glVertexAttrib4d")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttrib4Nub_pointer = GLContext.getFunctionAddress("glVertexAttrib4Nub")) != 0L ? 1 : 0) & ((this.GL20_glVertexAttribPointer_pointer = GLContext.getFunctionAddress("glVertexAttribPointer")) != 0L ? 1 : 0) & ((this.GL20_glEnableVertexAttribArray_pointer = GLContext.getFunctionAddress("glEnableVertexAttribArray")) != 0L ? 1 : 0) & ((this.GL20_glDisableVertexAttribArray_pointer = GLContext.getFunctionAddress("glDisableVertexAttribArray")) != 0L ? 1 : 0) & ((this.GL20_glGetVertexAttribfv_pointer = GLContext.getFunctionAddress("glGetVertexAttribfv")) != 0L ? 1 : 0) & ((this.GL20_glGetVertexAttribdv_pointer = GLContext.getFunctionAddress("glGetVertexAttribdv")) != 0L ? 1 : 0) & ((this.GL20_glGetVertexAttribiv_pointer = GLContext.getFunctionAddress("glGetVertexAttribiv")) != 0L ? 1 : 0) & ((this.GL20_glGetVertexAttribPointerv_pointer = GLContext.getFunctionAddress("glGetVertexAttribPointerv")) != 0L ? 1 : 0) & ((this.GL20_glBindAttribLocation_pointer = GLContext.getFunctionAddress("glBindAttribLocation")) != 0L ? 1 : 0) & ((this.GL20_glGetActiveAttrib_pointer = GLContext.getFunctionAddress("glGetActiveAttrib")) != 0L ? 1 : 0) & ((this.GL20_glGetAttribLocation_pointer = GLContext.getFunctionAddress("glGetAttribLocation")) != 0L ? 1 : 0) & ((this.GL20_glDrawBuffers_pointer = GLContext.getFunctionAddress("glDrawBuffers")) != 0L ? 1 : 0) & ((this.GL20_glStencilOpSeparate_pointer = GLContext.getFunctionAddress("glStencilOpSeparate")) != 0L ? 1 : 0) & ((this.GL20_glStencilFuncSeparate_pointer = GLContext.getFunctionAddress("glStencilFuncSeparate")) != 0L ? 1 : 0) & ((this.GL20_glStencilMaskSeparate_pointer = GLContext.getFunctionAddress("glStencilMaskSeparate")) != 0L ? 1 : 0) & ((this.GL20_glBlendEquationSeparate_pointer = GLContext.getFunctionAddress("glBlendEquationSeparate")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL21_initNativeFunctionAddresses()
/*      */   {
/* 3720 */     return ((this.GL21_glUniformMatrix2x3fv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x3fv")) != 0L ? 1 : 0) & ((this.GL21_glUniformMatrix3x2fv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x2fv")) != 0L ? 1 : 0) & ((this.GL21_glUniformMatrix2x4fv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x4fv")) != 0L ? 1 : 0) & ((this.GL21_glUniformMatrix4x2fv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x2fv")) != 0L ? 1 : 0) & ((this.GL21_glUniformMatrix3x4fv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x4fv")) != 0L ? 1 : 0) & ((this.GL21_glUniformMatrix4x3fv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x3fv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL30_initNativeFunctionAddresses()
/*      */   {
/* 3730 */     return ((this.GL30_glGetStringi_pointer = GLContext.getFunctionAddress("glGetStringi")) != 0L ? 1 : 0) & ((this.GL30_glClearBufferfv_pointer = GLContext.getFunctionAddress("glClearBufferfv")) != 0L ? 1 : 0) & ((this.GL30_glClearBufferiv_pointer = GLContext.getFunctionAddress("glClearBufferiv")) != 0L ? 1 : 0) & ((this.GL30_glClearBufferuiv_pointer = GLContext.getFunctionAddress("glClearBufferuiv")) != 0L ? 1 : 0) & ((this.GL30_glClearBufferfi_pointer = GLContext.getFunctionAddress("glClearBufferfi")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI1i_pointer = GLContext.getFunctionAddress("glVertexAttribI1i")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI2i_pointer = GLContext.getFunctionAddress("glVertexAttribI2i")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI3i_pointer = GLContext.getFunctionAddress("glVertexAttribI3i")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4i_pointer = GLContext.getFunctionAddress("glVertexAttribI4i")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI1ui_pointer = GLContext.getFunctionAddress("glVertexAttribI1ui")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI2ui_pointer = GLContext.getFunctionAddress("glVertexAttribI2ui")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI3ui_pointer = GLContext.getFunctionAddress("glVertexAttribI3ui")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4ui_pointer = GLContext.getFunctionAddress("glVertexAttribI4ui")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI1iv_pointer = GLContext.getFunctionAddress("glVertexAttribI1iv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI2iv_pointer = GLContext.getFunctionAddress("glVertexAttribI2iv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI3iv_pointer = GLContext.getFunctionAddress("glVertexAttribI3iv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4iv_pointer = GLContext.getFunctionAddress("glVertexAttribI4iv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI1uiv_pointer = GLContext.getFunctionAddress("glVertexAttribI1uiv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI2uiv_pointer = GLContext.getFunctionAddress("glVertexAttribI2uiv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI3uiv_pointer = GLContext.getFunctionAddress("glVertexAttribI3uiv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4uiv_pointer = GLContext.getFunctionAddress("glVertexAttribI4uiv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4bv_pointer = GLContext.getFunctionAddress("glVertexAttribI4bv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4sv_pointer = GLContext.getFunctionAddress("glVertexAttribI4sv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4ubv_pointer = GLContext.getFunctionAddress("glVertexAttribI4ubv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribI4usv_pointer = GLContext.getFunctionAddress("glVertexAttribI4usv")) != 0L ? 1 : 0) & ((this.GL30_glVertexAttribIPointer_pointer = GLContext.getFunctionAddress("glVertexAttribIPointer")) != 0L ? 1 : 0) & ((this.GL30_glGetVertexAttribIiv_pointer = GLContext.getFunctionAddress("glGetVertexAttribIiv")) != 0L ? 1 : 0) & ((this.GL30_glGetVertexAttribIuiv_pointer = GLContext.getFunctionAddress("glGetVertexAttribIuiv")) != 0L ? 1 : 0) & ((this.GL30_glUniform1ui_pointer = GLContext.getFunctionAddress("glUniform1ui")) != 0L ? 1 : 0) & ((this.GL30_glUniform2ui_pointer = GLContext.getFunctionAddress("glUniform2ui")) != 0L ? 1 : 0) & ((this.GL30_glUniform3ui_pointer = GLContext.getFunctionAddress("glUniform3ui")) != 0L ? 1 : 0) & ((this.GL30_glUniform4ui_pointer = GLContext.getFunctionAddress("glUniform4ui")) != 0L ? 1 : 0) & ((this.GL30_glUniform1uiv_pointer = GLContext.getFunctionAddress("glUniform1uiv")) != 0L ? 1 : 0) & ((this.GL30_glUniform2uiv_pointer = GLContext.getFunctionAddress("glUniform2uiv")) != 0L ? 1 : 0) & ((this.GL30_glUniform3uiv_pointer = GLContext.getFunctionAddress("glUniform3uiv")) != 0L ? 1 : 0) & ((this.GL30_glUniform4uiv_pointer = GLContext.getFunctionAddress("glUniform4uiv")) != 0L ? 1 : 0) & ((this.GL30_glGetUniformuiv_pointer = GLContext.getFunctionAddress("glGetUniformuiv")) != 0L ? 1 : 0) & ((this.GL30_glBindFragDataLocation_pointer = GLContext.getFunctionAddress("glBindFragDataLocation")) != 0L ? 1 : 0) & ((this.GL30_glGetFragDataLocation_pointer = GLContext.getFunctionAddress("glGetFragDataLocation")) != 0L ? 1 : 0) & ((this.GL30_glBeginConditionalRender_pointer = GLContext.getFunctionAddress("glBeginConditionalRender")) != 0L ? 1 : 0) & ((this.GL30_glEndConditionalRender_pointer = GLContext.getFunctionAddress("glEndConditionalRender")) != 0L ? 1 : 0) & ((this.GL30_glMapBufferRange_pointer = GLContext.getFunctionAddress("glMapBufferRange")) != 0L ? 1 : 0) & ((this.GL30_glFlushMappedBufferRange_pointer = GLContext.getFunctionAddress("glFlushMappedBufferRange")) != 0L ? 1 : 0) & ((this.GL30_glClampColor_pointer = GLContext.getFunctionAddress("glClampColor")) != 0L ? 1 : 0) & ((this.GL30_glIsRenderbuffer_pointer = GLContext.getFunctionAddress("glIsRenderbuffer")) != 0L ? 1 : 0) & ((this.GL30_glBindRenderbuffer_pointer = GLContext.getFunctionAddress("glBindRenderbuffer")) != 0L ? 1 : 0) & ((this.GL30_glDeleteRenderbuffers_pointer = GLContext.getFunctionAddress("glDeleteRenderbuffers")) != 0L ? 1 : 0) & ((this.GL30_glGenRenderbuffers_pointer = GLContext.getFunctionAddress("glGenRenderbuffers")) != 0L ? 1 : 0) & ((this.GL30_glRenderbufferStorage_pointer = GLContext.getFunctionAddress("glRenderbufferStorage")) != 0L ? 1 : 0) & ((this.GL30_glGetRenderbufferParameteriv_pointer = GLContext.getFunctionAddress("glGetRenderbufferParameteriv")) != 0L ? 1 : 0) & ((this.GL30_glIsFramebuffer_pointer = GLContext.getFunctionAddress("glIsFramebuffer")) != 0L ? 1 : 0) & ((this.GL30_glBindFramebuffer_pointer = GLContext.getFunctionAddress("glBindFramebuffer")) != 0L ? 1 : 0) & ((this.GL30_glDeleteFramebuffers_pointer = GLContext.getFunctionAddress("glDeleteFramebuffers")) != 0L ? 1 : 0) & ((this.GL30_glGenFramebuffers_pointer = GLContext.getFunctionAddress("glGenFramebuffers")) != 0L ? 1 : 0) & ((this.GL30_glCheckFramebufferStatus_pointer = GLContext.getFunctionAddress("glCheckFramebufferStatus")) != 0L ? 1 : 0) & ((this.GL30_glFramebufferTexture1D_pointer = GLContext.getFunctionAddress("glFramebufferTexture1D")) != 0L ? 1 : 0) & ((this.GL30_glFramebufferTexture2D_pointer = GLContext.getFunctionAddress("glFramebufferTexture2D")) != 0L ? 1 : 0) & ((this.GL30_glFramebufferTexture3D_pointer = GLContext.getFunctionAddress("glFramebufferTexture3D")) != 0L ? 1 : 0) & ((this.GL30_glFramebufferRenderbuffer_pointer = GLContext.getFunctionAddress("glFramebufferRenderbuffer")) != 0L ? 1 : 0) & ((this.GL30_glGetFramebufferAttachmentParameteriv_pointer = GLContext.getFunctionAddress("glGetFramebufferAttachmentParameteriv")) != 0L ? 1 : 0) & ((this.GL30_glGenerateMipmap_pointer = GLContext.getFunctionAddress("glGenerateMipmap")) != 0L ? 1 : 0) & ((this.GL30_glRenderbufferStorageMultisample_pointer = GLContext.getFunctionAddress("glRenderbufferStorageMultisample")) != 0L ? 1 : 0) & ((this.GL30_glBlitFramebuffer_pointer = GLContext.getFunctionAddress("glBlitFramebuffer")) != 0L ? 1 : 0) & ((this.GL30_glTexParameterIiv_pointer = GLContext.getFunctionAddress("glTexParameterIiv")) != 0L ? 1 : 0) & ((this.GL30_glTexParameterIuiv_pointer = GLContext.getFunctionAddress("glTexParameterIuiv")) != 0L ? 1 : 0) & ((this.GL30_glGetTexParameterIiv_pointer = GLContext.getFunctionAddress("glGetTexParameterIiv")) != 0L ? 1 : 0) & ((this.GL30_glGetTexParameterIuiv_pointer = GLContext.getFunctionAddress("glGetTexParameterIuiv")) != 0L ? 1 : 0) & ((this.GL30_glFramebufferTextureLayer_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayer")) != 0L ? 1 : 0) & ((this.GL30_glColorMaski_pointer = GLContext.getFunctionAddress("glColorMaski")) != 0L ? 1 : 0) & ((this.GL30_glGetBooleani_v_pointer = GLContext.getFunctionAddress("glGetBooleani_v")) != 0L ? 1 : 0) & ((this.GL30_glGetIntegeri_v_pointer = GLContext.getFunctionAddress("glGetIntegeri_v")) != 0L ? 1 : 0) & ((this.GL30_glEnablei_pointer = GLContext.getFunctionAddress("glEnablei")) != 0L ? 1 : 0) & ((this.GL30_glDisablei_pointer = GLContext.getFunctionAddress("glDisablei")) != 0L ? 1 : 0) & ((this.GL30_glIsEnabledi_pointer = GLContext.getFunctionAddress("glIsEnabledi")) != 0L ? 1 : 0) & ((this.GL30_glBindBufferRange_pointer = GLContext.getFunctionAddress("glBindBufferRange")) != 0L ? 1 : 0) & ((this.GL30_glBindBufferBase_pointer = GLContext.getFunctionAddress("glBindBufferBase")) != 0L ? 1 : 0) & ((this.GL30_glBeginTransformFeedback_pointer = GLContext.getFunctionAddress("glBeginTransformFeedback")) != 0L ? 1 : 0) & ((this.GL30_glEndTransformFeedback_pointer = GLContext.getFunctionAddress("glEndTransformFeedback")) != 0L ? 1 : 0) & ((this.GL30_glTransformFeedbackVaryings_pointer = GLContext.getFunctionAddress("glTransformFeedbackVaryings")) != 0L ? 1 : 0) & ((this.GL30_glGetTransformFeedbackVarying_pointer = GLContext.getFunctionAddress("glGetTransformFeedbackVarying")) != 0L ? 1 : 0) & ((this.GL30_glBindVertexArray_pointer = GLContext.getFunctionAddress("glBindVertexArray")) != 0L ? 1 : 0) & ((this.GL30_glDeleteVertexArrays_pointer = GLContext.getFunctionAddress("glDeleteVertexArrays")) != 0L ? 1 : 0) & ((this.GL30_glGenVertexArrays_pointer = GLContext.getFunctionAddress("glGenVertexArrays")) != 0L ? 1 : 0) & ((this.GL30_glIsVertexArray_pointer = GLContext.getFunctionAddress("glIsVertexArray")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL31_initNativeFunctionAddresses()
/*      */   {
/* 3818 */     return ((this.GL31_glDrawArraysInstanced_pointer = GLContext.getFunctionAddress("glDrawArraysInstanced")) != 0L ? 1 : 0) & ((this.GL31_glDrawElementsInstanced_pointer = GLContext.getFunctionAddress("glDrawElementsInstanced")) != 0L ? 1 : 0) & ((this.GL31_glCopyBufferSubData_pointer = GLContext.getFunctionAddress("glCopyBufferSubData")) != 0L ? 1 : 0) & ((this.GL31_glPrimitiveRestartIndex_pointer = GLContext.getFunctionAddress("glPrimitiveRestartIndex")) != 0L ? 1 : 0) & ((this.GL31_glTexBuffer_pointer = GLContext.getFunctionAddress("glTexBuffer")) != 0L ? 1 : 0) & ((this.GL31_glGetUniformIndices_pointer = GLContext.getFunctionAddress("glGetUniformIndices")) != 0L ? 1 : 0) & ((this.GL31_glGetActiveUniformsiv_pointer = GLContext.getFunctionAddress("glGetActiveUniformsiv")) != 0L ? 1 : 0) & ((this.GL31_glGetActiveUniformName_pointer = GLContext.getFunctionAddress("glGetActiveUniformName")) != 0L ? 1 : 0) & ((this.GL31_glGetUniformBlockIndex_pointer = GLContext.getFunctionAddress("glGetUniformBlockIndex")) != 0L ? 1 : 0) & ((this.GL31_glGetActiveUniformBlockiv_pointer = GLContext.getFunctionAddress("glGetActiveUniformBlockiv")) != 0L ? 1 : 0) & ((this.GL31_glGetActiveUniformBlockName_pointer = GLContext.getFunctionAddress("glGetActiveUniformBlockName")) != 0L ? 1 : 0) & ((this.GL31_glUniformBlockBinding_pointer = GLContext.getFunctionAddress("glUniformBlockBinding")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL32_initNativeFunctionAddresses()
/*      */   {
/* 3834 */     return ((this.GL32_glDrawElementsBaseVertex_pointer = GLContext.getFunctionAddress("glDrawElementsBaseVertex")) != 0L ? 1 : 0) & ((this.GL32_glDrawRangeElementsBaseVertex_pointer = GLContext.getFunctionAddress("glDrawRangeElementsBaseVertex")) != 0L ? 1 : 0) & ((this.GL32_glDrawElementsInstancedBaseVertex_pointer = GLContext.getFunctionAddress("glDrawElementsInstancedBaseVertex")) != 0L ? 1 : 0) & ((this.GL32_glProvokingVertex_pointer = GLContext.getFunctionAddress("glProvokingVertex")) != 0L ? 1 : 0) & ((this.GL32_glTexImage2DMultisample_pointer = GLContext.getFunctionAddress("glTexImage2DMultisample")) != 0L ? 1 : 0) & ((this.GL32_glTexImage3DMultisample_pointer = GLContext.getFunctionAddress("glTexImage3DMultisample")) != 0L ? 1 : 0) & ((this.GL32_glGetMultisamplefv_pointer = GLContext.getFunctionAddress("glGetMultisamplefv")) != 0L ? 1 : 0) & ((this.GL32_glSampleMaski_pointer = GLContext.getFunctionAddress("glSampleMaski")) != 0L ? 1 : 0) & ((this.GL32_glFramebufferTexture_pointer = GLContext.getFunctionAddress("glFramebufferTexture")) != 0L ? 1 : 0) & ((this.GL32_glFramebufferTextureLayer_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayer")) != 0L ? 1 : 0) & ((this.GL32_glFenceSync_pointer = GLContext.getFunctionAddress("glFenceSync")) != 0L ? 1 : 0) & ((this.GL32_glIsSync_pointer = GLContext.getFunctionAddress("glIsSync")) != 0L ? 1 : 0) & ((this.GL32_glDeleteSync_pointer = GLContext.getFunctionAddress("glDeleteSync")) != 0L ? 1 : 0) & ((this.GL32_glClientWaitSync_pointer = GLContext.getFunctionAddress("glClientWaitSync")) != 0L ? 1 : 0) & ((this.GL32_glWaitSync_pointer = GLContext.getFunctionAddress("glWaitSync")) != 0L ? 1 : 0) & ((this.GL32_glGetInteger64v_pointer = GLContext.getFunctionAddress("glGetInteger64v")) != 0L ? 1 : 0) & 0x1 & (((this.GL32_glGetInteger64i_v_pointer = GLContext.getFunctionAddress("glGetInteger64i_v")) != 0L) || ((this.GL32_glGetSynciv_pointer = GLContext.getFunctionAddress("glGetSynciv")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL33_initNativeFunctionAddresses(boolean forwardCompatible)
/*      */   {
/* 3856 */     return ((this.GL33_glBindFragDataLocationIndexed_pointer = GLContext.getFunctionAddress("glBindFragDataLocationIndexed")) != 0L ? 1 : 0) & ((this.GL33_glGetFragDataIndex_pointer = GLContext.getFunctionAddress("glGetFragDataIndex")) != 0L ? 1 : 0) & ((this.GL33_glGenSamplers_pointer = GLContext.getFunctionAddress("glGenSamplers")) != 0L ? 1 : 0) & ((this.GL33_glDeleteSamplers_pointer = GLContext.getFunctionAddress("glDeleteSamplers")) != 0L ? 1 : 0) & ((this.GL33_glIsSampler_pointer = GLContext.getFunctionAddress("glIsSampler")) != 0L ? 1 : 0) & ((this.GL33_glBindSampler_pointer = GLContext.getFunctionAddress("glBindSampler")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameteri_pointer = GLContext.getFunctionAddress("glSamplerParameteri")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameterf_pointer = GLContext.getFunctionAddress("glSamplerParameterf")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameteriv_pointer = GLContext.getFunctionAddress("glSamplerParameteriv")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameterfv_pointer = GLContext.getFunctionAddress("glSamplerParameterfv")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameterIiv_pointer = GLContext.getFunctionAddress("glSamplerParameterIiv")) != 0L ? 1 : 0) & ((this.GL33_glSamplerParameterIuiv_pointer = GLContext.getFunctionAddress("glSamplerParameterIuiv")) != 0L ? 1 : 0) & ((this.GL33_glGetSamplerParameteriv_pointer = GLContext.getFunctionAddress("glGetSamplerParameteriv")) != 0L ? 1 : 0) & ((this.GL33_glGetSamplerParameterfv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterfv")) != 0L ? 1 : 0) & ((this.GL33_glGetSamplerParameterIiv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterIiv")) != 0L ? 1 : 0) & ((this.GL33_glGetSamplerParameterIuiv_pointer = GLContext.getFunctionAddress("glGetSamplerParameterIuiv")) != 0L ? 1 : 0) & ((this.GL33_glQueryCounter_pointer = GLContext.getFunctionAddress("glQueryCounter")) != 0L ? 1 : 0) & ((this.GL33_glGetQueryObjecti64v_pointer = GLContext.getFunctionAddress("glGetQueryObjecti64v")) != 0L ? 1 : 0) & ((this.GL33_glGetQueryObjectui64v_pointer = GLContext.getFunctionAddress("glGetQueryObjectui64v")) != 0L ? 1 : 0) & ((this.GL33_glVertexAttribDivisor_pointer = GLContext.getFunctionAddress("glVertexAttribDivisor")) != 0L ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP2ui_pointer = GLContext.getFunctionAddress("glVertexP2ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP3ui_pointer = GLContext.getFunctionAddress("glVertexP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP4ui_pointer = GLContext.getFunctionAddress("glVertexP4ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP2uiv_pointer = GLContext.getFunctionAddress("glVertexP2uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP3uiv_pointer = GLContext.getFunctionAddress("glVertexP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexP4uiv_pointer = GLContext.getFunctionAddress("glVertexP4uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP1ui_pointer = GLContext.getFunctionAddress("glTexCoordP1ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP2ui_pointer = GLContext.getFunctionAddress("glTexCoordP2ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP3ui_pointer = GLContext.getFunctionAddress("glTexCoordP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP4ui_pointer = GLContext.getFunctionAddress("glTexCoordP4ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP1uiv_pointer = GLContext.getFunctionAddress("glTexCoordP1uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP2uiv_pointer = GLContext.getFunctionAddress("glTexCoordP2uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP3uiv_pointer = GLContext.getFunctionAddress("glTexCoordP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glTexCoordP4uiv_pointer = GLContext.getFunctionAddress("glTexCoordP4uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP1ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP1ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP2ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP2ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP3ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP4ui_pointer = GLContext.getFunctionAddress("glMultiTexCoordP4ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP1uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP1uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP2uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP2uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP3uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glMultiTexCoordP4uiv_pointer = GLContext.getFunctionAddress("glMultiTexCoordP4uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glNormalP3ui_pointer = GLContext.getFunctionAddress("glNormalP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glNormalP3uiv_pointer = GLContext.getFunctionAddress("glNormalP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glColorP3ui_pointer = GLContext.getFunctionAddress("glColorP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glColorP4ui_pointer = GLContext.getFunctionAddress("glColorP4ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glColorP3uiv_pointer = GLContext.getFunctionAddress("glColorP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glColorP4uiv_pointer = GLContext.getFunctionAddress("glColorP4uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glSecondaryColorP3ui_pointer = GLContext.getFunctionAddress("glSecondaryColorP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glSecondaryColorP3uiv_pointer = GLContext.getFunctionAddress("glSecondaryColorP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP1ui_pointer = GLContext.getFunctionAddress("glVertexAttribP1ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP2ui_pointer = GLContext.getFunctionAddress("glVertexAttribP2ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP3ui_pointer = GLContext.getFunctionAddress("glVertexAttribP3ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP4ui_pointer = GLContext.getFunctionAddress("glVertexAttribP4ui")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP1uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP1uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP2uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP2uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP3uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP3uiv")) != 0L) ? 1 : 0) & ((forwardCompatible) || ((this.GL33_glVertexAttribP4uiv_pointer = GLContext.getFunctionAddress("glVertexAttribP4uiv")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GL40_initNativeFunctionAddresses()
/*      */   {
/* 3918 */     return 0x1 & 0x1 & 0x1 & 0x1 & (((this.GL40_glBlendEquationi_pointer = GLContext.getFunctionAddress("glBlendEquationi")) != 0L) || (((this.GL40_glBlendEquationSeparatei_pointer = GLContext.getFunctionAddress("glBlendEquationSeparatei")) != 0L) || (((this.GL40_glBlendFunci_pointer = GLContext.getFunctionAddress("glBlendFunci")) != 0L) || (((this.GL40_glBlendFuncSeparatei_pointer = GLContext.getFunctionAddress("glBlendFuncSeparatei")) != 0L) || ((this.GL40_glDrawArraysIndirect_pointer = GLContext.getFunctionAddress("glDrawArraysIndirect")) != 0L)))) ? 1 : 0) & ((this.GL40_glDrawElementsIndirect_pointer = GLContext.getFunctionAddress("glDrawElementsIndirect")) != 0L ? 1 : 0) & ((this.GL40_glUniform1d_pointer = GLContext.getFunctionAddress("glUniform1d")) != 0L ? 1 : 0) & ((this.GL40_glUniform2d_pointer = GLContext.getFunctionAddress("glUniform2d")) != 0L ? 1 : 0) & ((this.GL40_glUniform3d_pointer = GLContext.getFunctionAddress("glUniform3d")) != 0L ? 1 : 0) & ((this.GL40_glUniform4d_pointer = GLContext.getFunctionAddress("glUniform4d")) != 0L ? 1 : 0) & ((this.GL40_glUniform1dv_pointer = GLContext.getFunctionAddress("glUniform1dv")) != 0L ? 1 : 0) & ((this.GL40_glUniform2dv_pointer = GLContext.getFunctionAddress("glUniform2dv")) != 0L ? 1 : 0) & ((this.GL40_glUniform3dv_pointer = GLContext.getFunctionAddress("glUniform3dv")) != 0L ? 1 : 0) & ((this.GL40_glUniform4dv_pointer = GLContext.getFunctionAddress("glUniform4dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix2x3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x3dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix2x4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix2x4dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix3x2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x2dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix3x4dv_pointer = GLContext.getFunctionAddress("glUniformMatrix3x4dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix4x2dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x2dv")) != 0L ? 1 : 0) & ((this.GL40_glUniformMatrix4x3dv_pointer = GLContext.getFunctionAddress("glUniformMatrix4x3dv")) != 0L ? 1 : 0) & ((this.GL40_glGetUniformdv_pointer = GLContext.getFunctionAddress("glGetUniformdv")) != 0L ? 1 : 0) & 0x1 & (((this.GL40_glMinSampleShading_pointer = GLContext.getFunctionAddress("glMinSampleShading")) != 0L) || ((this.GL40_glGetSubroutineUniformLocation_pointer = GLContext.getFunctionAddress("glGetSubroutineUniformLocation")) != 0L) ? 1 : 0) & ((this.GL40_glGetSubroutineIndex_pointer = GLContext.getFunctionAddress("glGetSubroutineIndex")) != 0L ? 1 : 0) & ((this.GL40_glGetActiveSubroutineUniformiv_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineUniformiv")) != 0L ? 1 : 0) & ((this.GL40_glGetActiveSubroutineUniformName_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineUniformName")) != 0L ? 1 : 0) & ((this.GL40_glGetActiveSubroutineName_pointer = GLContext.getFunctionAddress("glGetActiveSubroutineName")) != 0L ? 1 : 0) & ((this.GL40_glUniformSubroutinesuiv_pointer = GLContext.getFunctionAddress("glUniformSubroutinesuiv")) != 0L ? 1 : 0) & ((this.GL40_glGetUniformSubroutineuiv_pointer = GLContext.getFunctionAddress("glGetUniformSubroutineuiv")) != 0L ? 1 : 0) & ((this.GL40_glGetProgramStageiv_pointer = GLContext.getFunctionAddress("glGetProgramStageiv")) != 0L ? 1 : 0) & ((this.GL40_glPatchParameteri_pointer = GLContext.getFunctionAddress("glPatchParameteri")) != 0L ? 1 : 0) & ((this.GL40_glPatchParameterfv_pointer = GLContext.getFunctionAddress("glPatchParameterfv")) != 0L ? 1 : 0) & ((this.GL40_glBindTransformFeedback_pointer = GLContext.getFunctionAddress("glBindTransformFeedback")) != 0L ? 1 : 0) & ((this.GL40_glDeleteTransformFeedbacks_pointer = GLContext.getFunctionAddress("glDeleteTransformFeedbacks")) != 0L ? 1 : 0) & ((this.GL40_glGenTransformFeedbacks_pointer = GLContext.getFunctionAddress("glGenTransformFeedbacks")) != 0L ? 1 : 0) & ((this.GL40_glIsTransformFeedback_pointer = GLContext.getFunctionAddress("glIsTransformFeedback")) != 0L ? 1 : 0) & ((this.GL40_glPauseTransformFeedback_pointer = GLContext.getFunctionAddress("glPauseTransformFeedback")) != 0L ? 1 : 0) & ((this.GL40_glResumeTransformFeedback_pointer = GLContext.getFunctionAddress("glResumeTransformFeedback")) != 0L ? 1 : 0) & ((this.GL40_glDrawTransformFeedback_pointer = GLContext.getFunctionAddress("glDrawTransformFeedback")) != 0L ? 1 : 0) & ((this.GL40_glDrawTransformFeedbackStream_pointer = GLContext.getFunctionAddress("glDrawTransformFeedbackStream")) != 0L ? 1 : 0) & ((this.GL40_glBeginQueryIndexed_pointer = GLContext.getFunctionAddress("glBeginQueryIndexed")) != 0L ? 1 : 0) & ((this.GL40_glEndQueryIndexed_pointer = GLContext.getFunctionAddress("glEndQueryIndexed")) != 0L ? 1 : 0) & ((this.GL40_glGetQueryIndexediv_pointer = GLContext.getFunctionAddress("glGetQueryIndexediv")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean GREMEDY_string_marker_initNativeFunctionAddresses()
/*      */   {
/* 3968 */     return (this.GREMEDY_string_marker_glStringMarkerGREMEDY_pointer = GLContext.getFunctionAddress("glStringMarkerGREMEDY")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean NV_conditional_render_initNativeFunctionAddresses()
/*      */   {
/* 3973 */     return ((this.NV_conditional_render_glBeginConditionalRenderNV_pointer = GLContext.getFunctionAddress("glBeginConditionalRenderNV")) != 0L ? 1 : 0) & ((this.NV_conditional_render_glEndConditionalRenderNV_pointer = GLContext.getFunctionAddress("glEndConditionalRenderNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_copy_image_initNativeFunctionAddresses()
/*      */   {
/* 3979 */     return (this.NV_copy_image_glCopyImageSubDataNV_pointer = GLContext.getFunctionAddress("glCopyImageSubDataNV")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean NV_depth_buffer_float_initNativeFunctionAddresses()
/*      */   {
/* 3984 */     return ((this.NV_depth_buffer_float_glDepthRangedNV_pointer = GLContext.getFunctionAddress("glDepthRangedNV")) != 0L ? 1 : 0) & ((this.NV_depth_buffer_float_glClearDepthdNV_pointer = GLContext.getFunctionAddress("glClearDepthdNV")) != 0L ? 1 : 0) & ((this.NV_depth_buffer_float_glDepthBoundsdNV_pointer = GLContext.getFunctionAddress("glDepthBoundsdNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_evaluators_initNativeFunctionAddresses()
/*      */   {
/* 3991 */     return ((this.NV_evaluators_glGetMapControlPointsNV_pointer = GLContext.getFunctionAddress("glGetMapControlPointsNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glMapControlPointsNV_pointer = GLContext.getFunctionAddress("glMapControlPointsNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glMapParameterfvNV_pointer = GLContext.getFunctionAddress("glMapParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glMapParameterivNV_pointer = GLContext.getFunctionAddress("glMapParameterivNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glGetMapParameterfvNV_pointer = GLContext.getFunctionAddress("glGetMapParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glGetMapParameterivNV_pointer = GLContext.getFunctionAddress("glGetMapParameterivNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glGetMapAttribParameterfvNV_pointer = GLContext.getFunctionAddress("glGetMapAttribParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glGetMapAttribParameterivNV_pointer = GLContext.getFunctionAddress("glGetMapAttribParameterivNV")) != 0L ? 1 : 0) & ((this.NV_evaluators_glEvalMapsNV_pointer = GLContext.getFunctionAddress("glEvalMapsNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_explicit_multisample_initNativeFunctionAddresses()
/*      */   {
/* 4004 */     return ((this.NV_explicit_multisample_glGetBooleanIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetBooleanIndexedvEXT")) != 0L ? 1 : 0) & ((this.NV_explicit_multisample_glGetIntegerIndexedvEXT_pointer = GLContext.getFunctionAddress("glGetIntegerIndexedvEXT")) != 0L ? 1 : 0) & ((this.NV_explicit_multisample_glGetMultisamplefvNV_pointer = GLContext.getFunctionAddress("glGetMultisamplefvNV")) != 0L ? 1 : 0) & ((this.NV_explicit_multisample_glSampleMaskIndexedNV_pointer = GLContext.getFunctionAddress("glSampleMaskIndexedNV")) != 0L ? 1 : 0) & ((this.NV_explicit_multisample_glTexRenderbufferNV_pointer = GLContext.getFunctionAddress("glTexRenderbufferNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_fence_initNativeFunctionAddresses()
/*      */   {
/* 4013 */     return ((this.NV_fence_glGenFencesNV_pointer = GLContext.getFunctionAddress("glGenFencesNV")) != 0L ? 1 : 0) & ((this.NV_fence_glDeleteFencesNV_pointer = GLContext.getFunctionAddress("glDeleteFencesNV")) != 0L ? 1 : 0) & ((this.NV_fence_glSetFenceNV_pointer = GLContext.getFunctionAddress("glSetFenceNV")) != 0L ? 1 : 0) & ((this.NV_fence_glTestFenceNV_pointer = GLContext.getFunctionAddress("glTestFenceNV")) != 0L ? 1 : 0) & ((this.NV_fence_glFinishFenceNV_pointer = GLContext.getFunctionAddress("glFinishFenceNV")) != 0L ? 1 : 0) & ((this.NV_fence_glIsFenceNV_pointer = GLContext.getFunctionAddress("glIsFenceNV")) != 0L ? 1 : 0) & ((this.NV_fence_glGetFenceivNV_pointer = GLContext.getFunctionAddress("glGetFenceivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_fragment_program_initNativeFunctionAddresses()
/*      */   {
/* 4024 */     return ((this.NV_fragment_program_glProgramNamedParameter4fNV_pointer = GLContext.getFunctionAddress("glProgramNamedParameter4fNV")) != 0L ? 1 : 0) & ((this.NV_fragment_program_glProgramNamedParameter4dNV_pointer = GLContext.getFunctionAddress("glProgramNamedParameter4dNV")) != 0L ? 1 : 0) & ((this.NV_fragment_program_glGetProgramNamedParameterfvNV_pointer = GLContext.getFunctionAddress("glGetProgramNamedParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_fragment_program_glGetProgramNamedParameterdvNV_pointer = GLContext.getFunctionAddress("glGetProgramNamedParameterdvNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_framebuffer_multisample_coverage_initNativeFunctionAddresses()
/*      */   {
/* 4032 */     return (this.NV_framebuffer_multisample_coverage_glRenderbufferStorageMultisampleCoverageNV_pointer = GLContext.getFunctionAddress("glRenderbufferStorageMultisampleCoverageNV")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean NV_geometry_program4_initNativeFunctionAddresses()
/*      */   {
/* 4037 */     return ((this.NV_geometry_program4_glProgramVertexLimitNV_pointer = GLContext.getFunctionAddress("glProgramVertexLimitNV")) != 0L ? 1 : 0) & ((this.NV_geometry_program4_glFramebufferTextureEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureEXT")) != 0L ? 1 : 0) & ((this.NV_geometry_program4_glFramebufferTextureLayerEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureLayerEXT")) != 0L ? 1 : 0) & ((this.NV_geometry_program4_glFramebufferTextureFaceEXT_pointer = GLContext.getFunctionAddress("glFramebufferTextureFaceEXT")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_gpu_program4_initNativeFunctionAddresses()
/*      */   {
/* 4045 */     return ((this.NV_gpu_program4_glProgramLocalParameterI4iNV_pointer = GLContext.getFunctionAddress("glProgramLocalParameterI4iNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramLocalParameterI4ivNV_pointer = GLContext.getFunctionAddress("glProgramLocalParameterI4ivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramLocalParametersI4ivNV_pointer = GLContext.getFunctionAddress("glProgramLocalParametersI4ivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramLocalParameterI4uiNV_pointer = GLContext.getFunctionAddress("glProgramLocalParameterI4uiNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramLocalParameterI4uivNV_pointer = GLContext.getFunctionAddress("glProgramLocalParameterI4uivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramLocalParametersI4uivNV_pointer = GLContext.getFunctionAddress("glProgramLocalParametersI4uivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParameterI4iNV_pointer = GLContext.getFunctionAddress("glProgramEnvParameterI4iNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParameterI4ivNV_pointer = GLContext.getFunctionAddress("glProgramEnvParameterI4ivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParametersI4ivNV_pointer = GLContext.getFunctionAddress("glProgramEnvParametersI4ivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParameterI4uiNV_pointer = GLContext.getFunctionAddress("glProgramEnvParameterI4uiNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParameterI4uivNV_pointer = GLContext.getFunctionAddress("glProgramEnvParameterI4uivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glProgramEnvParametersI4uivNV_pointer = GLContext.getFunctionAddress("glProgramEnvParametersI4uivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glGetProgramLocalParameterIivNV_pointer = GLContext.getFunctionAddress("glGetProgramLocalParameterIivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glGetProgramLocalParameterIuivNV_pointer = GLContext.getFunctionAddress("glGetProgramLocalParameterIuivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glGetProgramEnvParameterIivNV_pointer = GLContext.getFunctionAddress("glGetProgramEnvParameterIivNV")) != 0L ? 1 : 0) & ((this.NV_gpu_program4_glGetProgramEnvParameterIuivNV_pointer = GLContext.getFunctionAddress("glGetProgramEnvParameterIuivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_gpu_shader5_initNativeFunctionAddresses(Set supported_extensions)
/*      */   {
/* 4065 */     return ((this.NV_gpu_shader5_glUniform1i64NV_pointer = GLContext.getFunctionAddress("glUniform1i64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform2i64NV_pointer = GLContext.getFunctionAddress("glUniform2i64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform3i64NV_pointer = GLContext.getFunctionAddress("glUniform3i64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform4i64NV_pointer = GLContext.getFunctionAddress("glUniform4i64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform1i64vNV_pointer = GLContext.getFunctionAddress("glUniform1i64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform2i64vNV_pointer = GLContext.getFunctionAddress("glUniform2i64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform3i64vNV_pointer = GLContext.getFunctionAddress("glUniform3i64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform4i64vNV_pointer = GLContext.getFunctionAddress("glUniform4i64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform1ui64NV_pointer = GLContext.getFunctionAddress("glUniform1ui64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform2ui64NV_pointer = GLContext.getFunctionAddress("glUniform2ui64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform3ui64NV_pointer = GLContext.getFunctionAddress("glUniform3ui64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform4ui64NV_pointer = GLContext.getFunctionAddress("glUniform4ui64NV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform1ui64vNV_pointer = GLContext.getFunctionAddress("glUniform1ui64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform2ui64vNV_pointer = GLContext.getFunctionAddress("glUniform2ui64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform3ui64vNV_pointer = GLContext.getFunctionAddress("glUniform3ui64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glUniform4ui64vNV_pointer = GLContext.getFunctionAddress("glUniform4ui64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glGetUniformi64vNV_pointer = GLContext.getFunctionAddress("glGetUniformi64vNV")) != 0L ? 1 : 0) & ((this.NV_gpu_shader5_glGetUniformui64vNV_pointer = GLContext.getFunctionAddress("glGetUniformui64vNV")) != 0L ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform1i64NV_pointer = GLContext.getFunctionAddress("glProgramUniform1i64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform2i64NV_pointer = GLContext.getFunctionAddress("glProgramUniform2i64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform3i64NV_pointer = GLContext.getFunctionAddress("glProgramUniform3i64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform4i64NV_pointer = GLContext.getFunctionAddress("glProgramUniform4i64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform1i64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform1i64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform2i64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform2i64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform3i64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform3i64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform4i64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform4i64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform1ui64NV_pointer = GLContext.getFunctionAddress("glProgramUniform1ui64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform2ui64NV_pointer = GLContext.getFunctionAddress("glProgramUniform2ui64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform3ui64NV_pointer = GLContext.getFunctionAddress("glProgramUniform3ui64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform4ui64NV_pointer = GLContext.getFunctionAddress("glProgramUniform4ui64NV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform1ui64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform1ui64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform2ui64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform2ui64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform3ui64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform3ui64vNV")) != 0L) ? 1 : 0) & ((!supported_extensions.contains("EXT_direct_state_access")) || ((this.NV_gpu_shader5_glProgramUniform4ui64vNV_pointer = GLContext.getFunctionAddress("glProgramUniform4ui64vNV")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_half_float_initNativeFunctionAddresses()
/*      */   {
/* 4103 */     if (((this.NV_half_float_glVertexWeighthNV_pointer = GLContext.getFunctionAddress("glVertexWeighthNV")) != 0L) || (((this.NV_half_float_glVertexAttrib1hNV_pointer = GLContext.getFunctionAddress("glVertexAttrib1hNV")) != 0L) || (((this.NV_half_float_glVertexAttrib2hNV_pointer = GLContext.getFunctionAddress("glVertexAttrib2hNV")) != 0L) || (((this.NV_half_float_glVertexAttrib3hNV_pointer = GLContext.getFunctionAddress("glVertexAttrib3hNV")) != 0L) || (((this.NV_half_float_glVertexAttrib4hNV_pointer = GLContext.getFunctionAddress("glVertexAttrib4hNV")) != 0L) || (((this.NV_half_float_glVertexAttribs1hvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs1hvNV")) != 0L) || (((this.NV_half_float_glVertexAttribs2hvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs2hvNV")) != 0L) || (((this.NV_half_float_glVertexAttribs3hvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs3hvNV")) != 0L) || ((this.NV_half_float_glVertexAttribs4hvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs4hvNV")) == 0L)))))))));
/* 4103 */     return ((this.NV_half_float_glVertex2hNV_pointer = GLContext.getFunctionAddress("glVertex2hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glVertex3hNV_pointer = GLContext.getFunctionAddress("glVertex3hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glVertex4hNV_pointer = GLContext.getFunctionAddress("glVertex4hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glNormal3hNV_pointer = GLContext.getFunctionAddress("glNormal3hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glColor3hNV_pointer = GLContext.getFunctionAddress("glColor3hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glColor4hNV_pointer = GLContext.getFunctionAddress("glColor4hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glTexCoord1hNV_pointer = GLContext.getFunctionAddress("glTexCoord1hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glTexCoord2hNV_pointer = GLContext.getFunctionAddress("glTexCoord2hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glTexCoord3hNV_pointer = GLContext.getFunctionAddress("glTexCoord3hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glTexCoord4hNV_pointer = GLContext.getFunctionAddress("glTexCoord4hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glMultiTexCoord1hNV_pointer = GLContext.getFunctionAddress("glMultiTexCoord1hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glMultiTexCoord2hNV_pointer = GLContext.getFunctionAddress("glMultiTexCoord2hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glMultiTexCoord3hNV_pointer = GLContext.getFunctionAddress("glMultiTexCoord3hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glMultiTexCoord4hNV_pointer = GLContext.getFunctionAddress("glMultiTexCoord4hNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glFogCoordhNV_pointer = GLContext.getFunctionAddress("glFogCoordhNV")) != 0L ? 1 : 0) & ((this.NV_half_float_glSecondaryColor3hNV_pointer = GLContext.getFunctionAddress("glSecondaryColor3hNV")) != 0L ? 1 : 0) & 0x1 & 0x1 & 0x1 & 0x1 & 0x1 & 0x1 & 0x1 & 0x1 & 0x1;
/*      */   }
/*      */ 
/*      */   private boolean NV_occlusion_query_initNativeFunctionAddresses()
/*      */   {
/* 4132 */     return ((this.NV_occlusion_query_glGenOcclusionQueriesNV_pointer = GLContext.getFunctionAddress("glGenOcclusionQueriesNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glDeleteOcclusionQueriesNV_pointer = GLContext.getFunctionAddress("glDeleteOcclusionQueriesNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glIsOcclusionQueryNV_pointer = GLContext.getFunctionAddress("glIsOcclusionQueryNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glBeginOcclusionQueryNV_pointer = GLContext.getFunctionAddress("glBeginOcclusionQueryNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glEndOcclusionQueryNV_pointer = GLContext.getFunctionAddress("glEndOcclusionQueryNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glGetOcclusionQueryuivNV_pointer = GLContext.getFunctionAddress("glGetOcclusionQueryuivNV")) != 0L ? 1 : 0) & ((this.NV_occlusion_query_glGetOcclusionQueryivNV_pointer = GLContext.getFunctionAddress("glGetOcclusionQueryivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_parameter_buffer_object_initNativeFunctionAddresses()
/*      */   {
/* 4143 */     return ((this.NV_parameter_buffer_object_glProgramBufferParametersfvNV_pointer = GLContext.getFunctionAddress("glProgramBufferParametersfvNV")) != 0L ? 1 : 0) & ((this.NV_parameter_buffer_object_glProgramBufferParametersIivNV_pointer = GLContext.getFunctionAddress("glProgramBufferParametersIivNV")) != 0L ? 1 : 0) & ((this.NV_parameter_buffer_object_glProgramBufferParametersIuivNV_pointer = GLContext.getFunctionAddress("glProgramBufferParametersIuivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_pixel_data_range_initNativeFunctionAddresses()
/*      */   {
/* 4150 */     return ((this.NV_pixel_data_range_glPixelDataRangeNV_pointer = GLContext.getFunctionAddress("glPixelDataRangeNV")) != 0L ? 1 : 0) & ((this.NV_pixel_data_range_glFlushPixelDataRangeNV_pointer = GLContext.getFunctionAddress("glFlushPixelDataRangeNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_point_sprite_initNativeFunctionAddresses()
/*      */   {
/* 4156 */     return ((this.NV_point_sprite_glPointParameteriNV_pointer = GLContext.getFunctionAddress("glPointParameteriNV")) != 0L ? 1 : 0) & ((this.NV_point_sprite_glPointParameterivNV_pointer = GLContext.getFunctionAddress("glPointParameterivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_primitive_restart_initNativeFunctionAddresses()
/*      */   {
/* 4162 */     return ((this.NV_primitive_restart_glPrimitiveRestartNV_pointer = GLContext.getFunctionAddress("glPrimitiveRestartNV")) != 0L ? 1 : 0) & ((this.NV_primitive_restart_glPrimitiveRestartIndexNV_pointer = GLContext.getFunctionAddress("glPrimitiveRestartIndexNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_program_initNativeFunctionAddresses()
/*      */   {
/* 4168 */     return ((this.NV_program_glLoadProgramNV_pointer = GLContext.getFunctionAddress("glLoadProgramNV")) != 0L ? 1 : 0) & ((this.NV_program_glBindProgramNV_pointer = GLContext.getFunctionAddress("glBindProgramNV")) != 0L ? 1 : 0) & ((this.NV_program_glDeleteProgramsNV_pointer = GLContext.getFunctionAddress("glDeleteProgramsNV")) != 0L ? 1 : 0) & ((this.NV_program_glGenProgramsNV_pointer = GLContext.getFunctionAddress("glGenProgramsNV")) != 0L ? 1 : 0) & ((this.NV_program_glGetProgramivNV_pointer = GLContext.getFunctionAddress("glGetProgramivNV")) != 0L ? 1 : 0) & ((this.NV_program_glGetProgramStringNV_pointer = GLContext.getFunctionAddress("glGetProgramStringNV")) != 0L ? 1 : 0) & ((this.NV_program_glIsProgramNV_pointer = GLContext.getFunctionAddress("glIsProgramNV")) != 0L ? 1 : 0) & ((this.NV_program_glAreProgramsResidentNV_pointer = GLContext.getFunctionAddress("glAreProgramsResidentNV")) != 0L ? 1 : 0) & ((this.NV_program_glRequestResidentProgramsNV_pointer = GLContext.getFunctionAddress("glRequestResidentProgramsNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_register_combiners_initNativeFunctionAddresses()
/*      */   {
/* 4181 */     return ((this.NV_register_combiners_glCombinerParameterfNV_pointer = GLContext.getFunctionAddress("glCombinerParameterfNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glCombinerParameterfvNV_pointer = GLContext.getFunctionAddress("glCombinerParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glCombinerParameteriNV_pointer = GLContext.getFunctionAddress("glCombinerParameteriNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glCombinerParameterivNV_pointer = GLContext.getFunctionAddress("glCombinerParameterivNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glCombinerInputNV_pointer = GLContext.getFunctionAddress("glCombinerInputNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glCombinerOutputNV_pointer = GLContext.getFunctionAddress("glCombinerOutputNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glFinalCombinerInputNV_pointer = GLContext.getFunctionAddress("glFinalCombinerInputNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetCombinerInputParameterfvNV_pointer = GLContext.getFunctionAddress("glGetCombinerInputParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetCombinerInputParameterivNV_pointer = GLContext.getFunctionAddress("glGetCombinerInputParameterivNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetCombinerOutputParameterfvNV_pointer = GLContext.getFunctionAddress("glGetCombinerOutputParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetCombinerOutputParameterivNV_pointer = GLContext.getFunctionAddress("glGetCombinerOutputParameterivNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetFinalCombinerInputParameterfvNV_pointer = GLContext.getFunctionAddress("glGetFinalCombinerInputParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners_glGetFinalCombinerInputParameterivNV_pointer = GLContext.getFunctionAddress("glGetFinalCombinerInputParameterivNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_register_combiners2_initNativeFunctionAddresses()
/*      */   {
/* 4198 */     return ((this.NV_register_combiners2_glCombinerStageParameterfvNV_pointer = GLContext.getFunctionAddress("glCombinerStageParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_register_combiners2_glGetCombinerStageParameterfvNV_pointer = GLContext.getFunctionAddress("glGetCombinerStageParameterfvNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_shader_buffer_load_initNativeFunctionAddresses()
/*      */   {
/* 4204 */     return ((this.NV_shader_buffer_load_glMakeBufferResidentNV_pointer = GLContext.getFunctionAddress("glMakeBufferResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glMakeBufferNonResidentNV_pointer = GLContext.getFunctionAddress("glMakeBufferNonResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glIsBufferResidentNV_pointer = GLContext.getFunctionAddress("glIsBufferResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glMakeNamedBufferResidentNV_pointer = GLContext.getFunctionAddress("glMakeNamedBufferResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glMakeNamedBufferNonResidentNV_pointer = GLContext.getFunctionAddress("glMakeNamedBufferNonResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glIsNamedBufferResidentNV_pointer = GLContext.getFunctionAddress("glIsNamedBufferResidentNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glGetBufferParameterui64vNV_pointer = GLContext.getFunctionAddress("glGetBufferParameterui64vNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glGetNamedBufferParameterui64vNV_pointer = GLContext.getFunctionAddress("glGetNamedBufferParameterui64vNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glGetIntegerui64vNV_pointer = GLContext.getFunctionAddress("glGetIntegerui64vNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glUniformui64NV_pointer = GLContext.getFunctionAddress("glUniformui64NV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glUniformui64vNV_pointer = GLContext.getFunctionAddress("glUniformui64vNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glGetUniformui64vNV_pointer = GLContext.getFunctionAddress("glGetUniformui64vNV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glProgramUniformui64NV_pointer = GLContext.getFunctionAddress("glProgramUniformui64NV")) != 0L ? 1 : 0) & ((this.NV_shader_buffer_load_glProgramUniformui64vNV_pointer = GLContext.getFunctionAddress("glProgramUniformui64vNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_texture_barrier_initNativeFunctionAddresses()
/*      */   {
/* 4222 */     return (this.NV_texture_barrier_glTextureBarrierNV_pointer = GLContext.getFunctionAddress("glTextureBarrierNV")) != 0L;
/*      */   }
/*      */ 
/*      */   private boolean NV_transform_feedback_initNativeFunctionAddresses()
/*      */   {
/* 4227 */     return ((this.NV_transform_feedback_glBindBufferRangeNV_pointer = GLContext.getFunctionAddress("glBindBufferRangeNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glBindBufferOffsetNV_pointer = GLContext.getFunctionAddress("glBindBufferOffsetNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glBindBufferBaseNV_pointer = GLContext.getFunctionAddress("glBindBufferBaseNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glTransformFeedbackAttribsNV_pointer = GLContext.getFunctionAddress("glTransformFeedbackAttribsNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glTransformFeedbackVaryingsNV_pointer = GLContext.getFunctionAddress("glTransformFeedbackVaryingsNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glBeginTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glBeginTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glEndTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glEndTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glGetVaryingLocationNV_pointer = GLContext.getFunctionAddress("glGetVaryingLocationNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glGetActiveVaryingNV_pointer = GLContext.getFunctionAddress("glGetActiveVaryingNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glActiveVaryingNV_pointer = GLContext.getFunctionAddress("glActiveVaryingNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback_glGetTransformFeedbackVaryingNV_pointer = GLContext.getFunctionAddress("glGetTransformFeedbackVaryingNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_transform_feedback2_initNativeFunctionAddresses()
/*      */   {
/* 4242 */     return ((this.NV_transform_feedback2_glBindTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glBindTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glDeleteTransformFeedbacksNV_pointer = GLContext.getFunctionAddress("glDeleteTransformFeedbacksNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glGenTransformFeedbacksNV_pointer = GLContext.getFunctionAddress("glGenTransformFeedbacksNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glIsTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glIsTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glPauseTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glPauseTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glResumeTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glResumeTransformFeedbackNV")) != 0L ? 1 : 0) & ((this.NV_transform_feedback2_glDrawTransformFeedbackNV_pointer = GLContext.getFunctionAddress("glDrawTransformFeedbackNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_vertex_array_range_initNativeFunctionAddresses()
/*      */   {
/* 4253 */     return ((this.NV_vertex_array_range_glVertexArrayRangeNV_pointer = GLContext.getFunctionAddress("glVertexArrayRangeNV")) != 0L ? 1 : 0) & ((this.NV_vertex_array_range_glFlushVertexArrayRangeNV_pointer = GLContext.getFunctionAddress("glFlushVertexArrayRangeNV")) != 0L ? 1 : 0) & ((this.NV_vertex_array_range_glAllocateMemoryNV_pointer = GLContext.getPlatformSpecificFunctionAddress("gl", new String[] { "Windows", "Linux" }, new String[] { "wgl", "glX" }, "glAllocateMemoryNV")) != 0L ? 1 : 0) & ((this.NV_vertex_array_range_glFreeMemoryNV_pointer = GLContext.getPlatformSpecificFunctionAddress("gl", new String[] { "Windows", "Linux" }, new String[] { "wgl", "glX" }, "glFreeMemoryNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_vertex_attrib_integer_64bit_initNativeFunctionAddresses(Set supported_extensions)
/*      */   {
/* 4261 */     return ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL1i64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL1i64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL2i64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL2i64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL3i64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL3i64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL4i64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL4i64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL1i64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL1i64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL2i64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL2i64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL3i64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL3i64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL4i64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL4i64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL1ui64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL1ui64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL2ui64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL2ui64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL3ui64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL3ui64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL4ui64NV_pointer = GLContext.getFunctionAddress("glVertexAttribL4ui64NV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL1ui64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL1ui64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL2ui64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL2ui64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL3ui64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL3ui64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glVertexAttribL4ui64vNV_pointer = GLContext.getFunctionAddress("glVertexAttribL4ui64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glGetVertexAttribLi64vNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribLi64vNV")) != 0L ? 1 : 0) & ((this.NV_vertex_attrib_integer_64bit_glGetVertexAttribLui64vNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribLui64vNV")) != 0L ? 1 : 0) & ((!supported_extensions.contains("NV_vertex_buffer_unified_memory")) || ((this.NV_vertex_attrib_integer_64bit_glVertexAttribLFormatNV_pointer = GLContext.getFunctionAddress("glVertexAttribLFormatNV")) != 0L) ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_vertex_buffer_unified_memory_initNativeFunctionAddresses()
/*      */   {
/* 4284 */     return ((this.NV_vertex_buffer_unified_memory_glBufferAddressRangeNV_pointer = GLContext.getFunctionAddress("glBufferAddressRangeNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glVertexFormatNV_pointer = GLContext.getFunctionAddress("glVertexFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glNormalFormatNV_pointer = GLContext.getFunctionAddress("glNormalFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glColorFormatNV_pointer = GLContext.getFunctionAddress("glColorFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glIndexFormatNV_pointer = GLContext.getFunctionAddress("glIndexFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glTexCoordFormatNV_pointer = GLContext.getFunctionAddress("glTexCoordFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glEdgeFlagFormatNV_pointer = GLContext.getFunctionAddress("glEdgeFlagFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glSecondaryColorFormatNV_pointer = GLContext.getFunctionAddress("glSecondaryColorFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glFogCoordFormatNV_pointer = GLContext.getFunctionAddress("glFogCoordFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glVertexAttribFormatNV_pointer = GLContext.getFunctionAddress("glVertexAttribFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glVertexAttribIFormatNV_pointer = GLContext.getFunctionAddress("glVertexAttribIFormatNV")) != 0L ? 1 : 0) & ((this.NV_vertex_buffer_unified_memory_glGetIntegerui64i_vNV_pointer = GLContext.getFunctionAddress("glGetIntegerui64i_vNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private boolean NV_vertex_program_initNativeFunctionAddresses()
/*      */   {
/* 4300 */     return ((this.NV_vertex_program_glExecuteProgramNV_pointer = GLContext.getFunctionAddress("glExecuteProgramNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetProgramParameterfvNV_pointer = GLContext.getFunctionAddress("glGetProgramParameterfvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetProgramParameterdvNV_pointer = GLContext.getFunctionAddress("glGetProgramParameterdvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetTrackMatrixivNV_pointer = GLContext.getFunctionAddress("glGetTrackMatrixivNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetVertexAttribfvNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribfvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetVertexAttribdvNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribdvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetVertexAttribivNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribivNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glGetVertexAttribPointervNV_pointer = GLContext.getFunctionAddress("glGetVertexAttribPointervNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glProgramParameter4fNV_pointer = GLContext.getFunctionAddress("glProgramParameter4fNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glProgramParameter4dNV_pointer = GLContext.getFunctionAddress("glProgramParameter4dNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glProgramParameters4fvNV_pointer = GLContext.getFunctionAddress("glProgramParameters4fvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glProgramParameters4dvNV_pointer = GLContext.getFunctionAddress("glProgramParameters4dvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glTrackMatrixNV_pointer = GLContext.getFunctionAddress("glTrackMatrixNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribPointerNV_pointer = GLContext.getFunctionAddress("glVertexAttribPointerNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib1sNV_pointer = GLContext.getFunctionAddress("glVertexAttrib1sNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib1fNV_pointer = GLContext.getFunctionAddress("glVertexAttrib1fNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib1dNV_pointer = GLContext.getFunctionAddress("glVertexAttrib1dNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib2sNV_pointer = GLContext.getFunctionAddress("glVertexAttrib2sNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib2fNV_pointer = GLContext.getFunctionAddress("glVertexAttrib2fNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib2dNV_pointer = GLContext.getFunctionAddress("glVertexAttrib2dNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib3sNV_pointer = GLContext.getFunctionAddress("glVertexAttrib3sNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib3fNV_pointer = GLContext.getFunctionAddress("glVertexAttrib3fNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib3dNV_pointer = GLContext.getFunctionAddress("glVertexAttrib3dNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib4sNV_pointer = GLContext.getFunctionAddress("glVertexAttrib4sNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib4fNV_pointer = GLContext.getFunctionAddress("glVertexAttrib4fNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib4dNV_pointer = GLContext.getFunctionAddress("glVertexAttrib4dNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttrib4ubNV_pointer = GLContext.getFunctionAddress("glVertexAttrib4ubNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs1svNV_pointer = GLContext.getFunctionAddress("glVertexAttribs1svNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs1fvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs1fvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs1dvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs1dvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs2svNV_pointer = GLContext.getFunctionAddress("glVertexAttribs2svNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs2fvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs2fvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs2dvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs2dvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs3svNV_pointer = GLContext.getFunctionAddress("glVertexAttribs3svNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs3fvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs3fvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs3dvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs3dvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs4svNV_pointer = GLContext.getFunctionAddress("glVertexAttribs4svNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs4fvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs4fvNV")) != 0L ? 1 : 0) & ((this.NV_vertex_program_glVertexAttribs4dvNV_pointer = GLContext.getFunctionAddress("glVertexAttribs4dvNV")) != 0L ? 1 : 0);
/*      */   }
/*      */ 
/*      */   private static void remove(Set supported_extensions, String extension)
/*      */   {
/* 4344 */     LWJGLUtil.log(extension + " was reported as available but an entry point is missing");
/* 4345 */     supported_extensions.remove(extension);
/*      */   }
/*      */ 
/*      */   private Set initAllStubs(boolean forwardCompatible) throws LWJGLException {
/* 4349 */     this.GL11_glGetError_pointer = GLContext.getFunctionAddress("glGetError");
/* 4350 */     this.GL11_glGetString_pointer = GLContext.getFunctionAddress("glGetString");
/* 4351 */     this.GL11_glGetIntegerv_pointer = GLContext.getFunctionAddress("glGetIntegerv");
/* 4352 */     this.GL30_glGetStringi_pointer = GLContext.getFunctionAddress("glGetStringi");
/* 4353 */     GLContext.setCapabilities(this);
/* 4354 */     Set supported_extensions = new HashSet(256);
/* 4355 */     int profileMask = GLContext.getSupportedExtensions(supported_extensions);
/* 4356 */     if ((supported_extensions.contains("OpenGL31")) && (!supported_extensions.contains("GL_ARB_compatibility")) && ((profileMask & 0x2) == 0))
/* 4357 */       forwardCompatible = true;
/* 4358 */     if (!GL11_initNativeFunctionAddresses(forwardCompatible))
/* 4359 */       throw new LWJGLException("GL11 not supported");
/* 4360 */     if (supported_extensions.contains("GL_ARB_fragment_program"))
/* 4361 */       supported_extensions.add("GL_ARB_program");
/* 4362 */     if (supported_extensions.contains("GL_ARB_pixel_buffer_object"))
/* 4363 */       supported_extensions.add("GL_ARB_buffer_object");
/* 4364 */     if (supported_extensions.contains("GL_ARB_vertex_buffer_object"))
/* 4365 */       supported_extensions.add("GL_ARB_buffer_object");
/* 4366 */     if (supported_extensions.contains("GL_ARB_vertex_program"))
/* 4367 */       supported_extensions.add("GL_ARB_program");
/* 4368 */     if (supported_extensions.contains("GL_EXT_pixel_buffer_object"))
/* 4369 */       supported_extensions.add("GL_ARB_buffer_object");
/* 4370 */     if (supported_extensions.contains("GL_NV_fragment_program"))
/* 4371 */       supported_extensions.add("GL_NV_program");
/* 4372 */     if (supported_extensions.contains("GL_NV_vertex_program"))
/* 4373 */       supported_extensions.add("GL_NV_program");
/* 4374 */     if ((supported_extensions.contains("GL_AMD_draw_buffers_blend")) && (!AMD_draw_buffers_blend_initNativeFunctionAddresses()))
/* 4375 */       remove(supported_extensions, "GL_AMD_draw_buffers_blend");
/* 4376 */     if ((supported_extensions.contains("GL_AMD_performance_monitor")) && (!AMD_performance_monitor_initNativeFunctionAddresses()))
/* 4377 */       remove(supported_extensions, "GL_AMD_performance_monitor");
/* 4378 */     if ((supported_extensions.contains("GL_AMD_vertex_shader_tessellator")) && (!AMD_vertex_shader_tessellator_initNativeFunctionAddresses()))
/* 4379 */       remove(supported_extensions, "GL_AMD_vertex_shader_tessellator");
/* 4380 */     if ((supported_extensions.contains("GL_APPLE_element_array")) && (!APPLE_element_array_initNativeFunctionAddresses()))
/* 4381 */       remove(supported_extensions, "GL_APPLE_element_array");
/* 4382 */     if ((supported_extensions.contains("GL_APPLE_fence")) && (!APPLE_fence_initNativeFunctionAddresses()))
/* 4383 */       remove(supported_extensions, "GL_APPLE_fence");
/* 4384 */     if ((supported_extensions.contains("GL_APPLE_flush_buffer_range")) && (!APPLE_flush_buffer_range_initNativeFunctionAddresses()))
/* 4385 */       remove(supported_extensions, "GL_APPLE_flush_buffer_range");
/* 4386 */     if ((supported_extensions.contains("GL_APPLE_object_purgeable")) && (!APPLE_object_purgeable_initNativeFunctionAddresses()))
/* 4387 */       remove(supported_extensions, "GL_APPLE_object_purgeable");
/* 4388 */     if ((supported_extensions.contains("GL_APPLE_texture_range")) && (!APPLE_texture_range_initNativeFunctionAddresses()))
/* 4389 */       remove(supported_extensions, "GL_APPLE_texture_range");
/* 4390 */     if ((supported_extensions.contains("GL_APPLE_vertex_array_object")) && (!APPLE_vertex_array_object_initNativeFunctionAddresses()))
/* 4391 */       remove(supported_extensions, "GL_APPLE_vertex_array_object");
/* 4392 */     if ((supported_extensions.contains("GL_APPLE_vertex_array_range")) && (!APPLE_vertex_array_range_initNativeFunctionAddresses()))
/* 4393 */       remove(supported_extensions, "GL_APPLE_vertex_array_range");
/* 4394 */     if ((supported_extensions.contains("GL_APPLE_vertex_program_evaluators")) && (!APPLE_vertex_program_evaluators_initNativeFunctionAddresses()))
/* 4395 */       remove(supported_extensions, "GL_APPLE_vertex_program_evaluators");
/* 4396 */     if ((supported_extensions.contains("GL_ARB_blend_func_extended")) && (!ARB_blend_func_extended_initNativeFunctionAddresses()))
/* 4397 */       remove(supported_extensions, "GL_ARB_blend_func_extended");
/* 4398 */     if ((supported_extensions.contains("GL_ARB_buffer_object")) && (!ARB_buffer_object_initNativeFunctionAddresses()))
/* 4399 */       remove(supported_extensions, "GL_ARB_buffer_object");
/* 4400 */     if ((supported_extensions.contains("GL_ARB_color_buffer_float")) && (!ARB_color_buffer_float_initNativeFunctionAddresses()))
/* 4401 */       remove(supported_extensions, "GL_ARB_color_buffer_float");
/* 4402 */     if ((supported_extensions.contains("GL_ARB_copy_buffer")) && (!ARB_copy_buffer_initNativeFunctionAddresses()))
/* 4403 */       remove(supported_extensions, "GL_ARB_copy_buffer");
/* 4404 */     if ((supported_extensions.contains("GL_ARB_draw_buffers")) && (!ARB_draw_buffers_initNativeFunctionAddresses()))
/* 4405 */       remove(supported_extensions, "GL_ARB_draw_buffers");
/* 4406 */     if ((supported_extensions.contains("GL_ARB_draw_buffers_blend")) && (!ARB_draw_buffers_blend_initNativeFunctionAddresses()))
/* 4407 */       remove(supported_extensions, "GL_ARB_draw_buffers_blend");
/* 4408 */     if ((supported_extensions.contains("GL_ARB_draw_elements_base_vertex")) && (!ARB_draw_elements_base_vertex_initNativeFunctionAddresses()))
/* 4409 */       remove(supported_extensions, "GL_ARB_draw_elements_base_vertex");
/* 4410 */     if ((supported_extensions.contains("GL_ARB_draw_indirect")) && (!ARB_draw_indirect_initNativeFunctionAddresses()))
/* 4411 */       remove(supported_extensions, "GL_ARB_draw_indirect");
/* 4412 */     if ((supported_extensions.contains("GL_ARB_draw_instanced")) && (!ARB_draw_instanced_initNativeFunctionAddresses()))
/* 4413 */       remove(supported_extensions, "GL_ARB_draw_instanced");
/* 4414 */     if ((supported_extensions.contains("GL_ARB_framebuffer_object")) && (!ARB_framebuffer_object_initNativeFunctionAddresses()))
/* 4415 */       remove(supported_extensions, "GL_ARB_framebuffer_object");
/* 4416 */     if ((supported_extensions.contains("GL_ARB_geometry_shader4")) && (!ARB_geometry_shader4_initNativeFunctionAddresses()))
/* 4417 */       remove(supported_extensions, "GL_ARB_geometry_shader4");
/* 4418 */     if ((supported_extensions.contains("GL_ARB_gpu_shader_fp64")) && (!ARB_gpu_shader_fp64_initNativeFunctionAddresses(supported_extensions)))
/* 4419 */       remove(supported_extensions, "GL_ARB_gpu_shader_fp64");
/* 4420 */     if ((supported_extensions.contains("GL_ARB_imaging")) && (!ARB_imaging_initNativeFunctionAddresses(forwardCompatible)))
/* 4421 */       remove(supported_extensions, "GL_ARB_imaging");
/* 4422 */     if ((supported_extensions.contains("GL_ARB_instanced_arrays")) && (!ARB_instanced_arrays_initNativeFunctionAddresses()))
/* 4423 */       remove(supported_extensions, "GL_ARB_instanced_arrays");
/* 4424 */     if ((supported_extensions.contains("GL_ARB_map_buffer_range")) && (!ARB_map_buffer_range_initNativeFunctionAddresses()))
/* 4425 */       remove(supported_extensions, "GL_ARB_map_buffer_range");
/* 4426 */     if ((supported_extensions.contains("GL_ARB_matrix_palette")) && (!ARB_matrix_palette_initNativeFunctionAddresses()))
/* 4427 */       remove(supported_extensions, "GL_ARB_matrix_palette");
/* 4428 */     if ((supported_extensions.contains("GL_ARB_multisample")) && (!ARB_multisample_initNativeFunctionAddresses()))
/* 4429 */       remove(supported_extensions, "GL_ARB_multisample");
/* 4430 */     if ((supported_extensions.contains("GL_ARB_multitexture")) && (!ARB_multitexture_initNativeFunctionAddresses()))
/* 4431 */       remove(supported_extensions, "GL_ARB_multitexture");
/* 4432 */     if ((supported_extensions.contains("GL_ARB_occlusion_query")) && (!ARB_occlusion_query_initNativeFunctionAddresses()))
/* 4433 */       remove(supported_extensions, "GL_ARB_occlusion_query");
/* 4434 */     if ((supported_extensions.contains("GL_ARB_point_parameters")) && (!ARB_point_parameters_initNativeFunctionAddresses()))
/* 4435 */       remove(supported_extensions, "GL_ARB_point_parameters");
/* 4436 */     if ((supported_extensions.contains("GL_ARB_program")) && (!ARB_program_initNativeFunctionAddresses()))
/* 4437 */       remove(supported_extensions, "GL_ARB_program");
/* 4438 */     if ((supported_extensions.contains("GL_ARB_provoking_vertex")) && (!ARB_provoking_vertex_initNativeFunctionAddresses()))
/* 4439 */       remove(supported_extensions, "GL_ARB_provoking_vertex");
/* 4440 */     if ((supported_extensions.contains("GL_ARB_sample_shading")) && (!ARB_sample_shading_initNativeFunctionAddresses()))
/* 4441 */       remove(supported_extensions, "GL_ARB_sample_shading");
/* 4442 */     if ((supported_extensions.contains("GL_ARB_sampler_objects")) && (!ARB_sampler_objects_initNativeFunctionAddresses()))
/* 4443 */       remove(supported_extensions, "GL_ARB_sampler_objects");
/* 4444 */     if ((supported_extensions.contains("GL_ARB_shader_objects")) && (!ARB_shader_objects_initNativeFunctionAddresses()))
/* 4445 */       remove(supported_extensions, "GL_ARB_shader_objects");
/* 4446 */     if ((supported_extensions.contains("GL_ARB_shader_subroutine")) && (!ARB_shader_subroutine_initNativeFunctionAddresses()))
/* 4447 */       remove(supported_extensions, "GL_ARB_shader_subroutine");
/* 4448 */     if ((supported_extensions.contains("GL_ARB_shading_language_include")) && (!ARB_shading_language_include_initNativeFunctionAddresses()))
/* 4449 */       remove(supported_extensions, "GL_ARB_shading_language_include");
/* 4450 */     if ((supported_extensions.contains("GL_ARB_sync")) && (!ARB_sync_initNativeFunctionAddresses()))
/* 4451 */       remove(supported_extensions, "GL_ARB_sync");
/* 4452 */     if ((supported_extensions.contains("GL_ARB_tessellation_shader")) && (!ARB_tessellation_shader_initNativeFunctionAddresses()))
/* 4453 */       remove(supported_extensions, "GL_ARB_tessellation_shader");
/* 4454 */     if ((supported_extensions.contains("GL_ARB_texture_buffer_object")) && (!ARB_texture_buffer_object_initNativeFunctionAddresses()))
/* 4455 */       remove(supported_extensions, "GL_ARB_texture_buffer_object");
/* 4456 */     if ((supported_extensions.contains("GL_ARB_texture_compression")) && (!ARB_texture_compression_initNativeFunctionAddresses()))
/* 4457 */       remove(supported_extensions, "GL_ARB_texture_compression");
/* 4458 */     if ((supported_extensions.contains("GL_ARB_texture_multisample")) && (!ARB_texture_multisample_initNativeFunctionAddresses()))
/* 4459 */       remove(supported_extensions, "GL_ARB_texture_multisample");
/* 4460 */     if ((supported_extensions.contains("GL_ARB_timer_query")) && (!ARB_timer_query_initNativeFunctionAddresses()))
/* 4461 */       remove(supported_extensions, "GL_ARB_timer_query");
/* 4462 */     if ((supported_extensions.contains("GL_ARB_transform_feedback2")) && (!ARB_transform_feedback2_initNativeFunctionAddresses()))
/* 4463 */       remove(supported_extensions, "GL_ARB_transform_feedback2");
/* 4464 */     if ((supported_extensions.contains("GL_ARB_transform_feedback3")) && (!ARB_transform_feedback3_initNativeFunctionAddresses()))
/* 4465 */       remove(supported_extensions, "GL_ARB_transform_feedback3");
/* 4466 */     if ((supported_extensions.contains("GL_ARB_transpose_matrix")) && (!ARB_transpose_matrix_initNativeFunctionAddresses()))
/* 4467 */       remove(supported_extensions, "GL_ARB_transpose_matrix");
/* 4468 */     if ((supported_extensions.contains("GL_ARB_uniform_buffer_object")) && (!ARB_uniform_buffer_object_initNativeFunctionAddresses()))
/* 4469 */       remove(supported_extensions, "GL_ARB_uniform_buffer_object");
/* 4470 */     if ((supported_extensions.contains("GL_ARB_vertex_array_object")) && (!ARB_vertex_array_object_initNativeFunctionAddresses()))
/* 4471 */       remove(supported_extensions, "GL_ARB_vertex_array_object");
/* 4472 */     if ((supported_extensions.contains("GL_ARB_vertex_blend")) && (!ARB_vertex_blend_initNativeFunctionAddresses()))
/* 4473 */       remove(supported_extensions, "GL_ARB_vertex_blend");
/* 4474 */     if ((supported_extensions.contains("GL_ARB_vertex_program")) && (!ARB_vertex_program_initNativeFunctionAddresses()))
/* 4475 */       remove(supported_extensions, "GL_ARB_vertex_program");
/* 4476 */     if ((supported_extensions.contains("GL_ARB_vertex_shader")) && (!ARB_vertex_shader_initNativeFunctionAddresses()))
/* 4477 */       remove(supported_extensions, "GL_ARB_vertex_shader");
/* 4478 */     if ((supported_extensions.contains("GL_ARB_vertex_type_2_10_10_10_rev")) && (!ARB_vertex_type_2_10_10_10_rev_initNativeFunctionAddresses()))
/* 4479 */       remove(supported_extensions, "GL_ARB_vertex_type_2_10_10_10_rev");
/* 4480 */     if ((supported_extensions.contains("GL_ARB_window_pos")) && (!ARB_window_pos_initNativeFunctionAddresses(forwardCompatible)))
/* 4481 */       remove(supported_extensions, "GL_ARB_window_pos");
/* 4482 */     if ((supported_extensions.contains("GL_ATI_draw_buffers")) && (!ATI_draw_buffers_initNativeFunctionAddresses()))
/* 4483 */       remove(supported_extensions, "GL_ATI_draw_buffers");
/* 4484 */     if ((supported_extensions.contains("GL_ATI_element_array")) && (!ATI_element_array_initNativeFunctionAddresses()))
/* 4485 */       remove(supported_extensions, "GL_ATI_element_array");
/* 4486 */     if ((supported_extensions.contains("GL_ATI_envmap_bumpmap")) && (!ATI_envmap_bumpmap_initNativeFunctionAddresses()))
/* 4487 */       remove(supported_extensions, "GL_ATI_envmap_bumpmap");
/* 4488 */     if ((supported_extensions.contains("GL_ATI_fragment_shader")) && (!ATI_fragment_shader_initNativeFunctionAddresses()))
/* 4489 */       remove(supported_extensions, "GL_ATI_fragment_shader");
/* 4490 */     if ((supported_extensions.contains("GL_ATI_map_object_buffer")) && (!ATI_map_object_buffer_initNativeFunctionAddresses()))
/* 4491 */       remove(supported_extensions, "GL_ATI_map_object_buffer");
/* 4492 */     if ((supported_extensions.contains("GL_ATI_pn_triangles")) && (!ATI_pn_triangles_initNativeFunctionAddresses()))
/* 4493 */       remove(supported_extensions, "GL_ATI_pn_triangles");
/* 4494 */     if ((supported_extensions.contains("GL_ATI_separate_stencil")) && (!ATI_separate_stencil_initNativeFunctionAddresses()))
/* 4495 */       remove(supported_extensions, "GL_ATI_separate_stencil");
/* 4496 */     if ((supported_extensions.contains("GL_ATI_vertex_array_object")) && (!ATI_vertex_array_object_initNativeFunctionAddresses()))
/* 4497 */       remove(supported_extensions, "GL_ATI_vertex_array_object");
/* 4498 */     if ((supported_extensions.contains("GL_ATI_vertex_attrib_array_object")) && (!ATI_vertex_attrib_array_object_initNativeFunctionAddresses()))
/* 4499 */       remove(supported_extensions, "GL_ATI_vertex_attrib_array_object");
/* 4500 */     if ((supported_extensions.contains("GL_ATI_vertex_streams")) && (!ATI_vertex_streams_initNativeFunctionAddresses()))
/* 4501 */       remove(supported_extensions, "GL_ATI_vertex_streams");
/* 4502 */     if ((supported_extensions.contains("GL_EXT_bindable_uniform")) && (!EXT_bindable_uniform_initNativeFunctionAddresses()))
/* 4503 */       remove(supported_extensions, "GL_EXT_bindable_uniform");
/* 4504 */     if ((supported_extensions.contains("GL_EXT_blend_color")) && (!EXT_blend_color_initNativeFunctionAddresses()))
/* 4505 */       remove(supported_extensions, "GL_EXT_blend_color");
/* 4506 */     if ((supported_extensions.contains("GL_EXT_blend_equation_separate")) && (!EXT_blend_equation_separate_initNativeFunctionAddresses()))
/* 4507 */       remove(supported_extensions, "GL_EXT_blend_equation_separate");
/* 4508 */     if ((supported_extensions.contains("GL_EXT_blend_func_separate")) && (!EXT_blend_func_separate_initNativeFunctionAddresses()))
/* 4509 */       remove(supported_extensions, "GL_EXT_blend_func_separate");
/* 4510 */     if ((supported_extensions.contains("GL_EXT_blend_minmax")) && (!EXT_blend_minmax_initNativeFunctionAddresses()))
/* 4511 */       remove(supported_extensions, "GL_EXT_blend_minmax");
/* 4512 */     if ((supported_extensions.contains("GL_EXT_compiled_vertex_array")) && (!EXT_compiled_vertex_array_initNativeFunctionAddresses()))
/* 4513 */       remove(supported_extensions, "GL_EXT_compiled_vertex_array");
/* 4514 */     if ((supported_extensions.contains("GL_EXT_depth_bounds_test")) && (!EXT_depth_bounds_test_initNativeFunctionAddresses()))
/* 4515 */       remove(supported_extensions, "GL_EXT_depth_bounds_test");
/* 4516 */     supported_extensions.add("GL_EXT_direct_state_access");
/* 4517 */     if ((supported_extensions.contains("GL_EXT_direct_state_access")) && (!EXT_direct_state_access_initNativeFunctionAddresses(forwardCompatible, supported_extensions)))
/* 4518 */       remove(supported_extensions, "GL_EXT_direct_state_access");
/* 4519 */     if ((supported_extensions.contains("GL_EXT_draw_buffers2")) && (!EXT_draw_buffers2_initNativeFunctionAddresses()))
/* 4520 */       remove(supported_extensions, "GL_EXT_draw_buffers2");
/* 4521 */     if ((supported_extensions.contains("GL_EXT_draw_instanced")) && (!EXT_draw_instanced_initNativeFunctionAddresses()))
/* 4522 */       remove(supported_extensions, "GL_EXT_draw_instanced");
/* 4523 */     if ((supported_extensions.contains("GL_EXT_draw_range_elements")) && (!EXT_draw_range_elements_initNativeFunctionAddresses()))
/* 4524 */       remove(supported_extensions, "GL_EXT_draw_range_elements");
/* 4525 */     if ((supported_extensions.contains("GL_EXT_fog_coord")) && (!EXT_fog_coord_initNativeFunctionAddresses()))
/* 4526 */       remove(supported_extensions, "GL_EXT_fog_coord");
/* 4527 */     if ((supported_extensions.contains("GL_EXT_framebuffer_blit")) && (!EXT_framebuffer_blit_initNativeFunctionAddresses()))
/* 4528 */       remove(supported_extensions, "GL_EXT_framebuffer_blit");
/* 4529 */     if ((supported_extensions.contains("GL_EXT_framebuffer_multisample")) && (!EXT_framebuffer_multisample_initNativeFunctionAddresses()))
/* 4530 */       remove(supported_extensions, "GL_EXT_framebuffer_multisample");
/* 4531 */     if ((supported_extensions.contains("GL_EXT_framebuffer_object")) && (!EXT_framebuffer_object_initNativeFunctionAddresses()))
/* 4532 */       remove(supported_extensions, "GL_EXT_framebuffer_object");
/* 4533 */     if ((supported_extensions.contains("GL_EXT_geometry_shader4")) && (!EXT_geometry_shader4_initNativeFunctionAddresses()))
/* 4534 */       remove(supported_extensions, "GL_EXT_geometry_shader4");
/* 4535 */     if ((supported_extensions.contains("GL_EXT_gpu_program_parameters")) && (!EXT_gpu_program_parameters_initNativeFunctionAddresses()))
/* 4536 */       remove(supported_extensions, "GL_EXT_gpu_program_parameters");
/* 4537 */     if ((supported_extensions.contains("GL_EXT_gpu_shader4")) && (!EXT_gpu_shader4_initNativeFunctionAddresses()))
/* 4538 */       remove(supported_extensions, "GL_EXT_gpu_shader4");
/* 4539 */     if ((supported_extensions.contains("GL_EXT_multi_draw_arrays")) && (!EXT_multi_draw_arrays_initNativeFunctionAddresses()))
/* 4540 */       remove(supported_extensions, "GL_EXT_multi_draw_arrays");
/* 4541 */     if ((supported_extensions.contains("GL_EXT_paletted_texture")) && (!EXT_paletted_texture_initNativeFunctionAddresses()))
/* 4542 */       remove(supported_extensions, "GL_EXT_paletted_texture");
/* 4543 */     if ((supported_extensions.contains("GL_EXT_point_parameters")) && (!EXT_point_parameters_initNativeFunctionAddresses()))
/* 4544 */       remove(supported_extensions, "GL_EXT_point_parameters");
/* 4545 */     if ((supported_extensions.contains("GL_EXT_provoking_vertex")) && (!EXT_provoking_vertex_initNativeFunctionAddresses()))
/* 4546 */       remove(supported_extensions, "GL_EXT_provoking_vertex");
/* 4547 */     if ((supported_extensions.contains("GL_EXT_secondary_color")) && (!EXT_secondary_color_initNativeFunctionAddresses()))
/* 4548 */       remove(supported_extensions, "GL_EXT_secondary_color");
/* 4549 */     if ((supported_extensions.contains("GL_EXT_separate_shader_objects")) && (!EXT_separate_shader_objects_initNativeFunctionAddresses()))
/* 4550 */       remove(supported_extensions, "GL_EXT_separate_shader_objects");
/* 4551 */     if ((supported_extensions.contains("GL_EXT_shader_image_load_store")) && (!EXT_shader_image_load_store_initNativeFunctionAddresses()))
/* 4552 */       remove(supported_extensions, "GL_EXT_shader_image_load_store");
/* 4553 */     if ((supported_extensions.contains("GL_EXT_stencil_clear_tag")) && (!EXT_stencil_clear_tag_initNativeFunctionAddresses()))
/* 4554 */       remove(supported_extensions, "GL_EXT_stencil_clear_tag");
/* 4555 */     if ((supported_extensions.contains("GL_EXT_stencil_two_side")) && (!EXT_stencil_two_side_initNativeFunctionAddresses()))
/* 4556 */       remove(supported_extensions, "GL_EXT_stencil_two_side");
/* 4557 */     if ((supported_extensions.contains("GL_EXT_texture_array")) && (!EXT_texture_array_initNativeFunctionAddresses()))
/* 4558 */       remove(supported_extensions, "GL_EXT_texture_array");
/* 4559 */     if ((supported_extensions.contains("GL_EXT_texture_buffer_object")) && (!EXT_texture_buffer_object_initNativeFunctionAddresses()))
/* 4560 */       remove(supported_extensions, "GL_EXT_texture_buffer_object");
/* 4561 */     if ((supported_extensions.contains("GL_EXT_texture_integer")) && (!EXT_texture_integer_initNativeFunctionAddresses()))
/* 4562 */       remove(supported_extensions, "GL_EXT_texture_integer");
/* 4563 */     if ((supported_extensions.contains("GL_EXT_timer_query")) && (!EXT_timer_query_initNativeFunctionAddresses()))
/* 4564 */       remove(supported_extensions, "GL_EXT_timer_query");
/* 4565 */     if ((supported_extensions.contains("GL_EXT_transform_feedback")) && (!EXT_transform_feedback_initNativeFunctionAddresses()))
/* 4566 */       remove(supported_extensions, "GL_EXT_transform_feedback");
/* 4567 */     if ((supported_extensions.contains("GL_EXT_vertex_attrib_64bit")) && (!EXT_vertex_attrib_64bit_initNativeFunctionAddresses(supported_extensions)))
/* 4568 */       remove(supported_extensions, "GL_EXT_vertex_attrib_64bit");
/* 4569 */     if ((supported_extensions.contains("GL_EXT_vertex_shader")) && (!EXT_vertex_shader_initNativeFunctionAddresses()))
/* 4570 */       remove(supported_extensions, "GL_EXT_vertex_shader");
/* 4571 */     if ((supported_extensions.contains("GL_EXT_vertex_weighting")) && (!EXT_vertex_weighting_initNativeFunctionAddresses()))
/* 4572 */       remove(supported_extensions, "GL_EXT_vertex_weighting");
/* 4573 */     if ((supported_extensions.contains("OpenGL12")) && (!GL12_initNativeFunctionAddresses()))
/* 4574 */       remove(supported_extensions, "OpenGL12");
/* 4575 */     if ((supported_extensions.contains("OpenGL13")) && (!GL13_initNativeFunctionAddresses(forwardCompatible)))
/* 4576 */       remove(supported_extensions, "OpenGL13");
/* 4577 */     if ((supported_extensions.contains("OpenGL14")) && (!GL14_initNativeFunctionAddresses(forwardCompatible)))
/* 4578 */       remove(supported_extensions, "OpenGL14");
/* 4579 */     if ((supported_extensions.contains("OpenGL15")) && (!GL15_initNativeFunctionAddresses()))
/* 4580 */       remove(supported_extensions, "OpenGL15");
/* 4581 */     if ((supported_extensions.contains("OpenGL20")) && (!GL20_initNativeFunctionAddresses()))
/* 4582 */       remove(supported_extensions, "OpenGL20");
/* 4583 */     if ((supported_extensions.contains("OpenGL21")) && (!GL21_initNativeFunctionAddresses()))
/* 4584 */       remove(supported_extensions, "OpenGL21");
/* 4585 */     if ((supported_extensions.contains("OpenGL30")) && (!GL30_initNativeFunctionAddresses()))
/* 4586 */       remove(supported_extensions, "OpenGL30");
/* 4587 */     if ((supported_extensions.contains("OpenGL31")) && (!GL31_initNativeFunctionAddresses()))
/* 4588 */       remove(supported_extensions, "OpenGL31");
/* 4589 */     if ((supported_extensions.contains("OpenGL32")) && (!GL32_initNativeFunctionAddresses()))
/* 4590 */       remove(supported_extensions, "OpenGL32");
/* 4591 */     if ((supported_extensions.contains("OpenGL33")) && (!GL33_initNativeFunctionAddresses(forwardCompatible)))
/* 4592 */       remove(supported_extensions, "OpenGL33");
/* 4593 */     if ((supported_extensions.contains("OpenGL40")) && (!GL40_initNativeFunctionAddresses()))
/* 4594 */       remove(supported_extensions, "OpenGL40");
/* 4595 */     if ((supported_extensions.contains("GL_GREMEDY_string_marker")) && (!GREMEDY_string_marker_initNativeFunctionAddresses()))
/* 4596 */       remove(supported_extensions, "GL_GREMEDY_string_marker");
/* 4597 */     if ((supported_extensions.contains("GL_NV_conditional_render")) && (!NV_conditional_render_initNativeFunctionAddresses()))
/* 4598 */       remove(supported_extensions, "GL_NV_conditional_render");
/* 4599 */     if ((supported_extensions.contains("GL_NV_copy_image")) && (!NV_copy_image_initNativeFunctionAddresses()))
/* 4600 */       remove(supported_extensions, "GL_NV_copy_image");
/* 4601 */     if ((supported_extensions.contains("GL_NV_depth_buffer_float")) && (!NV_depth_buffer_float_initNativeFunctionAddresses()))
/* 4602 */       remove(supported_extensions, "GL_NV_depth_buffer_float");
/* 4603 */     if ((supported_extensions.contains("GL_NV_evaluators")) && (!NV_evaluators_initNativeFunctionAddresses()))
/* 4604 */       remove(supported_extensions, "GL_NV_evaluators");
/* 4605 */     if ((supported_extensions.contains("GL_NV_explicit_multisample")) && (!NV_explicit_multisample_initNativeFunctionAddresses()))
/* 4606 */       remove(supported_extensions, "GL_NV_explicit_multisample");
/* 4607 */     if ((supported_extensions.contains("GL_NV_fence")) && (!NV_fence_initNativeFunctionAddresses()))
/* 4608 */       remove(supported_extensions, "GL_NV_fence");
/* 4609 */     if ((supported_extensions.contains("GL_NV_fragment_program")) && (!NV_fragment_program_initNativeFunctionAddresses()))
/* 4610 */       remove(supported_extensions, "GL_NV_fragment_program");
/* 4611 */     if ((supported_extensions.contains("GL_NV_framebuffer_multisample_coverage")) && (!NV_framebuffer_multisample_coverage_initNativeFunctionAddresses()))
/* 4612 */       remove(supported_extensions, "GL_NV_framebuffer_multisample_coverage");
/* 4613 */     if ((supported_extensions.contains("GL_NV_geometry_program4")) && (!NV_geometry_program4_initNativeFunctionAddresses()))
/* 4614 */       remove(supported_extensions, "GL_NV_geometry_program4");
/* 4615 */     if ((supported_extensions.contains("GL_NV_gpu_program4")) && (!NV_gpu_program4_initNativeFunctionAddresses()))
/* 4616 */       remove(supported_extensions, "GL_NV_gpu_program4");
/* 4617 */     if ((supported_extensions.contains("GL_NV_gpu_shader5")) && (!NV_gpu_shader5_initNativeFunctionAddresses(supported_extensions)))
/* 4618 */       remove(supported_extensions, "GL_NV_gpu_shader5");
/* 4619 */     if ((supported_extensions.contains("GL_NV_half_float")) && (!NV_half_float_initNativeFunctionAddresses()))
/* 4620 */       remove(supported_extensions, "GL_NV_half_float");
/* 4621 */     if ((supported_extensions.contains("GL_NV_occlusion_query")) && (!NV_occlusion_query_initNativeFunctionAddresses()))
/* 4622 */       remove(supported_extensions, "GL_NV_occlusion_query");
/* 4623 */     if ((supported_extensions.contains("GL_NV_parameter_buffer_object")) && (!NV_parameter_buffer_object_initNativeFunctionAddresses()))
/* 4624 */       remove(supported_extensions, "GL_NV_parameter_buffer_object");
/* 4625 */     if ((supported_extensions.contains("GL_NV_pixel_data_range")) && (!NV_pixel_data_range_initNativeFunctionAddresses()))
/* 4626 */       remove(supported_extensions, "GL_NV_pixel_data_range");
/* 4627 */     if ((supported_extensions.contains("GL_NV_point_sprite")) && (!NV_point_sprite_initNativeFunctionAddresses()))
/* 4628 */       remove(supported_extensions, "GL_NV_point_sprite");
/* 4629 */     supported_extensions.add("GL_NV_primitive_restart");
/* 4630 */     if ((supported_extensions.contains("GL_NV_primitive_restart")) && (!NV_primitive_restart_initNativeFunctionAddresses()))
/* 4631 */       remove(supported_extensions, "GL_NV_primitive_restart");
/* 4632 */     if ((supported_extensions.contains("GL_NV_program")) && (!NV_program_initNativeFunctionAddresses()))
/* 4633 */       remove(supported_extensions, "GL_NV_program");
/* 4634 */     if ((supported_extensions.contains("GL_NV_register_combiners")) && (!NV_register_combiners_initNativeFunctionAddresses()))
/* 4635 */       remove(supported_extensions, "GL_NV_register_combiners");
/* 4636 */     if ((supported_extensions.contains("GL_NV_register_combiners2")) && (!NV_register_combiners2_initNativeFunctionAddresses()))
/* 4637 */       remove(supported_extensions, "GL_NV_register_combiners2");
/* 4638 */     if ((supported_extensions.contains("GL_NV_shader_buffer_load")) && (!NV_shader_buffer_load_initNativeFunctionAddresses()))
/* 4639 */       remove(supported_extensions, "GL_NV_shader_buffer_load");
/* 4640 */     if ((supported_extensions.contains("GL_NV_texture_barrier")) && (!NV_texture_barrier_initNativeFunctionAddresses()))
/* 4641 */       remove(supported_extensions, "GL_NV_texture_barrier");
/* 4642 */     if ((supported_extensions.contains("GL_NV_transform_feedback")) && (!NV_transform_feedback_initNativeFunctionAddresses()))
/* 4643 */       remove(supported_extensions, "GL_NV_transform_feedback");
/* 4644 */     if ((supported_extensions.contains("GL_NV_transform_feedback2")) && (!NV_transform_feedback2_initNativeFunctionAddresses()))
/* 4645 */       remove(supported_extensions, "GL_NV_transform_feedback2");
/* 4646 */     if ((supported_extensions.contains("GL_NV_vertex_array_range")) && (!NV_vertex_array_range_initNativeFunctionAddresses()))
/* 4647 */       remove(supported_extensions, "GL_NV_vertex_array_range");
/* 4648 */     if ((supported_extensions.contains("GL_NV_vertex_attrib_integer_64bit")) && (!NV_vertex_attrib_integer_64bit_initNativeFunctionAddresses(supported_extensions)))
/* 4649 */       remove(supported_extensions, "GL_NV_vertex_attrib_integer_64bit");
/* 4650 */     if ((supported_extensions.contains("GL_NV_vertex_buffer_unified_memory")) && (!NV_vertex_buffer_unified_memory_initNativeFunctionAddresses()))
/* 4651 */       remove(supported_extensions, "GL_NV_vertex_buffer_unified_memory");
/* 4652 */     if ((supported_extensions.contains("GL_NV_vertex_program")) && (!NV_vertex_program_initNativeFunctionAddresses()))
/* 4653 */       remove(supported_extensions, "GL_NV_vertex_program");
/* 4654 */     return supported_extensions;
/*      */   }
/*      */ 
/*      */   static void unloadAllStubs() {
/*      */   }
/*      */ 
/*      */   ContextCapabilities(boolean forwardCompatible) throws LWJGLException {
/* 4661 */     Set supported_extensions = initAllStubs(forwardCompatible);
/* 4662 */     this.GL_AMD_conservative_depth = supported_extensions.contains("GL_AMD_conservative_depth");
/* 4663 */     this.GL_AMD_draw_buffers_blend = supported_extensions.contains("GL_AMD_draw_buffers_blend");
/* 4664 */     this.GL_AMD_performance_monitor = supported_extensions.contains("GL_AMD_performance_monitor");
/* 4665 */     this.GL_AMD_seamless_cubemap_per_texture = supported_extensions.contains("GL_AMD_seamless_cubemap_per_texture");
/* 4666 */     this.GL_AMD_shader_stencil_export = supported_extensions.contains("GL_AMD_shader_stencil_export");
/* 4667 */     this.GL_AMD_texture_texture4 = supported_extensions.contains("GL_AMD_texture_texture4");
/* 4668 */     this.GL_AMD_vertex_shader_tessellator = supported_extensions.contains("GL_AMD_vertex_shader_tessellator");
/* 4669 */     this.GL_APPLE_aux_depth_stencil = supported_extensions.contains("GL_APPLE_aux_depth_stencil");
/* 4670 */     this.GL_APPLE_client_storage = supported_extensions.contains("GL_APPLE_client_storage");
/* 4671 */     this.GL_APPLE_element_array = supported_extensions.contains("GL_APPLE_element_array");
/* 4672 */     this.GL_APPLE_fence = supported_extensions.contains("GL_APPLE_fence");
/* 4673 */     this.GL_APPLE_float_pixels = supported_extensions.contains("GL_APPLE_float_pixels");
/* 4674 */     this.GL_APPLE_flush_buffer_range = supported_extensions.contains("GL_APPLE_flush_buffer_range");
/* 4675 */     this.GL_APPLE_object_purgeable = supported_extensions.contains("GL_APPLE_object_purgeable");
/* 4676 */     this.GL_APPLE_packed_pixels = supported_extensions.contains("GL_APPLE_packed_pixels");
/* 4677 */     this.GL_APPLE_rgb_422 = supported_extensions.contains("GL_APPLE_rgb_422");
/* 4678 */     this.GL_APPLE_row_bytes = supported_extensions.contains("GL_APPLE_row_bytes");
/* 4679 */     this.GL_APPLE_texture_range = supported_extensions.contains("GL_APPLE_texture_range");
/* 4680 */     this.GL_APPLE_vertex_array_object = supported_extensions.contains("GL_APPLE_vertex_array_object");
/* 4681 */     this.GL_APPLE_vertex_array_range = supported_extensions.contains("GL_APPLE_vertex_array_range");
/* 4682 */     this.GL_APPLE_vertex_program_evaluators = supported_extensions.contains("GL_APPLE_vertex_program_evaluators");
/* 4683 */     this.GL_APPLE_ycbcr_422 = supported_extensions.contains("GL_APPLE_ycbcr_422");
/* 4684 */     this.GL_ARB_blend_func_extended = supported_extensions.contains("GL_ARB_blend_func_extended");
/* 4685 */     this.GL_ARB_color_buffer_float = supported_extensions.contains("GL_ARB_color_buffer_float");
/* 4686 */     this.GL_ARB_compatibility = supported_extensions.contains("GL_ARB_compatibility");
/* 4687 */     this.GL_ARB_copy_buffer = supported_extensions.contains("GL_ARB_copy_buffer");
/* 4688 */     this.GL_ARB_depth_buffer_float = supported_extensions.contains("GL_ARB_depth_buffer_float");
/* 4689 */     this.GL_ARB_depth_clamp = supported_extensions.contains("GL_ARB_depth_clamp");
/* 4690 */     this.GL_ARB_depth_texture = supported_extensions.contains("GL_ARB_depth_texture");
/* 4691 */     this.GL_ARB_draw_buffers = supported_extensions.contains("GL_ARB_draw_buffers");
/* 4692 */     this.GL_ARB_draw_buffers_blend = supported_extensions.contains("GL_ARB_draw_buffers_blend");
/* 4693 */     this.GL_ARB_draw_elements_base_vertex = supported_extensions.contains("GL_ARB_draw_elements_base_vertex");
/* 4694 */     this.GL_ARB_draw_indirect = supported_extensions.contains("GL_ARB_draw_indirect");
/* 4695 */     this.GL_ARB_draw_instanced = supported_extensions.contains("GL_ARB_draw_instanced");
/* 4696 */     this.GL_ARB_explicit_attrib_location = supported_extensions.contains("GL_ARB_explicit_attrib_location");
/* 4697 */     this.GL_ARB_fragment_coord_conventions = supported_extensions.contains("GL_ARB_fragment_coord_conventions");
/* 4698 */     this.GL_ARB_fragment_program = ((supported_extensions.contains("GL_ARB_fragment_program")) && (supported_extensions.contains("GL_ARB_program")));
/*      */ 
/* 4700 */     this.GL_ARB_fragment_program_shadow = supported_extensions.contains("GL_ARB_fragment_program_shadow");
/* 4701 */     this.GL_ARB_fragment_shader = supported_extensions.contains("GL_ARB_fragment_shader");
/* 4702 */     this.GL_ARB_framebuffer_object = supported_extensions.contains("GL_ARB_framebuffer_object");
/* 4703 */     this.GL_ARB_framebuffer_sRGB = supported_extensions.contains("GL_ARB_framebuffer_sRGB");
/* 4704 */     this.GL_ARB_geometry_shader4 = supported_extensions.contains("GL_ARB_geometry_shader4");
/* 4705 */     this.GL_ARB_gpu_shader5 = supported_extensions.contains("GL_ARB_gpu_shader5");
/* 4706 */     this.GL_ARB_gpu_shader_fp64 = supported_extensions.contains("GL_ARB_gpu_shader_fp64");
/* 4707 */     this.GL_ARB_half_float_pixel = supported_extensions.contains("GL_ARB_half_float_pixel");
/* 4708 */     this.GL_ARB_half_float_vertex = supported_extensions.contains("GL_ARB_half_float_vertex");
/* 4709 */     this.GL_ARB_imaging = supported_extensions.contains("GL_ARB_imaging");
/* 4710 */     this.GL_ARB_instanced_arrays = supported_extensions.contains("GL_ARB_instanced_arrays");
/* 4711 */     this.GL_ARB_map_buffer_range = supported_extensions.contains("GL_ARB_map_buffer_range");
/* 4712 */     this.GL_ARB_matrix_palette = supported_extensions.contains("GL_ARB_matrix_palette");
/* 4713 */     this.GL_ARB_multisample = supported_extensions.contains("GL_ARB_multisample");
/* 4714 */     this.GL_ARB_multitexture = supported_extensions.contains("GL_ARB_multitexture");
/* 4715 */     this.GL_ARB_occlusion_query = supported_extensions.contains("GL_ARB_occlusion_query");
/* 4716 */     this.GL_ARB_occlusion_query2 = supported_extensions.contains("GL_ARB_occlusion_query2");
/* 4717 */     this.GL_ARB_pixel_buffer_object = ((supported_extensions.contains("GL_ARB_pixel_buffer_object")) && (supported_extensions.contains("GL_ARB_buffer_object")));
/*      */ 
/* 4719 */     this.GL_ARB_point_parameters = supported_extensions.contains("GL_ARB_point_parameters");
/* 4720 */     this.GL_ARB_point_sprite = supported_extensions.contains("GL_ARB_point_sprite");
/* 4721 */     this.GL_ARB_provoking_vertex = supported_extensions.contains("GL_ARB_provoking_vertex");
/* 4722 */     this.GL_ARB_sample_shading = supported_extensions.contains("GL_ARB_sample_shading");
/* 4723 */     this.GL_ARB_sampler_objects = supported_extensions.contains("GL_ARB_sampler_objects");
/* 4724 */     this.GL_ARB_seamless_cube_map = supported_extensions.contains("GL_ARB_seamless_cube_map");
/* 4725 */     this.GL_ARB_shader_bit_encoding = supported_extensions.contains("GL_ARB_shader_bit_encoding");
/* 4726 */     this.GL_ARB_shader_objects = supported_extensions.contains("GL_ARB_shader_objects");
/* 4727 */     this.GL_ARB_shader_subroutine = supported_extensions.contains("GL_ARB_shader_subroutine");
/* 4728 */     this.GL_ARB_shader_texture_lod = supported_extensions.contains("GL_ARB_shader_texture_lod");
/* 4729 */     this.GL_ARB_shading_language_100 = supported_extensions.contains("GL_ARB_shading_language_100");
/* 4730 */     this.GL_ARB_shading_language_include = supported_extensions.contains("GL_ARB_shading_language_include");
/* 4731 */     this.GL_ARB_shadow = supported_extensions.contains("GL_ARB_shadow");
/* 4732 */     this.GL_ARB_shadow_ambient = supported_extensions.contains("GL_ARB_shadow_ambient");
/* 4733 */     this.GL_ARB_sync = supported_extensions.contains("GL_ARB_sync");
/* 4734 */     this.GL_ARB_tessellation_shader = supported_extensions.contains("GL_ARB_tessellation_shader");
/* 4735 */     this.GL_ARB_texture_border_clamp = supported_extensions.contains("GL_ARB_texture_border_clamp");
/* 4736 */     this.GL_ARB_texture_buffer_object = supported_extensions.contains("GL_ARB_texture_buffer_object");
/* 4737 */     this.GL_ARB_texture_buffer_object_rgb32 = supported_extensions.contains("GL_ARB_texture_buffer_object_rgb32");
/* 4738 */     this.GL_ARB_texture_compression = supported_extensions.contains("GL_ARB_texture_compression");
/* 4739 */     this.GL_ARB_texture_compression_bptc = supported_extensions.contains("GL_ARB_texture_compression_bptc");
/* 4740 */     this.GL_ARB_texture_compression_rgtc = supported_extensions.contains("GL_ARB_texture_compression_rgtc");
/* 4741 */     this.GL_ARB_texture_cube_map = supported_extensions.contains("GL_ARB_texture_cube_map");
/* 4742 */     this.GL_ARB_texture_cube_map_array = supported_extensions.contains("GL_ARB_texture_cube_map_array");
/* 4743 */     this.GL_ARB_texture_env_add = supported_extensions.contains("GL_ARB_texture_env_add");
/* 4744 */     this.GL_ARB_texture_env_combine = supported_extensions.contains("GL_ARB_texture_env_combine");
/* 4745 */     this.GL_ARB_texture_env_crossbar = supported_extensions.contains("GL_ARB_texture_env_crossbar");
/* 4746 */     this.GL_ARB_texture_env_dot3 = supported_extensions.contains("GL_ARB_texture_env_dot3");
/* 4747 */     this.GL_ARB_texture_float = supported_extensions.contains("GL_ARB_texture_float");
/* 4748 */     this.GL_ARB_texture_gather = supported_extensions.contains("GL_ARB_texture_gather");
/* 4749 */     this.GL_ARB_texture_mirrored_repeat = supported_extensions.contains("GL_ARB_texture_mirrored_repeat");
/* 4750 */     this.GL_ARB_texture_multisample = supported_extensions.contains("GL_ARB_texture_multisample");
/* 4751 */     this.GL_ARB_texture_non_power_of_two = supported_extensions.contains("GL_ARB_texture_non_power_of_two");
/* 4752 */     this.GL_ARB_texture_query_lod = supported_extensions.contains("GL_ARB_texture_query_lod");
/* 4753 */     this.GL_ARB_texture_rectangle = supported_extensions.contains("GL_ARB_texture_rectangle");
/* 4754 */     this.GL_ARB_texture_rg = supported_extensions.contains("GL_ARB_texture_rg");
/* 4755 */     this.GL_ARB_texture_rgb10_a2ui = supported_extensions.contains("GL_ARB_texture_rgb10_a2ui");
/* 4756 */     this.GL_ARB_texture_swizzle = supported_extensions.contains("GL_ARB_texture_swizzle");
/* 4757 */     this.GL_ARB_timer_query = supported_extensions.contains("GL_ARB_timer_query");
/* 4758 */     this.GL_ARB_transform_feedback2 = supported_extensions.contains("GL_ARB_transform_feedback2");
/* 4759 */     this.GL_ARB_transform_feedback3 = supported_extensions.contains("GL_ARB_transform_feedback3");
/* 4760 */     this.GL_ARB_transpose_matrix = supported_extensions.contains("GL_ARB_transpose_matrix");
/* 4761 */     this.GL_ARB_uniform_buffer_object = supported_extensions.contains("GL_ARB_uniform_buffer_object");
/* 4762 */     this.GL_ARB_vertex_array_bgra = supported_extensions.contains("GL_ARB_vertex_array_bgra");
/* 4763 */     this.GL_ARB_vertex_array_object = supported_extensions.contains("GL_ARB_vertex_array_object");
/* 4764 */     this.GL_ARB_vertex_blend = supported_extensions.contains("GL_ARB_vertex_blend");
/* 4765 */     this.GL_ARB_vertex_buffer_object = ((supported_extensions.contains("GL_ARB_vertex_buffer_object")) && (supported_extensions.contains("GL_ARB_buffer_object")));
/*      */ 
/* 4767 */     this.GL_ARB_vertex_program = ((supported_extensions.contains("GL_ARB_vertex_program")) && (supported_extensions.contains("GL_ARB_program")));
/*      */ 
/* 4769 */     this.GL_ARB_vertex_shader = supported_extensions.contains("GL_ARB_vertex_shader");
/* 4770 */     this.GL_ARB_vertex_type_2_10_10_10_rev = supported_extensions.contains("GL_ARB_vertex_type_2_10_10_10_rev");
/* 4771 */     this.GL_ARB_window_pos = supported_extensions.contains("GL_ARB_window_pos");
/* 4772 */     this.GL_ATI_draw_buffers = supported_extensions.contains("GL_ATI_draw_buffers");
/* 4773 */     this.GL_ATI_element_array = supported_extensions.contains("GL_ATI_element_array");
/* 4774 */     this.GL_ATI_envmap_bumpmap = supported_extensions.contains("GL_ATI_envmap_bumpmap");
/* 4775 */     this.GL_ATI_fragment_shader = supported_extensions.contains("GL_ATI_fragment_shader");
/* 4776 */     this.GL_ATI_map_object_buffer = supported_extensions.contains("GL_ATI_map_object_buffer");
/* 4777 */     this.GL_ATI_meminfo = supported_extensions.contains("GL_ATI_meminfo");
/* 4778 */     this.GL_ATI_pn_triangles = supported_extensions.contains("GL_ATI_pn_triangles");
/* 4779 */     this.GL_ATI_separate_stencil = supported_extensions.contains("GL_ATI_separate_stencil");
/* 4780 */     this.GL_ATI_shader_texture_lod = supported_extensions.contains("GL_ATI_shader_texture_lod");
/* 4781 */     this.GL_ATI_text_fragment_shader = supported_extensions.contains("GL_ATI_text_fragment_shader");
/* 4782 */     this.GL_ATI_texture_compression_3dc = supported_extensions.contains("GL_ATI_texture_compression_3dc");
/* 4783 */     this.GL_ATI_texture_env_combine3 = supported_extensions.contains("GL_ATI_texture_env_combine3");
/* 4784 */     this.GL_ATI_texture_float = supported_extensions.contains("GL_ATI_texture_float");
/* 4785 */     this.GL_ATI_texture_mirror_once = supported_extensions.contains("GL_ATI_texture_mirror_once");
/* 4786 */     this.GL_ATI_vertex_array_object = supported_extensions.contains("GL_ATI_vertex_array_object");
/* 4787 */     this.GL_ATI_vertex_attrib_array_object = supported_extensions.contains("GL_ATI_vertex_attrib_array_object");
/* 4788 */     this.GL_ATI_vertex_streams = supported_extensions.contains("GL_ATI_vertex_streams");
/* 4789 */     this.GL_EXT_abgr = supported_extensions.contains("GL_EXT_abgr");
/* 4790 */     this.GL_EXT_bgra = supported_extensions.contains("GL_EXT_bgra");
/* 4791 */     this.GL_EXT_bindable_uniform = supported_extensions.contains("GL_EXT_bindable_uniform");
/* 4792 */     this.GL_EXT_blend_color = supported_extensions.contains("GL_EXT_blend_color");
/* 4793 */     this.GL_EXT_blend_equation_separate = supported_extensions.contains("GL_EXT_blend_equation_separate");
/* 4794 */     this.GL_EXT_blend_func_separate = supported_extensions.contains("GL_EXT_blend_func_separate");
/* 4795 */     this.GL_EXT_blend_minmax = supported_extensions.contains("GL_EXT_blend_minmax");
/* 4796 */     this.GL_EXT_blend_subtract = supported_extensions.contains("GL_EXT_blend_subtract");
/* 4797 */     this.GL_EXT_Cg_shader = supported_extensions.contains("GL_EXT_Cg_shader");
/* 4798 */     this.GL_EXT_compiled_vertex_array = supported_extensions.contains("GL_EXT_compiled_vertex_array");
/* 4799 */     this.GL_EXT_depth_bounds_test = supported_extensions.contains("GL_EXT_depth_bounds_test");
/* 4800 */     this.GL_EXT_direct_state_access = supported_extensions.contains("GL_EXT_direct_state_access");
/* 4801 */     this.GL_EXT_draw_buffers2 = supported_extensions.contains("GL_EXT_draw_buffers2");
/* 4802 */     this.GL_EXT_draw_instanced = supported_extensions.contains("GL_EXT_draw_instanced");
/* 4803 */     this.GL_EXT_draw_range_elements = supported_extensions.contains("GL_EXT_draw_range_elements");
/* 4804 */     this.GL_EXT_fog_coord = supported_extensions.contains("GL_EXT_fog_coord");
/* 4805 */     this.GL_EXT_framebuffer_blit = supported_extensions.contains("GL_EXT_framebuffer_blit");
/* 4806 */     this.GL_EXT_framebuffer_multisample = supported_extensions.contains("GL_EXT_framebuffer_multisample");
/* 4807 */     this.GL_EXT_framebuffer_object = supported_extensions.contains("GL_EXT_framebuffer_object");
/* 4808 */     this.GL_EXT_framebuffer_sRGB = supported_extensions.contains("GL_EXT_framebuffer_sRGB");
/* 4809 */     this.GL_EXT_geometry_shader4 = supported_extensions.contains("GL_EXT_geometry_shader4");
/* 4810 */     this.GL_EXT_gpu_program_parameters = supported_extensions.contains("GL_EXT_gpu_program_parameters");
/* 4811 */     this.GL_EXT_gpu_shader4 = supported_extensions.contains("GL_EXT_gpu_shader4");
/* 4812 */     this.GL_EXT_multi_draw_arrays = supported_extensions.contains("GL_EXT_multi_draw_arrays");
/* 4813 */     this.GL_EXT_packed_depth_stencil = supported_extensions.contains("GL_EXT_packed_depth_stencil");
/* 4814 */     this.GL_EXT_packed_float = supported_extensions.contains("GL_EXT_packed_float");
/* 4815 */     this.GL_EXT_packed_pixels = supported_extensions.contains("GL_EXT_packed_pixels");
/* 4816 */     this.GL_EXT_paletted_texture = supported_extensions.contains("GL_EXT_paletted_texture");
/* 4817 */     this.GL_EXT_pixel_buffer_object = ((supported_extensions.contains("GL_EXT_pixel_buffer_object")) && (supported_extensions.contains("GL_ARB_buffer_object")));
/*      */ 
/* 4819 */     this.GL_EXT_point_parameters = supported_extensions.contains("GL_EXT_point_parameters");
/* 4820 */     this.GL_EXT_provoking_vertex = supported_extensions.contains("GL_EXT_provoking_vertex");
/* 4821 */     this.GL_EXT_rescale_normal = supported_extensions.contains("GL_EXT_rescale_normal");
/* 4822 */     this.GL_EXT_secondary_color = supported_extensions.contains("GL_EXT_secondary_color");
/* 4823 */     this.GL_EXT_separate_shader_objects = supported_extensions.contains("GL_EXT_separate_shader_objects");
/* 4824 */     this.GL_EXT_separate_specular_color = supported_extensions.contains("GL_EXT_separate_specular_color");
/* 4825 */     this.GL_EXT_shader_image_load_store = supported_extensions.contains("GL_EXT_shader_image_load_store");
/* 4826 */     this.GL_EXT_shadow_funcs = supported_extensions.contains("GL_EXT_shadow_funcs");
/* 4827 */     this.GL_EXT_shared_texture_palette = supported_extensions.contains("GL_EXT_shared_texture_palette");
/* 4828 */     this.GL_EXT_stencil_clear_tag = supported_extensions.contains("GL_EXT_stencil_clear_tag");
/* 4829 */     this.GL_EXT_stencil_two_side = supported_extensions.contains("GL_EXT_stencil_two_side");
/* 4830 */     this.GL_EXT_stencil_wrap = supported_extensions.contains("GL_EXT_stencil_wrap");
/* 4831 */     this.GL_EXT_texture_3d = supported_extensions.contains("GL_EXT_texture_3d");
/* 4832 */     this.GL_EXT_texture_array = supported_extensions.contains("GL_EXT_texture_array");
/* 4833 */     this.GL_EXT_texture_buffer_object = supported_extensions.contains("GL_EXT_texture_buffer_object");
/* 4834 */     this.GL_EXT_texture_compression_latc = supported_extensions.contains("GL_EXT_texture_compression_latc");
/* 4835 */     this.GL_EXT_texture_compression_rgtc = supported_extensions.contains("GL_EXT_texture_compression_rgtc");
/* 4836 */     this.GL_EXT_texture_compression_s3tc = supported_extensions.contains("GL_EXT_texture_compression_s3tc");
/* 4837 */     this.GL_EXT_texture_env_combine = supported_extensions.contains("GL_EXT_texture_env_combine");
/* 4838 */     this.GL_EXT_texture_env_dot3 = supported_extensions.contains("GL_EXT_texture_env_dot3");
/* 4839 */     this.GL_EXT_texture_filter_anisotropic = supported_extensions.contains("GL_EXT_texture_filter_anisotropic");
/* 4840 */     this.GL_EXT_texture_integer = supported_extensions.contains("GL_EXT_texture_integer");
/* 4841 */     this.GL_EXT_texture_lod_bias = supported_extensions.contains("GL_EXT_texture_lod_bias");
/* 4842 */     this.GL_EXT_texture_mirror_clamp = supported_extensions.contains("GL_EXT_texture_mirror_clamp");
/* 4843 */     this.GL_EXT_texture_rectangle = supported_extensions.contains("GL_EXT_texture_rectangle");
/* 4844 */     this.GL_EXT_texture_sRGB = supported_extensions.contains("GL_EXT_texture_sRGB");
/* 4845 */     this.GL_EXT_texture_shared_exponent = supported_extensions.contains("GL_EXT_texture_shared_exponent");
/* 4846 */     this.GL_EXT_texture_snorm = supported_extensions.contains("GL_EXT_texture_snorm");
/* 4847 */     this.GL_EXT_texture_swizzle = supported_extensions.contains("GL_EXT_texture_swizzle");
/* 4848 */     this.GL_EXT_timer_query = supported_extensions.contains("GL_EXT_timer_query");
/* 4849 */     this.GL_EXT_transform_feedback = supported_extensions.contains("GL_EXT_transform_feedback");
/* 4850 */     this.GL_EXT_vertex_array_bgra = supported_extensions.contains("GL_EXT_vertex_array_bgra");
/* 4851 */     this.GL_EXT_vertex_attrib_64bit = supported_extensions.contains("GL_EXT_vertex_attrib_64bit");
/* 4852 */     this.GL_EXT_vertex_shader = supported_extensions.contains("GL_EXT_vertex_shader");
/* 4853 */     this.GL_EXT_vertex_weighting = supported_extensions.contains("GL_EXT_vertex_weighting");
/* 4854 */     this.OpenGL11 = supported_extensions.contains("OpenGL11");
/* 4855 */     this.OpenGL12 = supported_extensions.contains("OpenGL12");
/* 4856 */     this.OpenGL13 = supported_extensions.contains("OpenGL13");
/* 4857 */     this.OpenGL14 = supported_extensions.contains("OpenGL14");
/* 4858 */     this.OpenGL15 = supported_extensions.contains("OpenGL15");
/* 4859 */     this.OpenGL20 = supported_extensions.contains("OpenGL20");
/* 4860 */     this.OpenGL21 = supported_extensions.contains("OpenGL21");
/* 4861 */     this.OpenGL30 = supported_extensions.contains("OpenGL30");
/* 4862 */     this.OpenGL31 = supported_extensions.contains("OpenGL31");
/* 4863 */     this.OpenGL32 = supported_extensions.contains("OpenGL32");
/* 4864 */     this.OpenGL33 = supported_extensions.contains("OpenGL33");
/* 4865 */     this.OpenGL40 = supported_extensions.contains("OpenGL40");
/* 4866 */     this.GL_GREMEDY_string_marker = supported_extensions.contains("GL_GREMEDY_string_marker");
/* 4867 */     this.GL_HP_occlusion_test = supported_extensions.contains("GL_HP_occlusion_test");
/* 4868 */     this.GL_IBM_rasterpos_clip = supported_extensions.contains("GL_IBM_rasterpos_clip");
/* 4869 */     this.GL_NVX_gpu_memory_info = supported_extensions.contains("GL_NVX_gpu_memory_info");
/* 4870 */     this.GL_NV_blend_square = supported_extensions.contains("GL_NV_blend_square");
/* 4871 */     this.GL_NV_conditional_render = supported_extensions.contains("GL_NV_conditional_render");
/* 4872 */     this.GL_NV_copy_depth_to_color = supported_extensions.contains("GL_NV_copy_depth_to_color");
/* 4873 */     this.GL_NV_copy_image = supported_extensions.contains("GL_NV_copy_image");
/* 4874 */     this.GL_NV_depth_buffer_float = supported_extensions.contains("GL_NV_depth_buffer_float");
/* 4875 */     this.GL_NV_depth_clamp = supported_extensions.contains("GL_NV_depth_clamp");
/* 4876 */     this.GL_NV_evaluators = supported_extensions.contains("GL_NV_evaluators");
/* 4877 */     this.GL_NV_explicit_multisample = supported_extensions.contains("GL_NV_explicit_multisample");
/* 4878 */     this.GL_NV_fence = supported_extensions.contains("GL_NV_fence");
/* 4879 */     this.GL_NV_float_buffer = supported_extensions.contains("GL_NV_float_buffer");
/* 4880 */     this.GL_NV_fog_distance = supported_extensions.contains("GL_NV_fog_distance");
/* 4881 */     this.GL_NV_fragment_program = ((supported_extensions.contains("GL_NV_fragment_program")) && (supported_extensions.contains("GL_NV_program")));
/*      */ 
/* 4883 */     this.GL_NV_fragment_program2 = supported_extensions.contains("GL_NV_fragment_program2");
/* 4884 */     this.GL_NV_fragment_program4 = supported_extensions.contains("GL_NV_fragment_program4");
/* 4885 */     this.GL_NV_fragment_program_option = supported_extensions.contains("GL_NV_fragment_program_option");
/* 4886 */     this.GL_NV_framebuffer_multisample_coverage = supported_extensions.contains("GL_NV_framebuffer_multisample_coverage");
/* 4887 */     this.GL_NV_geometry_program4 = supported_extensions.contains("GL_NV_geometry_program4");
/* 4888 */     this.GL_NV_geometry_shader4 = supported_extensions.contains("GL_NV_geometry_shader4");
/* 4889 */     this.GL_NV_gpu_program4 = supported_extensions.contains("GL_NV_gpu_program4");
/* 4890 */     this.GL_NV_gpu_program5 = supported_extensions.contains("GL_NV_gpu_program5");
/* 4891 */     this.GL_NV_gpu_shader5 = supported_extensions.contains("GL_NV_gpu_shader5");
/* 4892 */     this.GL_NV_half_float = supported_extensions.contains("GL_NV_half_float");
/* 4893 */     this.GL_NV_light_max_exponent = supported_extensions.contains("GL_NV_light_max_exponent");
/* 4894 */     this.GL_NV_multisample_filter_hint = supported_extensions.contains("GL_NV_multisample_filter_hint");
/* 4895 */     this.GL_NV_occlusion_query = supported_extensions.contains("GL_NV_occlusion_query");
/* 4896 */     this.GL_NV_packed_depth_stencil = supported_extensions.contains("GL_NV_packed_depth_stencil");
/* 4897 */     this.GL_NV_parameter_buffer_object = supported_extensions.contains("GL_NV_parameter_buffer_object");
/* 4898 */     this.GL_NV_parameter_buffer_object2 = supported_extensions.contains("GL_NV_parameter_buffer_object2");
/* 4899 */     this.GL_NV_pixel_data_range = supported_extensions.contains("GL_NV_pixel_data_range");
/* 4900 */     this.GL_NV_point_sprite = supported_extensions.contains("GL_NV_point_sprite");
/* 4901 */     this.GL_NV_primitive_restart = supported_extensions.contains("GL_NV_primitive_restart");
/* 4902 */     this.GL_NV_register_combiners = supported_extensions.contains("GL_NV_register_combiners");
/* 4903 */     this.GL_NV_register_combiners2 = supported_extensions.contains("GL_NV_register_combiners2");
/* 4904 */     this.GL_NV_shader_buffer_load = supported_extensions.contains("GL_NV_shader_buffer_load");
/* 4905 */     this.GL_NV_shader_buffer_store = supported_extensions.contains("GL_NV_shader_buffer_store");
/* 4906 */     this.GL_NV_tessellation_program5 = supported_extensions.contains("GL_NV_tessellation_program5");
/* 4907 */     this.GL_NV_texgen_reflection = supported_extensions.contains("GL_NV_texgen_reflection");
/* 4908 */     this.GL_NV_texture_barrier = supported_extensions.contains("GL_NV_texture_barrier");
/* 4909 */     this.GL_NV_texture_compression_vtc = supported_extensions.contains("GL_NV_texture_compression_vtc");
/* 4910 */     this.GL_NV_texture_env_combine4 = supported_extensions.contains("GL_NV_texture_env_combine4");
/* 4911 */     this.GL_NV_texture_expand_normal = supported_extensions.contains("GL_NV_texture_expand_normal");
/* 4912 */     this.GL_NV_texture_rectangle = supported_extensions.contains("GL_NV_texture_rectangle");
/* 4913 */     this.GL_NV_texture_shader = supported_extensions.contains("GL_NV_texture_shader");
/* 4914 */     this.GL_NV_texture_shader2 = supported_extensions.contains("GL_NV_texture_shader2");
/* 4915 */     this.GL_NV_texture_shader3 = supported_extensions.contains("GL_NV_texture_shader3");
/* 4916 */     this.GL_NV_transform_feedback = supported_extensions.contains("GL_NV_transform_feedback");
/* 4917 */     this.GL_NV_transform_feedback2 = supported_extensions.contains("GL_NV_transform_feedback2");
/* 4918 */     this.GL_NV_vertex_array_range = supported_extensions.contains("GL_NV_vertex_array_range");
/* 4919 */     this.GL_NV_vertex_array_range2 = supported_extensions.contains("GL_NV_vertex_array_range2");
/* 4920 */     this.GL_NV_vertex_attrib_integer_64bit = supported_extensions.contains("GL_NV_vertex_attrib_integer_64bit");
/* 4921 */     this.GL_NV_vertex_buffer_unified_memory = supported_extensions.contains("GL_NV_vertex_buffer_unified_memory");
/* 4922 */     this.GL_NV_vertex_program = ((supported_extensions.contains("GL_NV_vertex_program")) && (supported_extensions.contains("GL_NV_program")));
/*      */ 
/* 4924 */     this.GL_NV_vertex_program1_1 = supported_extensions.contains("GL_NV_vertex_program1_1");
/* 4925 */     this.GL_NV_vertex_program2 = supported_extensions.contains("GL_NV_vertex_program2");
/* 4926 */     this.GL_NV_vertex_program2_option = supported_extensions.contains("GL_NV_vertex_program2_option");
/* 4927 */     this.GL_NV_vertex_program3 = supported_extensions.contains("GL_NV_vertex_program3");
/* 4928 */     this.GL_NV_vertex_program4 = supported_extensions.contains("GL_NV_vertex_program4");
/* 4929 */     this.GL_SGIS_generate_mipmap = supported_extensions.contains("GL_SGIS_generate_mipmap");
/* 4930 */     this.GL_SGIS_texture_lod = supported_extensions.contains("GL_SGIS_texture_lod");
/* 4931 */     this.GL_SUN_slice_accum = supported_extensions.contains("GL_SUN_slice_accum");
/* 4932 */     this.tracker.init();
/*      */   }
/*      */ }

/* Location:           /Users/Nikita/Downloads/mcp28/jars/bin/lwjgl.jar
 * Qualified Name:     org.lwjgl.opengl.ContextCapabilities
 * JD-Core Version:    0.6.0
 */