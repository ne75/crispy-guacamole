/*     */ import java.util.Random;
/*     */ 
/*     */ public class sh extends pj
/*     */ {
/*  21 */   private int[] a = new int[256];
/*  22 */   private int[] b = new int[256];
/*     */ 
/*     */   protected sh(int paramInt1, int paramInt2) {
/*  25 */     super(paramInt1, paramInt2, ic.l);
/*     */ 
/*  27 */     a(pj.x.bi, 5, 20);
/*  28 */     a(pj.J.bi, 5, 5);
/*  29 */     a(pj.K.bi, 30, 60);
/*  30 */     a(pj.an.bi, 30, 20);
/*  31 */     a(pj.am.bi, 15, 100);
/*  32 */     a(pj.ab.bi, 30, 60);
/*     */ 
/*  34 */     b(true);
/*     */   }
/*     */ 
/*     */   private void a(int paramInt1, int paramInt2, int paramInt3) {
/*  38 */     this.a[paramInt1] = paramInt2;
/*  39 */     this.b[paramInt1] = paramInt3;
/*     */   }
/*     */ 
/*     */   public db d(dn paramdn, int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/*  44 */     return null;
/*     */   }
/*     */ 
/*     */   public boolean a()
/*     */   {
/*  52 */     return false;
/*     */   }
/*     */ 
/*     */   public boolean b() {
/*  56 */     return false;
/*     */   }
/*     */ 
/*     */   public int g() {
/*  60 */     return 3;
/*     */   }
/*     */ 
/*     */   public int a(Random paramRandom) {
/*  64 */     return 0;
/*     */   }
/*     */ 
/*     */   public int d() {
/*  68 */     return 10;
/*     */   }
/*     */ 
/*     */   public void a(dn paramdn, int paramInt1, int paramInt2, int paramInt3, Random paramRandom) {
/*  72 */     int i = paramdn.a(paramInt1, paramInt2 - 1, paramInt3) == pj.bb.bi ? 1 : 0;
/*     */ 
/*  74 */     int j = paramdn.e(paramInt1, paramInt2, paramInt3);
/*  75 */     if (j < 15) {
/*  76 */       paramdn.c(paramInt1, paramInt2, paramInt3, j + 1);
/*  77 */       paramdn.i(paramInt1, paramInt2, paramInt3, this.bi);
/*     */     }
/*  79 */     if ((i == 0) && (!h(paramdn, paramInt1, paramInt2, paramInt3))) {
/*  80 */       if ((!paramdn.g(paramInt1, paramInt2 - 1, paramInt3)) || (j > 3)) paramdn.e(paramInt1, paramInt2, paramInt3, 0);
/*  81 */       return;
/*     */     }
/*     */ 
/*  84 */     if ((i == 0) && (!c(paramdn, paramInt1, paramInt2 - 1, paramInt3)) && 
/*  85 */       (j == 15) && (paramRandom.nextInt(4) == 0)) {
/*  86 */       paramdn.e(paramInt1, paramInt2, paramInt3, 0);
/*  87 */       return;
/*     */     }
/*     */ 
/*  91 */     if ((j % 2 == 0) && (j > 2)) {
/*  92 */       a(paramdn, paramInt1 + 1, paramInt2, paramInt3, 300, paramRandom);
/*  93 */       a(paramdn, paramInt1 - 1, paramInt2, paramInt3, 300, paramRandom);
/*  94 */       a(paramdn, paramInt1, paramInt2 - 1, paramInt3, 250, paramRandom);
/*  95 */       a(paramdn, paramInt1, paramInt2 + 1, paramInt3, 250, paramRandom);
/*  96 */       a(paramdn, paramInt1, paramInt2, paramInt3 - 1, 300, paramRandom);
/*  97 */       a(paramdn, paramInt1, paramInt2, paramInt3 + 1, 300, paramRandom);
/*     */ 
/*  99 */       for (int k = paramInt1 - 1; k <= paramInt1 + 1; k++)
/* 100 */         for (int m = paramInt3 - 1; m <= paramInt3 + 1; m++)
/* 101 */           for (int n = paramInt2 - 1; n <= paramInt2 + 4; n++) {
/* 102 */             if ((k == paramInt1) && (n == paramInt2) && (m == paramInt3))
/*     */               continue;
/* 104 */             int i1 = 100;
/* 105 */             if (n > paramInt2 + 1) {
/* 106 */               i1 += (n - (paramInt2 + 1)) * 100;
/*     */             }
/*     */ 
/* 109 */             int i2 = i(paramdn, k, n, m);
/* 110 */             if ((i2 > 0) && (paramRandom.nextInt(i1) <= i2))
/* 111 */               paramdn.e(k, n, m, this.bi);
/*     */           }
/*     */     }
/*     */   }
/*     */ 
/*     */   private void a(dn paramdn, int paramInt1, int paramInt2, int paramInt3, int paramInt4, Random paramRandom)
/*     */   {
/* 120 */     int i = this.b[paramdn.a(paramInt1, paramInt2, paramInt3)];
/* 121 */     if (paramRandom.nextInt(paramInt4) < i) {
/* 122 */       int j = paramdn.a(paramInt1, paramInt2, paramInt3) == pj.am.bi ? 1 : 0;
/* 123 */       if (paramRandom.nextInt(2) == 0)
/* 124 */         paramdn.e(paramInt1, paramInt2, paramInt3, this.bi);
/*     */       else {
/* 126 */         paramdn.e(paramInt1, paramInt2, paramInt3, 0);
/*     */       }
/* 128 */       if (j != 0)
/* 129 */         pj.am.b(paramdn, paramInt1, paramInt2, paramInt3, 0);
/*     */     }
/*     */   }
/*     */ 
/*     */   private boolean h(dn paramdn, int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/* 135 */     if (c(paramdn, paramInt1 + 1, paramInt2, paramInt3)) return true;
/* 136 */     if (c(paramdn, paramInt1 - 1, paramInt2, paramInt3)) return true;
/* 137 */     if (c(paramdn, paramInt1, paramInt2 - 1, paramInt3)) return true;
/* 138 */     if (c(paramdn, paramInt1, paramInt2 + 1, paramInt3)) return true;
/* 139 */     if (c(paramdn, paramInt1, paramInt2, paramInt3 - 1)) return true;
/* 140 */     return c(paramdn, paramInt1, paramInt2, paramInt3 + 1);
/*     */   }
/*     */ 
/*     */   private int i(dn paramdn, int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/* 146 */     int i = 0;
/* 147 */     if (!paramdn.d(paramInt1, paramInt2, paramInt3)) return 0;
/*     */ 
/* 149 */     i = g(paramdn, paramInt1 + 1, paramInt2, paramInt3, i);
/* 150 */     i = g(paramdn, paramInt1 - 1, paramInt2, paramInt3, i);
/* 151 */     i = g(paramdn, paramInt1, paramInt2 - 1, paramInt3, i);
/* 152 */     i = g(paramdn, paramInt1, paramInt2 + 1, paramInt3, i);
/* 153 */     i = g(paramdn, paramInt1, paramInt2, paramInt3 - 1, i);
/* 154 */     i = g(paramdn, paramInt1, paramInt2, paramInt3 + 1, i);
/*     */ 
/* 156 */     return i;
/*     */   }
/*     */ 
/*     */   public boolean h() {
/* 160 */     return false;
/*     */   }
/*     */ 
/*     */   public boolean c(ri paramri, int paramInt1, int paramInt2, int paramInt3) {
/* 164 */     return this.a[paramri.a(paramInt1, paramInt2, paramInt3)] > 0;
/*     */   }
/*     */ 
/*     */   public int g(dn paramdn, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
/*     */   {
/* 169 */     int i = this.a[paramdn.a(paramInt1, paramInt2, paramInt3)];
/* 170 */     if (i > paramInt4) return i;
/* 171 */     return paramInt4;
/*     */   }
/*     */ 
/*     */   public boolean a(dn paramdn, int paramInt1, int paramInt2, int paramInt3)
/*     */   {
/* 176 */     return (paramdn.g(paramInt1, paramInt2 - 1, paramInt3)) || (h(paramdn, paramInt1, paramInt2, paramInt3));
/*     */   }
/*     */ 
/*     */   public void a(dn paramdn, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
/* 180 */     if ((!paramdn.g(paramInt1, paramInt2 - 1, paramInt3)) && (!h(paramdn, paramInt1, paramInt2, paramInt3))) {
/* 181 */       paramdn.e(paramInt1, paramInt2, paramInt3, 0);
/* 182 */       return;
/*     */     }
/*     */   }
/*     */ 
/*     */   public void e(dn paramdn, int paramInt1, int paramInt2, int paramInt3) {
/* 187 */     if ((paramdn.a(paramInt1, paramInt2 - 1, paramInt3) == pj.ap.bi) && 
/* 188 */       (pj.be.a_(paramdn, paramInt1, paramInt2, paramInt3))) {
/* 189 */       return;
/*     */     }
/*     */ 
/* 192 */     if ((!paramdn.g(paramInt1, paramInt2 - 1, paramInt3)) && (!h(paramdn, paramInt1, paramInt2, paramInt3))) {
/* 193 */       paramdn.e(paramInt1, paramInt2, paramInt3, 0);
/* 194 */       return;
/*     */     }
/* 196 */     paramdn.i(paramInt1, paramInt2, paramInt3, this.bi);
/*     */   }
/*     */ 
/*     */   public void b(dn paramdn, int paramInt1, int paramInt2, int paramInt3, Random paramRandom)
/*     */   {
/* 217 */     if (paramRandom.nextInt(24) == 0)
/* 218 */       paramdn.a(paramInt1 + 0.5F, paramInt2 + 0.5F, paramInt3 + 0.5F, "fire.fire", 1.0F + paramRandom.nextFloat(), paramRandom.nextFloat() * 0.7F + 0.3F);
/*     */     int i;
/*     */     float f1;
/*     */     float f2;
/*     */     float f3;
/* 221 */     if ((paramdn.g(paramInt1, paramInt2 - 1, paramInt3)) || (pj.ar.c(paramdn, paramInt1, paramInt2 - 1, paramInt3))) {
/* 222 */       for (i = 0; i < 3; i++) {
/* 223 */         f1 = paramInt1 + paramRandom.nextFloat();
/* 224 */         f2 = paramInt2 + paramRandom.nextFloat() * 0.5F + 0.5F;
/* 225 */         f3 = paramInt3 + paramRandom.nextFloat();
/* 226 */         paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */       }
/*     */     } else {
/* 229 */       if (pj.ar.c(paramdn, paramInt1 - 1, paramInt2, paramInt3)) {
/* 230 */         for (i = 0; i < 2; i++) {
/* 231 */           f1 = paramInt1 + paramRandom.nextFloat() * 0.1F;
/* 232 */           f2 = paramInt2 + paramRandom.nextFloat();
/* 233 */           f3 = paramInt3 + paramRandom.nextFloat();
/* 234 */           paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */         }
/*     */       }
/* 237 */       if (pj.ar.c(paramdn, paramInt1 + 1, paramInt2, paramInt3)) {
/* 238 */         for (i = 0; i < 2; i++) {
/* 239 */           f1 = paramInt1 + 1 - paramRandom.nextFloat() * 0.1F;
/* 240 */           f2 = paramInt2 + paramRandom.nextFloat();
/* 241 */           f3 = paramInt3 + paramRandom.nextFloat();
/* 242 */           paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */         }
/*     */       }
/* 245 */       if (pj.ar.c(paramdn, paramInt1, paramInt2, paramInt3 - 1)) {
/* 246 */         for (i = 0; i < 2; i++) {
/* 247 */           f1 = paramInt1 + paramRandom.nextFloat();
/* 248 */           f2 = paramInt2 + paramRandom.nextFloat();
/* 249 */           f3 = paramInt3 + paramRandom.nextFloat() * 0.1F;
/* 250 */           paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */         }
/*     */       }
/* 253 */       if (pj.ar.c(paramdn, paramInt1, paramInt2, paramInt3 + 1)) {
/* 254 */         for (i = 0; i < 2; i++) {
/* 255 */           f1 = paramInt1 + paramRandom.nextFloat();
/* 256 */           f2 = paramInt2 + paramRandom.nextFloat();
/* 257 */           f3 = paramInt3 + 1 - paramRandom.nextFloat() * 0.1F;
/* 258 */           paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */         }
/*     */       }
/* 261 */       if (pj.ar.c(paramdn, paramInt1, paramInt2 + 1, paramInt3))
/* 262 */         for (i = 0; i < 2; i++) {
/* 263 */           f1 = paramInt1 + paramRandom.nextFloat();
/* 264 */           f2 = paramInt2 + 1 - paramRandom.nextFloat() * 0.1F;
/* 265 */           f3 = paramInt3 + paramRandom.nextFloat();
/* 266 */           paramdn.a("largesmoke", f1, f2, f3, 0.0D, 0.0D, 0.0D);
/*     */         }
/*     */     }
/*     */   }
/*     */ }

/* Location:           /Users/Nikita/Downloads/mcp28/jars/bin/minecraft.jar
 * Qualified Name:     sh
 * JD-Core Version:    0.6.0
 */